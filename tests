
> @bitgo/utxo-lib@1.9.1 test /home/ciripel/Programe/TENTSLP/bitgo-utxo-lib
> npm run standard && npm run coverage


> @bitgo/utxo-lib@1.9.1 standard /home/ciripel/Programe/TENTSLP/bitgo-utxo-lib
> standard


> @bitgo/utxo-lib@1.9.1 coverage /home/ciripel/Programe/TENTSLP/bitgo-utxo-lib
> BITGO_UTXO_LIB_TEST_EXPECTED_COUNT=3668 nyc --check-coverage --branches 90 --functions 90 mocha --recursive



  address
    fromBase58Check
      ✓ decodes 1BgGZ9tcN4rm9KBzDn7KprQz87SZ26SAMH
      ✓ decodes 3LRW7jeCvQCRdPF8S3yUCfRAx4eqXFmdcr
      ✓ decodes MCZjFcwYJwwYqXAbd3bbnxaCVGs81cp43Z
      ✓ decodes LUxXFcwXFPpRZdMv4aYu6bDwPdC2skQ5YW
      ✓ decodes mrCDrCybB6J1vRfbwM5hemdJz73FwDBC8r
      ✓ decodes 2NByiBUaEXrhmqAsg7BbLpcQSAQs1EDwt5w
      1) decodes s1U1W3Hpkp9VgbHAsgYjSeyQsxpc6S9C38p
      2) decodes tmGX79mEeSnjMVwSnsh15LhGvCSnkHF9bbL
      ✓ decodes t1UYsZVJkLPeMjxEtACvSxfWuNmddpWfxzs
      ✓ decodes tmLPctKo9j49rtCSKpwEBpLBeykiTGomGQs
      ✓ throws on is too short
      ✓ throws on is too long
    fromBech32
      ✓ decodes BC1QW508D6QEJXTDG4Y5R3ZARVARY0C5XW7KV8F3T4
      ✓ decodes tb1qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3q0sl5k7
      ✓ decodes tb1qqqqqp399et2xygdj5xreqhjjvcmzhxw4aywxecjdzew6hylgvsesrxh6hy
      ✓ decodes ltc1qr8da6nrrpgfxtw9afyz4ct3npugtyeqrn0zg99
      ✓ decodes ltc1qd5wm03t5kcdupjuyq5jffpuacnaqahvfsdu8smf8z0u0pqdqpatqsdrn8h
      ✓ decodes tltc1qq7fzt3ek5ege3v92wh0q6wzcjr39pqswlpe36mu28f6yufark3ws2x86ht
      ✓ decode fails for undefined(Invalid checksum)
      ✓ decode fails for undefined(Mixed-case string)
      ✓ decode fails for undefined(Excess padding)
      ✓ decode fails for undefined(Excess padding)
      ✓ decode fails for undefined(Non-zero padding)
    fromOutputScript
      ✓ encodes OP_DUP OP_HASH160 751e76e81991... (bitcoin)
      ✓ encodes OP_HASH160 cd7b44d0b03f2d026d1... (bitcoin)
      ✓ encodes OP_HASH160 332bdfb31f688c0be01... (litecoin)
      ✓ encodes OP_DUP OP_HASH160 6ac624143d19... (litecoin)
      ✓ encodes OP_DUP OP_HASH160 751e76e81991... (testnet)
      ✓ encodes OP_HASH160 cd7b44d0b03f2d026d1... (testnet)
      ✓ encodes OP_0 751e76e8199196d454941c45d... (bitcoin)
      ✓ encodes OP_0 1863143c14c5166804bd19203... (testnet)
      ✓ encodes OP_0 000000c4a5cad46221b2a1879... (testnet)
      ✓ encodes OP_0 19dbdd4c630a1265b8bd49055... (litecoin)
      ✓ encodes OP_0 6d1db7c574b61bc0cb8405249... (litecoin)
      ✓ encodes OP_0 079225c736a65198b0aa75de0... (litecoinTest)
      ✓ encodes OP_DUP OP_HASH160 4AA877EF786E... (tent)
      ✓ encodes OP_DUP OP_HASH160 4AA877EF786E... (tentTest)
      ✓ encodes OP_DUP OP_HASH160 751e76e81991... (zcash)
      ✓ encodes OP_DUP OP_HASH160 751e76e81991... (zcashTest)
      ✓ throws when 031f1e68f82112b373f0fe980b3a89... has no matching Address
      ✓ throws when OP_TRUE 032487c2a32f7c8d57d2a9... has no matching Address
      ✓ throws when OP_RETURN 06deadbeef03f895a2ad... has no matching Address
      ✓ throws when OP_0 75... has no matching Address
      ✓ throws when OP_0 751e76e8199196d454941c45d... has no matching Address
    toBase58Check
      ✓ encodes 751e76e8199196d454941c45d1b3a323f1433bd6 (bitcoin)
      ✓ encodes cd7b44d0b03f2d026d1e586d7ae18903b0d385f6 (bitcoin)
      ✓ encodes 332bdfb31f688c0be0137c7c038a6d0fea0de0b6 (litecoin)
      ✓ encodes 6ac624143d19a3c91d2ac5605f0aebdfeac5b826 (litecoin)
      ✓ encodes 751e76e8199196d454941c45d1b3a323f1433bd6 (testnet)
      ✓ encodes cd7b44d0b03f2d026d1e586d7ae18903b0d385f6 (testnet)
      3) encodes 4AA877EF786E53288BDE140170200D4459F6B81F (tent)
      ✓ encodes 4AA877EF786E53288BDE140170200D4459F6B81F (tentTest)
      ✓ encodes 751e76e8199196d454941c45d1b3a323f1433bd6 (zcash)
      ✓ encodes 751e76e8199196d454941c45d1b3a323f1433bd6 (zcashTest)
    toOutputScript
      ✓ decodes OP_DUP OP_HASH160 751e76e81991... (bitcoin)
      ✓ decodes OP_HASH160 cd7b44d0b03f2d026d1... (bitcoin)
      ✓ decodes OP_HASH160 332bdfb31f688c0be01... (litecoin)
      ✓ decodes OP_DUP OP_HASH160 6ac624143d19... (litecoin)
      ✓ decodes OP_DUP OP_HASH160 751e76e81991... (testnet)
      ✓ decodes OP_HASH160 cd7b44d0b03f2d026d1... (testnet)
      ✓ decodes OP_0 751e76e8199196d454941c45d... (bitcoin)
      ✓ decodes OP_0 1863143c14c5166804bd19203... (testnet)
      ✓ decodes OP_0 000000c4a5cad46221b2a1879... (testnet)
      ✓ decodes OP_0 19dbdd4c630a1265b8bd49055... (litecoin)
      ✓ decodes OP_0 6d1db7c574b61bc0cb8405249... (litecoin)
      ✓ decodes OP_0 079225c736a65198b0aa75de0... (litecoinTest)
      4) decodes OP_DUP OP_HASH160 4AA877EF786E... (tent)
      5) decodes OP_DUP OP_HASH160 4AA877EF786E... (tentTest)
      ✓ decodes OP_DUP OP_HASH160 751e76e81991... (zcash)
      ✓ decodes OP_DUP OP_HASH160 751e76e81991... (zcashTest)
      ✓ throws when has no matching Script
      ✓ throws when has an invalid prefix
      ✓ throws when has no matching Script
      ✓ throws when has no matching Script
      ✓ throws when has no matching Script
      ✓ throws when has no matching Script
      ✓ throws when has no matching Script
      ✓ throws when has no matching Script

  Bitcoin-core
    base58
      ✓ can decode 
      ✓ can encode 
      ✓ can decode 2g
      ✓ can encode 61
      ✓ can decode a3gV
      ✓ can encode 626262
      ✓ can decode aPEr
      ✓ can encode 636363
      ✓ can decode 2cFupjhnEsSn59qHXstmK2ffpLv2
      ✓ can encode 73696d706c792061206c6f6e6720737472696e67
      ✓ can decode 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L
      ✓ can encode 00eb15231dfceb60925886b67d065299925915aeb172c06647
      ✓ can decode ABnLTmg
      ✓ can encode 516b6fcd0f
      ✓ can decode 3SEo3LWLoPntC
      ✓ can encode bf4f89001e670274dd
      ✓ can decode 3EFU7m
      ✓ can encode 572e4794
      ✓ can decode EJDM8drfXA6uyA
      ✓ can encode ecac89cad93923c02321
      ✓ can decode Rt5zm
      ✓ can encode 10c8511e
      ✓ can decode 1111111111
      ✓ can encode 00000000000000000000
    address.toBase58Check
      ✓ can export 1AGNa15ZQXAZUgFiqJ2i7Z2DPU2J6hW62i
      ✓ can export 3CMNFxN1oHBc4R1EpboAL5yzHGgE611Xou
      ✓ can export mo9ncXisMeAoXwqcV5EWuyncbmCcQN4rVs
      ✓ can export 2N2JD6wb56AfK4tfmM6PwdVmoYk2dCKf4Br
      ✓ can export 1Ax4gZtb7gAit2TivwejZHYtNNLT18PUXJ
      ✓ can export 3QjYXhTkvuj8qPaXHTTWb5wjXhdsLAAWVy
      ✓ can export n3ZddxzLvAY9o7184TB4c6FJasAybsw4HZ
      ✓ can export 2NBFNJTktNa7GZusGbDbGKRZTxdK9VVez3n
      ✓ can export 1C5bSj1iEGUgSTbziymG7Cn18ENQuT36vv
      ✓ can export 3AnNxabYGoTxYiTEZwFEnerUoeFXK2Zoks
      ✓ can export n3LnJXCqbPjghuVs8ph9CYsAe4Sh4j97wk
      ✓ can export 2NB72XtkjpnATMggui83aEtPawyyKvnbX2o
      ✓ can export 1Gqk4Tv79P91Cc1STQtU3s1W6277M2CVWu
      ✓ can export 33vt8ViH5jsr115AGkW6cEmEz9MpvJSwDk
      ✓ can export mhaMcBxNh5cqXm4aTQ6EcVbKtfL6LGyK2H
      ✓ can export 2MxgPqX1iThW3oZVk9KoFcE5M4JpiETssVN
      ✓ can export 1JwMWBVLtiqtscbaRHai4pqHokhFCbtoB4
      ✓ can export 3QCzvfL4ZRvmJFiWWBVwxfdaNBT8EtxB5y
      ✓ can export mizXiucXRCsEriQCHUkCqef9ph9qtPbZZ6
      ✓ can export 2NEWDzHWwY5ZZp8CQWbB7ouNMLqCia6YRda
      ✓ can export 19dcawoKcZdQz365WpXWMhX6QCUpR9SY4r
      ✓ can export 37Sp6Rv3y4kVd1nQ1JV5pfqXccHNyZm1x3
      ✓ can export myoqcgYiehufrsnnkqdqbp69dddVDMopJu
      ✓ can export 2N7FuwuUuoTBrDFdrAZ9KxBmtqMLxce9i1C
      ✓ can export 13p1ijLwsnrcuyqcTvJXkq2ASdXqcnEBLE
      ✓ can export 3ALJH9Y951VCGcVZYAdpA3KchoP9McEj1G
    address.fromBase58Check
      ✓ throws on 
      ✓ throws on x
      ✓ throws on 37qgekLpCCHrQuSjvX3fs496FWTGsHFHizjJAs6NPcR47aefnnCWECAhHV6E3g4YN7u7Yuwod5Y
      ✓ throws on dzb7VV1Ui55BARxv7ATxAtCUeJsANKovDGWFVgpTbhq9gvPqP3yv
      ✓ throws on MuNu7ZAEDFiHthiunm7dPjwKqrVNCM3mAz6rP9zFveQu14YA8CxExSJTHcVP9DErn6u84E6Ej7S
      ✓ throws on rPpQpYknyNQ5AEHuY6H8ijJJrYc2nDKKk9jjmKEXsWzyAQcFGpDLU2Zvsmoi8JLR7hAwoy3RQWf
      ✓ throws on 4Uc3FmN6NQ6zLBK5QQBXRBUREaaHwCZYsGCueHauuDmJpZKn6jkEskMB2Zi2CNgtb5r6epWEFfUJq
      ✓ throws on 7aQgR5DFQ25vyXmqZAWmnVCjL3PkBcdVkBUpjrjMTcghHx3E8wb
      ✓ throws on 17QpPprjeg69fW1DV8DcYYCKvWjYhXvWkov6MJ1iTTvMFj6weAqW7wybZeH57WTNxXVCRH4veVs
      ✓ throws on KxuACDviz8Xvpn1xAh9MfopySZNuyajYMZWz16Dv2mHHryznWUp3
      ✓ throws on 7nK3GSmqdXJQtdohvGfJ7KsSmn3TmGqExug49583bDAL91pVSGq5xS9SHoAYL3Wv3ijKTit65th
      ✓ throws on cTivdBmq7bay3RFGEBBuNfMh2P1pDCgRYN2Wbxmgwr4ki3jNUL2va
      ✓ throws on gjMV4vjNjyMrna4fsAr8bWxAbwtmMUBXJS3zL4NJt5qjozpbQLmAfK1uA3CquSqsZQMpoD1g2nk
      ✓ throws on emXm1naBMoVzPjbk7xpeTVMFy4oDEe25UmoyGgKEB1gGWsK8kRGs
      ✓ throws on 7VThQnNRj1o3Zyvc7XHPRrjDf8j2oivPTeDXnRPYWeYGE4pXeRJDZgf28ppti5hsHWXS2GSobdqyo
      ✓ throws on 1G9u6oCVCPh2o8m3t55ACiYvG1y5BHewUkDSdiQarDcYXXhFHYdzMdYfUAhfxn5vNZBwpgUNpso
      ✓ throws on 31QQ7ZMLkScDiB4VyZjuptr7AEc9j1SjstF7pRoLhHTGkW4Q2y9XELobQmhhWxeRvqcukGd1XCq
      ✓ throws on DHqKSnpxa8ZdQyH8keAhvLTrfkyBMQxqngcQA5N8LQ9KVt25kmGN
      ✓ throws on 2LUHcJPbwLCy9GLH1qXmfmAwvadWw4bp4PCpDfduLqV17s6iDcy1imUwhQJhAoNoN1XNmweiJP4i
      ✓ throws on 7USRzBXAnmck8fX9HmW7RAb4qt92VFX6soCnts9s74wxm4gguVhtG5of8fZGbNPJA83irHVY6bCos
      ✓ throws on 1DGezo7BfVebZxAbNT3XGujdeHyNNBF3vnficYoTSp4PfK2QaML9bHzAMxke3wdKdHYWmsMTJVu
      ✓ throws on 2D12DqDZKwCxxkzs1ZATJWvgJGhQ4cFi3WrizQ5zLAyhN5HxuAJ1yMYaJp8GuYsTLLxTAz6otCfb
      ✓ throws on 8AFJzuTujXjw1Z6M3fWhQ1ujDW7zsV4ePeVjVo7D1egERqSW9nZ
      ✓ throws on 163Q17qLbTCue8YY3AvjpUhotuaodLm2uqMhpYirsKjVqnxJRWTEoywMVY3NbBAHuhAJ2cF9GAZ
      ✓ throws on 2MnmgiRH4eGLyLc9eAqStzk7dFgBjFtUCtu
      ✓ throws on 461QQ2sYWxU7H2PV4oBwJGNch8XVTYYbZxU
      ✓ throws on 2UCtv53VttmQYkVU4VMtXB31REvQg4ABzs41AEKZ8UcB7DAfVzdkV9JDErwGwyj5AUHLkmgZeobs
      ✓ throws on cSNjAsnhgtiFMi6MtfvgscMB2Cbhn2v1FUYfviJ1CdjfidvmeW6mn
      ✓ throws on gmsow2Y6EWAFDFE1CE4Hd3Tpu2BvfmBfG1SXsuRARbnt1WjkZnFh1qGTiptWWbjsq2Q6qvpgJVj
      ✓ throws on nksUKSkzS76v8EsSgozXGMoQFiCoCHzCVajFKAXqzK5on9ZJYVHMD5CKwgmX3S3c7M1U3xabUny
      ✓ throws on L3favK1UzFGgdzYBF2oBT5tbayCo4vtVBLJhg2iYuMeePxWG8SQc
      ✓ throws on 7VxLxGGtYT6N99GdEfi6xz56xdQ8nP2dG1CavuXx7Rf2PrvNMTBNevjkfgs9JmkcGm6EXpj8ipyPZ
      ✓ throws on 2mbZwFXF6cxShaCo2czTRB62WTx9LxhTtpP
      ✓ throws on dB7cwYdcPSgiyAwKWL3JwCVwSk6epU2txw
      ✓ throws on HPhFUhUAh8ZQQisH8QQWafAxtQYju3SFTX
      ✓ throws on 4ctAH6AkHzq5ioiM1m9T3E2hiYEev5mTsB
      ✓ throws on Hn1uFi4dNexWrqARpjMqgT6cX1UsNPuV3cHdGg9ExyXw8HTKadbktRDtdeVmY3M1BxJStiL4vjJ
      ✓ throws on Sq3fDbvutABmnAHHExJDgPLQn44KnNC7UsXuT7KZecpaYDMU9Txs
      ✓ throws on 6TqWyrqdgUEYDQU1aChMuFMMEimHX44qHFzCUgGfqxGgZNMUVWJ
      ✓ throws on giqJo7oWqFxNKWyrgcBxAVHXnjJ1t6cGoEffce5Y1y7u649Noj5wJ4mmiUAKEVVrYAGg2KPB3Y4
      ✓ throws on cNzHY5e8vcmM3QVJUcjCyiKMYfeYvyueq5qCMV3kqcySoLyGLYUK
      ✓ throws on 37uTe568EYc9WLoHEd9jXEvUiWbq5LFLscNyqvAzLU5vBArUJA6eydkLmnMwJDjkL5kXc2VK7ig
      ✓ throws on EsYbG4tWWWY45G31nox838qNdzksbPySWc
      ✓ throws on nbuzhfwMoNzA3PaFnyLcRxE9bTJPDkjZ6Rf6Y6o2ckXZfzZzXBT
      ✓ throws on cQN9PoxZeCWK1x56xnz6QYAsvR11XAce3Ehp3gMUdfSQ53Y2mPzx
      ✓ throws on 1Gm3N3rkef6iMbx4voBzaxtXcmmiMTqZPhcuAepRzYUJQW4qRpEnHvMojzof42hjFRf8PE2jPde
      ✓ throws on 2TAq2tuN6x6m233bpT7yqdYQPELdTDJn1eU
      ✓ throws on ntEtnnGhqPii4joABvBtSEJG6BxjT2tUZqE8PcVYgk3RHpgxgHDCQxNbLJf7ardf1dDk2oCQ7Cf
      ✓ throws on Ky1YjoZNgQ196HJV3HpdkecfhRBmRZdMJk89Hi5KGfpfPwS2bUbfd
      ✓ throws on 2A1q1YsMZowabbvta7kTy2Fd6qN4r5ZCeG3qLpvZBMzCixMUdkN2Y4dHB1wPsZAeVXUGD83MfRED
    ECPair
      ✓ fromWIF imports 5Kd3NBUAdUnhyzenEwVLy9pBKxSwXvE9FMPyR4UKZvpe6E3AgLr
      ✓ toWIF exports eddbdc1168f1daeadbd3e44c1e3f8f5a284c2029f78ad26af98583a499de5b19 to 5Kd3NBUAdUnhyzenEwVLy9pBKxSwXvE9FMPyR4UKZvpe6E3AgLr
      ✓ fromWIF imports Kz6UJmQACJmLtaQj5A3JAge4kVTNQ8gbvXuwbmCj7bsaabudb3RD
      ✓ toWIF exports 55c9bccb9ed68446d1b75273bbce89d7fe013a8acd1625514420fb2aca1a21c4 to Kz6UJmQACJmLtaQj5A3JAge4kVTNQ8gbvXuwbmCj7bsaabudb3RD
      ✓ fromWIF imports 9213qJab2HNEpMpYNBa7wHGFKKbkDn24jpANDs2huN3yi4J11ko
      ✓ toWIF exports 36cb93b9ab1bdabf7fb9f2c04f1b9cc879933530ae7842398eef5a63a56800c2 to 9213qJab2HNEpMpYNBa7wHGFKKbkDn24jpANDs2huN3yi4J11ko
      ✓ fromWIF imports cTpB4YiyKiBcPxnefsDpbnDxFDffjqJob8wGCEDXxgQ7zQoMXJdH
      ✓ toWIF exports b9f4892c9e8282028fea1d2667c4dc5213564d41fc5783896a0d843fc15089f3 to cTpB4YiyKiBcPxnefsDpbnDxFDffjqJob8wGCEDXxgQ7zQoMXJdH
      ✓ fromWIF imports 5K494XZwps2bGyeL71pWid4noiSNA2cfCibrvRWqcHSptoFn7rc
      ✓ toWIF exports a326b95ebae30164217d7a7f57d72ab2b54e3be64928a19da0210b9568d4015e to 5K494XZwps2bGyeL71pWid4noiSNA2cfCibrvRWqcHSptoFn7rc
      ✓ fromWIF imports L1RrrnXkcKut5DEMwtDthjwRcTTwED36thyL1DebVrKuwvohjMNi
      ✓ toWIF exports 7d998b45c219a1e38e99e7cbd312ef67f77a455a9b50c730c27f02c6f730dfb4 to L1RrrnXkcKut5DEMwtDthjwRcTTwED36thyL1DebVrKuwvohjMNi
      ✓ fromWIF imports 93DVKyFYwSN6wEo3E2fCrFPUp17FtrtNi2Lf7n4G3garFb16CRj
      ✓ toWIF exports d6bca256b5abc5602ec2e1c121a08b0da2556587430bcf7e1898af2224885203 to 93DVKyFYwSN6wEo3E2fCrFPUp17FtrtNi2Lf7n4G3garFb16CRj
      ✓ fromWIF imports cTDVKtMGVYWTHCb1AFjmVbEbWjvKpKqKgMaR3QJxToMSQAhmCeTN
      ✓ toWIF exports a81ca4e8f90181ec4b61b6a7eb998af17b2cb04de8a03b504b9e34c4c61db7d9 to cTDVKtMGVYWTHCb1AFjmVbEbWjvKpKqKgMaR3QJxToMSQAhmCeTN
      ✓ fromWIF imports 5KaBW9vNtWNhc3ZEDyNCiXLPdVPHCikRxSBWwV9NrpLLa4LsXi9
      ✓ toWIF exports e75d936d56377f432f404aabb406601f892fd49da90eb6ac558a733c93b47252 to 5KaBW9vNtWNhc3ZEDyNCiXLPdVPHCikRxSBWwV9NrpLLa4LsXi9
      ✓ fromWIF imports L1axzbSyynNYA8mCAhzxkipKkfHtAXYF4YQnhSKcLV8YXA874fgT
      ✓ toWIF exports 8248bd0375f2f75d7e274ae544fb920f51784480866b102384190b1addfbaa5c to L1axzbSyynNYA8mCAhzxkipKkfHtAXYF4YQnhSKcLV8YXA874fgT
      ✓ fromWIF imports 927CnUkUbasYtDwYwVn2j8GdTuACNnKkjZ1rpZd2yBB1CLcnXpo
      ✓ toWIF exports 44c4f6a096eac5238291a94cc24c01e3b19b8d8cef72874a079e00a242237a52 to 927CnUkUbasYtDwYwVn2j8GdTuACNnKkjZ1rpZd2yBB1CLcnXpo
      ✓ fromWIF imports cUcfCMRjiQf85YMzzQEk9d1s5A4K7xL5SmBCLrezqXFuTVefyhY7
      ✓ toWIF exports d1de707020a9059d6d3abaf85e17967c6555151143db13dbb06db78df0f15c69 to cUcfCMRjiQf85YMzzQEk9d1s5A4K7xL5SmBCLrezqXFuTVefyhY7
      ✓ fromWIF imports 5HtH6GdcwCJA4ggWEL1B3jzBBUB8HPiBi9SBc5h9i4Wk4PSeApR
      ✓ toWIF exports 091035445ef105fa1bb125eccfb1882f3fe69592265956ade751fd095033d8d0 to 5HtH6GdcwCJA4ggWEL1B3jzBBUB8HPiBi9SBc5h9i4Wk4PSeApR
      ✓ fromWIF imports L2xSYmMeVo3Zek3ZTsv9xUrXVAmrWxJ8Ua4cw8pkfbQhcEFhkXT8
      ✓ toWIF exports ab2b4bcdfc91d34dee0ae2a8c6b6668dadaeb3a88b9859743156f462325187af to L2xSYmMeVo3Zek3ZTsv9xUrXVAmrWxJ8Ua4cw8pkfbQhcEFhkXT8
      ✓ fromWIF imports 92xFEve1Z9N8Z641KQQS7ByCSb8kGjsDzw6fAmjHN1LZGKQXyMq
      ✓ toWIF exports b4204389cef18bbe2b353623cbf93e8678fbc92a475b664ae98ed594e6cf0856 to 92xFEve1Z9N8Z641KQQS7ByCSb8kGjsDzw6fAmjHN1LZGKQXyMq
      ✓ fromWIF imports cVM65tdYu1YK37tNoAyGoJTR13VBYFva1vg9FLuPAsJijGvG6NEA
      ✓ toWIF exports e7b230133f1b5489843260236b06edca25f66adb1be455fbd38d4010d48faeef to cVM65tdYu1YK37tNoAyGoJTR13VBYFva1vg9FLuPAsJijGvG6NEA
      ✓ fromWIF imports 5KQmDryMNDcisTzRp3zEq9e4awRmJrEVU1j5vFRTKpRNYPqYrMg
      ✓ toWIF exports d1fab7ab7385ad26872237f1eb9789aa25cc986bacc695e07ac571d6cdac8bc0 to 5KQmDryMNDcisTzRp3zEq9e4awRmJrEVU1j5vFRTKpRNYPqYrMg
      ✓ fromWIF imports L39Fy7AC2Hhj95gh3Yb2AU5YHh1mQSAHgpNixvm27poizcJyLtUi
      ✓ toWIF exports b0bbede33ef254e8376aceb1510253fc3550efd0fcf84dcd0c9998b288f166b3 to L39Fy7AC2Hhj95gh3Yb2AU5YHh1mQSAHgpNixvm27poizcJyLtUi
      ✓ fromWIF imports 91cTVUcgydqyZLgaANpf1fvL55FH53QMm4BsnCADVNYuWuqdVys
      ✓ toWIF exports 037f4192c630f399d9271e26c575269b1d15be553ea1a7217f0cb8513cef41cb to 91cTVUcgydqyZLgaANpf1fvL55FH53QMm4BsnCADVNYuWuqdVys
      ✓ fromWIF imports cQspfSzsgLeiJGB2u8vrAiWpCU4MxUT6JseWo2SjXy4Qbzn2fwDw
      ✓ toWIF exports 6251e205e8ad508bab5596bee086ef16cd4b239e0cc0c5d7c4e6035441e7d5de to cQspfSzsgLeiJGB2u8vrAiWpCU4MxUT6JseWo2SjXy4Qbzn2fwDw
      ✓ fromWIF imports 5KL6zEaMtPRXZKo1bbMq7JDjjo1bJuQcsgL33je3oY8uSJCR5b4
      ✓ toWIF exports c7666842503db6dc6ea061f092cfb9c388448629a6fe868d068c42a488b478ae to 5KL6zEaMtPRXZKo1bbMq7JDjjo1bJuQcsgL33je3oY8uSJCR5b4
      ✓ fromWIF imports KwV9KAfwbwt51veZWNscRTeZs9CKpojyu1MsPnaKTF5kz69H1UN2
      ✓ toWIF exports 07f0803fc5399e773555ab1e8939907e9badacc17ca129e67a2f5f2ff84351dd to KwV9KAfwbwt51veZWNscRTeZs9CKpojyu1MsPnaKTF5kz69H1UN2
      ✓ fromWIF imports 93N87D6uxSBzwXvpokpzg8FFmfQPmvX4xHoWQe3pLdYpbiwT5YV
      ✓ toWIF exports ea577acfb5d1d14d3b7b195c321566f12f87d2b77ea3a53f68df7ebf8604a801 to 93N87D6uxSBzwXvpokpzg8FFmfQPmvX4xHoWQe3pLdYpbiwT5YV
      ✓ fromWIF imports cMxXusSihaX58wpJ3tNuuUcZEQGt6DKJ1wEpxys88FFaQCYjku9h
      ✓ toWIF exports 0b3b34f0958d8a268193a9814da92c3e8b58b4a4378a542863e34ac289cd830c to cMxXusSihaX58wpJ3tNuuUcZEQGt6DKJ1wEpxys88FFaQCYjku9h
    ECPair.fromWIF
      ✓ throws on 
      ✓ throws on x
      ✓ throws on 37qgekLpCCHrQuSjvX3fs496FWTGsHFHizjJAs6NPcR47aefnnCWECAhHV6E3g4YN7u7Yuwod5Y
      ✓ throws on dzb7VV1Ui55BARxv7ATxAtCUeJsANKovDGWFVgpTbhq9gvPqP3yv
      ✓ throws on MuNu7ZAEDFiHthiunm7dPjwKqrVNCM3mAz6rP9zFveQu14YA8CxExSJTHcVP9DErn6u84E6Ej7S
      ✓ throws on rPpQpYknyNQ5AEHuY6H8ijJJrYc2nDKKk9jjmKEXsWzyAQcFGpDLU2Zvsmoi8JLR7hAwoy3RQWf
      ✓ throws on 4Uc3FmN6NQ6zLBK5QQBXRBUREaaHwCZYsGCueHauuDmJpZKn6jkEskMB2Zi2CNgtb5r6epWEFfUJq
      ✓ throws on 7aQgR5DFQ25vyXmqZAWmnVCjL3PkBcdVkBUpjrjMTcghHx3E8wb
      ✓ throws on 17QpPprjeg69fW1DV8DcYYCKvWjYhXvWkov6MJ1iTTvMFj6weAqW7wybZeH57WTNxXVCRH4veVs
      ✓ throws on KxuACDviz8Xvpn1xAh9MfopySZNuyajYMZWz16Dv2mHHryznWUp3
      ✓ throws on 7nK3GSmqdXJQtdohvGfJ7KsSmn3TmGqExug49583bDAL91pVSGq5xS9SHoAYL3Wv3ijKTit65th
      ✓ throws on cTivdBmq7bay3RFGEBBuNfMh2P1pDCgRYN2Wbxmgwr4ki3jNUL2va
      ✓ throws on gjMV4vjNjyMrna4fsAr8bWxAbwtmMUBXJS3zL4NJt5qjozpbQLmAfK1uA3CquSqsZQMpoD1g2nk
      ✓ throws on emXm1naBMoVzPjbk7xpeTVMFy4oDEe25UmoyGgKEB1gGWsK8kRGs
      ✓ throws on 7VThQnNRj1o3Zyvc7XHPRrjDf8j2oivPTeDXnRPYWeYGE4pXeRJDZgf28ppti5hsHWXS2GSobdqyo
      ✓ throws on 1G9u6oCVCPh2o8m3t55ACiYvG1y5BHewUkDSdiQarDcYXXhFHYdzMdYfUAhfxn5vNZBwpgUNpso
      ✓ throws on 31QQ7ZMLkScDiB4VyZjuptr7AEc9j1SjstF7pRoLhHTGkW4Q2y9XELobQmhhWxeRvqcukGd1XCq
      ✓ throws on DHqKSnpxa8ZdQyH8keAhvLTrfkyBMQxqngcQA5N8LQ9KVt25kmGN
      ✓ throws on 2LUHcJPbwLCy9GLH1qXmfmAwvadWw4bp4PCpDfduLqV17s6iDcy1imUwhQJhAoNoN1XNmweiJP4i
      ✓ throws on 7USRzBXAnmck8fX9HmW7RAb4qt92VFX6soCnts9s74wxm4gguVhtG5of8fZGbNPJA83irHVY6bCos
      ✓ throws on 1DGezo7BfVebZxAbNT3XGujdeHyNNBF3vnficYoTSp4PfK2QaML9bHzAMxke3wdKdHYWmsMTJVu
      ✓ throws on 2D12DqDZKwCxxkzs1ZATJWvgJGhQ4cFi3WrizQ5zLAyhN5HxuAJ1yMYaJp8GuYsTLLxTAz6otCfb
      ✓ throws on 8AFJzuTujXjw1Z6M3fWhQ1ujDW7zsV4ePeVjVo7D1egERqSW9nZ
      ✓ throws on 163Q17qLbTCue8YY3AvjpUhotuaodLm2uqMhpYirsKjVqnxJRWTEoywMVY3NbBAHuhAJ2cF9GAZ
      ✓ throws on 2MnmgiRH4eGLyLc9eAqStzk7dFgBjFtUCtu
      ✓ throws on 461QQ2sYWxU7H2PV4oBwJGNch8XVTYYbZxU
      ✓ throws on 2UCtv53VttmQYkVU4VMtXB31REvQg4ABzs41AEKZ8UcB7DAfVzdkV9JDErwGwyj5AUHLkmgZeobs
      ✓ throws on cSNjAsnhgtiFMi6MtfvgscMB2Cbhn2v1FUYfviJ1CdjfidvmeW6mn
      ✓ throws on gmsow2Y6EWAFDFE1CE4Hd3Tpu2BvfmBfG1SXsuRARbnt1WjkZnFh1qGTiptWWbjsq2Q6qvpgJVj
      ✓ throws on nksUKSkzS76v8EsSgozXGMoQFiCoCHzCVajFKAXqzK5on9ZJYVHMD5CKwgmX3S3c7M1U3xabUny
      ✓ throws on L3favK1UzFGgdzYBF2oBT5tbayCo4vtVBLJhg2iYuMeePxWG8SQc
      ✓ throws on 7VxLxGGtYT6N99GdEfi6xz56xdQ8nP2dG1CavuXx7Rf2PrvNMTBNevjkfgs9JmkcGm6EXpj8ipyPZ
      ✓ throws on 2mbZwFXF6cxShaCo2czTRB62WTx9LxhTtpP
      ✓ throws on dB7cwYdcPSgiyAwKWL3JwCVwSk6epU2txw
      ✓ throws on HPhFUhUAh8ZQQisH8QQWafAxtQYju3SFTX
      ✓ throws on 4ctAH6AkHzq5ioiM1m9T3E2hiYEev5mTsB
      ✓ throws on Hn1uFi4dNexWrqARpjMqgT6cX1UsNPuV3cHdGg9ExyXw8HTKadbktRDtdeVmY3M1BxJStiL4vjJ
      ✓ throws on Sq3fDbvutABmnAHHExJDgPLQn44KnNC7UsXuT7KZecpaYDMU9Txs
      ✓ throws on 6TqWyrqdgUEYDQU1aChMuFMMEimHX44qHFzCUgGfqxGgZNMUVWJ
      ✓ throws on giqJo7oWqFxNKWyrgcBxAVHXnjJ1t6cGoEffce5Y1y7u649Noj5wJ4mmiUAKEVVrYAGg2KPB3Y4
      ✓ throws on cNzHY5e8vcmM3QVJUcjCyiKMYfeYvyueq5qCMV3kqcySoLyGLYUK
      ✓ throws on 37uTe568EYc9WLoHEd9jXEvUiWbq5LFLscNyqvAzLU5vBArUJA6eydkLmnMwJDjkL5kXc2VK7ig
      ✓ throws on EsYbG4tWWWY45G31nox838qNdzksbPySWc
      ✓ throws on nbuzhfwMoNzA3PaFnyLcRxE9bTJPDkjZ6Rf6Y6o2ckXZfzZzXBT
      ✓ throws on cQN9PoxZeCWK1x56xnz6QYAsvR11XAce3Ehp3gMUdfSQ53Y2mPzx
      ✓ throws on 1Gm3N3rkef6iMbx4voBzaxtXcmmiMTqZPhcuAepRzYUJQW4qRpEnHvMojzof42hjFRf8PE2jPde
      ✓ throws on 2TAq2tuN6x6m233bpT7yqdYQPELdTDJn1eU
      ✓ throws on ntEtnnGhqPii4joABvBtSEJG6BxjT2tUZqE8PcVYgk3RHpgxgHDCQxNbLJf7ardf1dDk2oCQ7Cf
      ✓ throws on Ky1YjoZNgQ196HJV3HpdkecfhRBmRZdMJk89Hi5KGfpfPwS2bUbfd
      ✓ throws on 2A1q1YsMZowabbvta7kTy2Fd6qN4r5ZCeG3qLpvZBMzCixMUdkN2Y4dHB1wPsZAeVXUGD83MfRED
    Block.fromHex
      ✓ can parse 0000000000013b8ab2cd513b0261a14096412195a72a0c4827d229dcc7e0f7af
      ✓ can parse 000000005a4ded781e667e06ceefafb71410b511fe0d5adc3e5a27ecbec34ae6
      ✓ can parse 000000005a4ded781e667e06ceefafb71410b511fe0d5adc3e5a27ecbec34ae6
      ✓ can parse 000000000000dab0130bbcc991d3d7ae6b81aa6f50a798888dfe62337458dc45
      ✓ can parse 000000000000b731f2eef9e8c63173adfb07e41bd53eb0ef0a6b720d6cb6dea4
    Transaction.fromHex
      ✓ can decode 0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000490047304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000
      ✓ can decode 0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004a0048304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2bab01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000
      ✓ can decode 0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004a01ff47304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000
      ✓ can decode 0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000495147304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000
      ✓ can decode 0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000494f47304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000
      ✓ can decode 01000000010276b76b07f4935c70acf54fbf1f438a4c397a9fb7e633873c4dd3bc062b6b40000000008c493046022100d23459d03ed7e9511a47d13292d3430a04627de6235b6e51a40f9cd386f2abe3022100e7d25b080f0bb8d8d5f878bba7d54ad2fda650ea8d158a33ee3cbd11768191fd004104b0e2c879e4daf7b9ab68350228c159766676a14f5815084ba166432aab46198d4cca98fa3e9981d0a90b2effc514b76279476550ba3663fdcaff94c38420e9d5000000000100093d00000000001976a9149a7b0f3b80c6baaeedce0a0842553800f832ba1f88ac00000000
      ✓ can decode 01000000010001000000000000000000000000000000000000000000000000000000000000000000006a473044022067288ea50aa799543a536ff9306f8e1cba05b9c6b10951175b924f96732555ed022026d7b5265f38d21541519e4a1e55044d5b9e17e15cdbaf29ae3792e99e883e7a012103ba8c8b86dea131c22ab967e6dd99bdae8eff7a1f75a2c35f1f944109e3fe5e22ffffffff010000000000000000015100000000
      ✓ can decode 01000000010001000000000000000000000000000000000000000000000000000000000000000000006a473044022067288ea50aa799543a536ff9306f8e1cba05b9c6b10951175b924f96732555ed022026d7b5265f38d21541519e4a1e55044d5b9e17e15cdbaf29ae3792e99e883e7a012103ba8c8b86dea131c22ab967e6dd99bdae8eff7a1f75a2c35f1f944109e3fe5e22ffffffff010000000000000000015100000000
      ✓ can decode 01000000023d6cf972d4dff9c519eff407ea800361dd0a121de1da8b6f4138a2f25de864b4000000008a4730440220ffda47bfc776bcd269da4832626ac332adfca6dd835e8ecd83cd1ebe7d709b0e022049cffa1cdc102a0b56e0e04913606c70af702a1149dc3b305ab9439288fee090014104266abb36d66eb4218a6dd31f09bb92cf3cfa803c7ea72c1fc80a50f919273e613f895b855fb7465ccbc8919ad1bd4a306c783f22cd3227327694c4fa4c1c439affffffff21ebc9ba20594737864352e95b727f1a565756f9d365083eb1a8596ec98c97b7010000008a4730440220503ff10e9f1e0de731407a4a245531c9ff17676eda461f8ceeb8c06049fa2c810220c008ac34694510298fa60b3f000df01caa244f165b727d4896eb84f81e46bcc4014104266abb36d66eb4218a6dd31f09bb92cf3cfa803c7ea72c1fc80a50f919273e613f895b855fb7465ccbc8919ad1bd4a306c783f22cd3227327694c4fa4c1c439affffffff01f0da5200000000001976a914857ccd42dded6df32949d4646dfa10a92458cfaa88ac00000000
      ✓ can decode 01000000020002000000000000000000000000000000000000000000000000000000000000000000000151ffffffff0001000000000000000000000000000000000000000000000000000000000000000000006b483045022100c9cdd08798a28af9d1baf44a6c77bcc7e279f47dc487c8c899911bc48feaffcc0220503c5c50ae3998a733263c5c0f7061b483e2b56c4c41b456e7d2f5a78a74c077032102d5c25adb51b61339d2b05315791e21bbe80ea470a49db0135720983c905aace0ffffffff010000000000000000015100000000
      ✓ can decode 010000000100010000000000000000000000000000000000000000000000000000000000000000000009085768617420697320ffffffff010000000000000000015100000000
      ✓ can decode 01000000010001000000000000000000000000000000000000000000000000000000000000000000006e493046022100c66c9cdf4c43609586d15424c54707156e316d88b0a1534c9e6b0d4f311406310221009c0fe51dbc9c4ab7cc25d3fdbeccf6679fe6827f08edf2b4a9f16ee3eb0e438a0123210338e8034509af564c62644c07691942e0c056752008a173c89f60ab2a88ac2ebfacffffffff010000000000000000015100000000
      ✓ can decode 01000000010001000000000000000000000000000000000000000000000000000000000000000000006e493046022100e1eadba00d9296c743cb6ecc703fd9ddc9b3cd12906176a226ae4c18d6b00796022100a71aef7d2874deff681ba6080f1b278bac7bb99c61b08a85f4311970ffe7f63f012321030c0588dc44d92bdcbf8e72093466766fdc265ead8db64517b0c542275b70fffbacffffffff010040075af0750700015100000000
      ✓ can decode 01000000010001000000000000000000000000000000000000000000000000000000000000000000006d483045022027deccc14aa6668e78a8c9da3484fbcd4f9dcc9bb7d1b85146314b21b9ae4d86022100d0b43dece8cfb07348de0ca8bc5b86276fa88f7f2138381128b7c36ab2e42264012321029bb13463ddd5d2cc05da6e84e37536cb9525703cfd8f43afdb414988987a92f6acffffffff020040075af075070001510000000000000000015100000000
      ✓ can decode 01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff025151ffffffff010000000000000000015100000000
      ✓ can decode 01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff6451515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151ffffffff010000000000000000015100000000
      ✓ can decode 010000000200010000000000000000000000000000000000000000000000000000000000000000000049483045022100d180fd2eb9140aeb4210c9204d3f358766eb53842b2a9473db687fa24b12a3cc022079781799cd4f038b85135bbe49ec2b57f306b2bb17101b17f71f000fcab2b6fb01ffffffff0002000000000000000000000000000000000000000000000000000000000000000000004847304402205f7530653eea9b38699e476320ab135b74771e1c48b81a5d041e2ca84b9be7a802200ac8d1f40fb026674fe5a5edd3dea715c27baa9baca51ed45ea750ac9dc0a55e81ffffffff010100000000000000015100000000
      ✓ can decode 01000000020001000000000000000000000000000000000000000000000000000000000000000000004948304502203a0f5f0e1f2bdbcd04db3061d18f3af70e07f4f467cbc1b8116f267025f5360b022100c792b6e215afc5afc721a351ec413e714305cb749aae3d7fee76621313418df101010000000002000000000000000000000000000000000000000000000000000000000000000000004847304402205f7530653eea9b38699e476320ab135b74771e1c48b81a5d041e2ca84b9be7a802200ac8d1f40fb026674fe5a5edd3dea715c27baa9baca51ed45ea750ac9dc0a55e81ffffffff010100000000000000015100000000
      ✓ can decode 010000000370ac0a1ae588aaf284c308d67ca92c69a39e2db81337e563bf40c59da0a5cf63000000006a4730440220360d20baff382059040ba9be98947fd678fb08aab2bb0c172efa996fd8ece9b702201b4fb0de67f015c90e7ac8a193aeab486a1f587e0f54d0fb9552ef7f5ce6caec032103579ca2e6d107522f012cd00b52b9a65fb46f0c57b9b8b6e377c48f526a44741affffffff7d815b6447e35fbea097e00e028fb7dfbad4f3f0987b4734676c84f3fcd0e804010000006b483045022100c714310be1e3a9ff1c5f7cacc65c2d8e781fc3a88ceb063c6153bf950650802102200b2d0979c76e12bb480da635f192cc8dc6f905380dd4ac1ff35a4f68f462fffd032103579ca2e6d107522f012cd00b52b9a65fb46f0c57b9b8b6e377c48f526a44741affffffff3f1f097333e4d46d51f5e77b53264db8f7f5d2e18217e1099957d0f5af7713ee010000006c493046022100b663499ef73273a3788dea342717c2640ac43c5a1cf862c9e09b206fcb3f6bb8022100b09972e75972d9148f2bdd462e5cb69b57c1214b88fc55ca638676c07cfc10d8032103579ca2e6d107522f012cd00b52b9a65fb46f0c57b9b8b6e377c48f526a44741affffffff0380841e00000000001976a914bfb282c70c4191f45b5a6665cad1682f2c9cfdfb88ac80841e00000000001976a9149857cc07bed33a5cf12b9c5e0500b675d500c81188ace0fd1c00000000001976a91443c52850606c872403c0601e69fa34b26f62db4a88ac00000000
      ✓ can decode 0100000001482f7a028730a233ac9b48411a8edfb107b749e61faf7531f4257ad95d0a51c5000000008b483045022100bf0bbae9bde51ad2b222e87fbf67530fbafc25c903519a1e5dcc52a32ff5844e022028c4d9ad49b006dd59974372a54291d5764be541574bb0c4dc208ec51f80b7190141049dd4aad62741dc27d5f267f7b70682eee22e7e9c1923b9c0957bdae0b96374569b460eb8d5b40d972e8c7c0ad441de3d94c4a29864b212d56050acb980b72b2bffffffff0180969800000000001976a914e336d0017a9d28de99d16472f6ca6d5a3a8ebc9988ac00000000
      ✓ can decode 01000000012312503f2491a2a97fcd775f11e108a540a5528b5d4dee7a3c68ae4add01dab300000000fdfe0000483045022100f6649b0eddfdfd4ad55426663385090d51ee86c3481bdc6b0c18ea6c0ece2c0b0220561c315b07cffa6f7dd9df96dbae9200c2dee09bf93cc35ca05e6cdf613340aa0148304502207aacee820e08b0b174e248abd8d7a34ed63b5da3abedb99934df9fddd65c05c4022100dfe87896ab5ee3df476c2655f9fbe5bd089dccbef3e4ea05b5d121169fe7f5f4014c695221031d11db38972b712a9fe1fc023577c7ae3ddb4a3004187d41c45121eecfdbb5b7210207ec36911b6ad2382860d32989c7b8728e9489d7bbc94a6b5509ef0029be128821024ea9fac06f666a4adc3fc1357b7bec1fd0bdece2b9d08579226a8ebde53058e453aeffffffff0180380100000000001976a914c9b99cddf847d10685a4fabaa0baf505f7c3dfab88ac00000000
      ✓ can decode 0100000001f709fa82596e4f908ee331cb5e0ed46ab331d7dcfaf697fe95891e73dac4ebcb000000008c20ca42095840735e89283fec298e62ac2ddea9b5f34a8cbb7097ad965b87568100201b1b01dc829177da4a14551d2fc96a9db00c6501edfa12f22cd9cefd335c227f483045022100a9df60536df5733dd0de6bc921fab0b3eee6426501b43a228afa2c90072eb5ca02201c78b74266fac7d1db5deff080d8a403743203f109fbcabf6d5a760bf87386d20100ffffffff01c075790000000000232103611f9a45c18f28f06f19076ad571c344c82ce8fcfe34464cf8085217a2d294a6ac00000000
      ✓ can decode 01000000012c651178faca83be0b81c8c1375c4b0ad38d53c8fe1b1c4255f5e795c25792220000000049483045022100d6044562284ac76c985018fc4a90127847708c9edb280996c507b28babdc4b2a02203d74eca3f1a4d1eea7ff77b528fde6d5dc324ec2dbfdb964ba885f643b9704cd01ffffffff010100000000000000232102c2410f8891ae918cab4ffc4bb4a3b0881be67c7a1e7faa8b5acf9ab8932ec30cac00000000
      ✓ can decode 0100000001f725ea148d92096a79b1709611e06e94c63c4ef61cbae2d9b906388efd3ca99c000000000100ffffffff0101000000000000002321028a1d66975dbdf97897e3a4aef450ebeb5b5293e4a0b4a6d3a2daaa0b2b110e02ac00000000
      ✓ can decode 0100000001be599efaa4148474053c2fa031c7262398913f1dc1d9ec201fd44078ed004e44000000004900473044022022b29706cb2ed9ef0cb3c97b72677ca2dfd7b4160f7b4beb3ba806aa856c401502202d1e52582412eba2ed474f1f437a427640306fd3838725fab173ade7fe4eae4a01ffffffff010100000000000000232103ac4bba7e7ca3e873eea49e08132ad30c7f03640b6539e9b59903cf14fd016bbbac00000000
      ✓ can decode 010000000112b66d5e8c7d224059e946749508efea9d66bf8d0c83630f080cf30be8bb6ae100000000490047304402206ffe3f14caf38ad5c1544428e99da76ffa5455675ec8d9780fac215ca17953520220779502985e194d84baa36b9bd40a0dbd981163fa191eb884ae83fc5bd1c86b1101ffffffff010100000000000000232103905380c7013e36e6e19d305311c1b81fce6581f5ee1c86ef0627c68c9362fc9fac00000000
      ✓ can decode 0100000001b0ef70cc644e0d37407e387e73bfad598d852a5aa6d691d72b2913cebff4bceb000000004a00473044022068cd4851fc7f9a892ab910df7a24e616f293bcb5c5fbdfbc304a194b26b60fba022078e6da13d8cb881a22939b952c24f88b97afd06b4c47a47d7f804c9a352a6d6d0100ffffffff0101000000000000002321033bcaa0a602f0d44cc9d5637c6e515b0471db514c020883830b7cefd73af04194ac00000000
      ✓ can decode 0100000001c188aa82f268fcf08ba18950f263654a3ea6931dabc8bf3ed1d4d42aaed74cba000000004b0000483045022100940378576e069aca261a6b26fb38344e4497ca6751bb10905c76bb689f4222b002204833806b014c26fd801727b792b1260003c55710f87c5adbd7a9cb57446dbc9801ffffffff0101000000000000002321037c615d761e71d38903609bf4f46847266edc2fb37532047d747ba47eaae5ffe1ac00000000
      ✓ can decode 01000000012432b60dc72cebc1a27ce0969c0989c895bdd9e62e8234839117f8fc32d17fbc000000004a493046022100a576b52051962c25e642c0fd3d77ee6c92487048e5d90818bcf5b51abaccd7900221008204f8fb121be4ec3b24483b1f92d89b1b0548513a134e345c5442e86e8617a501ffffffff010000000000000000016a00000000
      ✓ can decode 01000000014710b0e7cf9f8930de259bdc4b84aa5dfb9437b665a3e3a21ff26e0bf994e183000000004a493046022100a166121a61b4eeb19d8f922b978ff6ab58ead8a5a5552bf9be73dc9c156873ea02210092ad9bc43ee647da4f6652c320800debcf08ec20a094a0aaf085f63ecb37a17201ffffffff010000000000000000016a00000000
      ✓ can decode 01000000015ebaa001d8e4ec7a88703a3bcf69d98c874bca6299cca0f191512bf2a7826832000000004948304502203bf754d1c6732fbf87c5dcd81258aefd30f2060d7bd8ac4a5696f7927091dad1022100f5bcb726c4cf5ed0ed34cc13dadeedf628ae1045b7cb34421bc60b89f4cecae701ffffffff010000000000000000016a00000000
      ✓ can decode 010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a900000000924830450221009c0a27f886a1d8cb87f6f595fbc3163d28f7a81ec3c4b252ee7f3ac77fd13ffa02203caa8dfa09713c8c4d7ef575c75ed97812072405d932bd11e6a1593a98b679370148304502201e3861ef39a526406bad1e20ecad06be7375ad40ddb582c9be42d26c3a0d7b240221009d0a3985e96522e59635d19cc4448547477396ce0ef17a58e7d74c3ef464292301ffffffff010000000000000000016a00000000
      ✓ can decode 010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a9000000004a48304502207a6974a77c591fa13dff60cabbb85a0de9e025c09c65a4b2285e47ce8e22f761022100f0efaac9ff8ac36b10721e0aae1fb975c90500b50c56e8a0cc52b0403f0425dd0100ffffffff010000000000000000016a00000000
      ✓ can decode 010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a9000000004a483045022100fa4a74ba9fd59c59f46c3960cf90cbe0d2b743c471d24a3d5d6db6002af5eebb02204d70ec490fd0f7055a7c45f86514336e3a7f03503dacecabb247fc23f15c83510151ffffffff010000000000000000016a00000000
      ✓ can decode 0100000001e0be9e32f1f89c3d916c4f21e55cdcd096741b895cc76ac353e6023a05f4f7cc00000000d86149304602210086e5f736a2c3622ebb62bd9d93d8e5d76508b98be922b97160edc3dcca6d8c47022100b23c312ac232a4473f19d2aeb95ab7bdf2b65518911a0d72d50e38b5dd31dc820121038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ac4730440220508fa761865c8abd81244a168392876ee1d94e8ed83897066b5e2df2400dad24022043f5ee7538e87e9c6aef7ef55133d3e51da7cc522830a9c4d736977a76ef755c0121038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ffffffff010000000000000000016a00000000
      ✓ can decode 01000000013c6f30f99a5161e75a2ce4bca488300ca0c6112bde67f0807fe983feeff0c91001000000e608646561646265656675ab61493046022100ce18d384221a731c993939015e3d1bcebafb16e8c0b5b5d14097ec8177ae6f28022100bcab227af90bab33c3fe0a9abfee03ba976ee25dc6ce542526e9b2e56e14b7f10121038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ac493046022100c3b93edcc0fd6250eb32f2dd8a0bba1754b0f6c3be8ed4100ed582f3db73eba2022100bf75b5bd2eff4d6bf2bda2e34a40fcc07d4aa3cf862ceaa77b47b81eff829f9a01ab21038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ffffffff010000000000000000016a00000000
      ✓ can decode 01000000016f3dbe2ca96fa217e94b1017860be49f20820dea5c91bdcb103b0049d5eb566000000000fd1d0147304402203989ac8f9ad36b5d0919d97fa0a7f70c5272abee3b14477dc646288a8b976df5022027d19da84a066af9053ad3d1d7459d171b7e3a80bc6c4ef7a330677a6be548140147304402203989ac8f9ad36b5d0919d97fa0a7f70c5272abee3b14477dc646288a8b976df5022027d19da84a066af9053ad3d1d7459d171b7e3a80bc6c4ef7a330677a6be548140121038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ac47304402203757e937ba807e4a5da8534c17f9d121176056406a6465054bdd260457515c1a02200f02eccf1bec0f3a0d65df37889143c2e88ab7acec61a7b6f5aa264139141a2b0121038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ffffffff010000000000000000016a00000000
      ✓ can decode 01000000012139c555ccb81ee5b1e87477840991ef7b386bc3ab946b6b682a04a621006b5a01000000fdb40148304502201723e692e5f409a7151db386291b63524c5eb2030df652b1f53022fd8207349f022100b90d9bbf2f3366ce176e5e780a00433da67d9e5c79312c6388312a296a5800390148304502201723e692e5f409a7151db386291b63524c5eb2030df652b1f53022fd8207349f022100b90d9bbf2f3366ce176e5e780a00433da67d9e5c79312c6388312a296a5800390121038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f2204148304502201723e692e5f409a7151db386291b63524c5eb2030df652b1f53022fd8207349f022100b90d9bbf2f3366ce176e5e780a00433da67d9e5c79312c6388312a296a5800390175ac4830450220646b72c35beeec51f4d5bc1cbae01863825750d7f490864af354e6ea4f625e9c022100f04b98432df3a9641719dbced53393022e7249fb59db993af1118539830aab870148304502201723e692e5f409a7151db386291b63524c5eb2030df652b1f53022fd8207349f022100b90d9bbf2f3366ce176e5e780a00433da67d9e5c79312c6388312a296a580039017521038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ffffffff010000000000000000016a00000000
      ✓ can decode 0100000002f9cbafc519425637ba4227f8d0a0b7160b4e65168193d5af39747891de98b5b5000000006b4830450221008dd619c563e527c47d9bd53534a770b102e40faa87f61433580e04e271ef2f960220029886434e18122b53d5decd25f1f4acb2480659fea20aabd856987ba3c3907e0121022b78b756e2258af13779c1a1f37ea6800259716ca4b7f0b87610e0bf3ab52a01ffffffff42e7988254800876b69f24676b3e0205b77be476512ca4d970707dd5c60598ab00000000fd260100483045022015bd0139bcccf990a6af6ec5c1c52ed8222e03a0d51c334df139968525d2fcd20221009f9efe325476eb64c3958e4713e9eefe49bf1d820ed58d2112721b134e2a1a53034930460221008431bdfa72bc67f9d41fe72e94c88fb8f359ffa30b33c72c121c5a877d922e1002210089ef5fc22dd8bfc6bf9ffdb01a9862d27687d424d1fefbab9e9c7176844a187a014c9052483045022015bd0139bcccf990a6af6ec5c1c52ed8222e03a0d51c334df139968525d2fcd20221009f9efe325476eb64c3958e4713e9eefe49bf1d820ed58d2112721b134e2a1a5303210378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c71210378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c7153aeffffffff01a08601000000000017a914d8dacdadb7462ae15cd906f1878706d0da8660e68700000000
      ✓ can decode 0100000002dbb33bdf185b17f758af243c5d3c6e164cc873f6bb9f40c0677d6e0f8ee5afce000000006b4830450221009627444320dc5ef8d7f68f35010b4c050a6ed0d96b67a84db99fda9c9de58b1e02203e4b4aaa019e012e65d69b487fdf8719df72f488fa91506a80c49a33929f1fd50121022b78b756e2258af13779c1a1f37ea6800259716ca4b7f0b87610e0bf3ab52a01ffffffffdbb33bdf185b17f758af243c5d3c6e164cc873f6bb9f40c0677d6e0f8ee5afce010000009300483045022015bd0139bcccf990a6af6ec5c1c52ed8222e03a0d51c334df139968525d2fcd20221009f9efe325476eb64c3958e4713e9eefe49bf1d820ed58d2112721b134e2a1a5303483045022015bd0139bcccf990a6af6ec5c1c52ed8222e03a0d51c334df139968525d2fcd20221009f9efe325476eb64c3958e4713e9eefe49bf1d820ed58d2112721b134e2a1a5303ffffffff01a0860100000000001976a9149bc0bbdd3024da4d0c38ed1aecf5c68dd1d3fa1288ac00000000
      ✓ can decode 010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
      ✓ can decode 0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000ff64cd1d
      ✓ can decode 0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000ff64cd1d
      ✓ can decode 01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d
      ✓ can decode 0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000ffffffff
      ✓ can decode 0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000ffffffff
      ✓ can decode 010000000100010000000000000000000000000000000000000000000000000000000000000000000000feffffff0100000000000000000000000000
      ✓ can decode 01000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d
      ✓ can decode 0100000001000100000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000feffffff
      ✓ can decode 010000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
      ✓ can decode 01000000010001000000000000000000000000000000000000000000000000000000000000000000000251b1000000000100000000000000000001000000
      ✓ can decode 0100000001000100000000000000000000000000000000000000000000000000000000000000000000030251b1000000000100000000000000000001000000
      ✓ can decode 010000000132211bdd0d568506804eef0d8cc3db68c3d766ab9306cdfcc0a9c89616c8dbb1000000006c493045022100c7bb0faea0522e74ff220c20c022d2cb6033f8d167fb89e75a50e237a35fd6d202203064713491b1f8ad5f79e623d0219ad32510bfaa1009ab30cbee77b59317d6e30001210237af13eb2d84e4545af287b919c2282019c9691cc509e78e196a9d8274ed1be0ffffffff0100000000000000001976a914f1b3ed2eda9a2ebe5a9374f692877cdf87c0f95b88ac00000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffff00000100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffbf7f0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffbf7f0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000000040000100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffff40000100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffff7f0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffff7f0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000000000800100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000000000800100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000feffffff0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000feffffff0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffbf7f0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffff7f0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffbf7f0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffff7f0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffbf7f0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffff7f0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff0100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000000040000100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000ffff00000100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000
      ✓ can decode 020000000100010000000000000000000000000000000000000000000000000000000000000000000000000040000100000000000000000000000000
      ✓ can decode 02000000010001000000000000000000000000000000000000000000000000000000000000000000000251b2010000000100000000000000000000000000
      ✓ can decode 0200000001000100000000000000000000000000000000000000000000000000000000000000000000030251b2010000000100000000000000000000000000
      ✓ can decode 0100000000010100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff01e8030000000000001976a9144c9c3dfac4207d5d8cb89df5722cb3d712385e3f88ac02483045022100cfb07164b36ba64c1b1e8c7720a56ad64d96f6ef332d3d37f9cb3c96477dc44502200a464cd7a9cf94cd70f66ce4f4f0625ef650052c7afcfe29d7d7e01830ff91ed012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc7100000000
      ✓ can decode 0100000000010100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff01e8030000000000001976a9144c9c3dfac4207d5d8cb89df5722cb3d712385e3f88ac02483045022100aa5d8aa40a90f23ce2c3d11bc845ca4a12acd99cbea37de6b9f6d86edebba8cb022022dedc2aa0a255f74d04c0b76ece2d7c691f9dd11a64a8ac49f62a99c3a05f9d01232103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71ac00000000
      ✓ can decode 01000000000101000100000000000000000000000000000000000000000000000000000000000000000000171600144c9c3dfac4207d5d8cb89df5722cb3d712385e3fffffffff01e8030000000000001976a9144c9c3dfac4207d5d8cb89df5722cb3d712385e3f88ac02483045022100cfb07164b36ba64c1b1e8c7720a56ad64d96f6ef332d3d37f9cb3c96477dc44502200a464cd7a9cf94cd70f66ce4f4f0625ef650052c7afcfe29d7d7e01830ff91ed012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc7100000000
      ✓ can decode 0100000000010100010000000000000000000000000000000000000000000000000000000000000000000023220020ff25429251b5a84f452230a3c75fd886b7fc5a7865ce4a7bb7a9d7c5be6da3dbffffffff01e8030000000000001976a9144c9c3dfac4207d5d8cb89df5722cb3d712385e3f88ac02483045022100aa5d8aa40a90f23ce2c3d11bc845ca4a12acd99cbea37de6b9f6d86edebba8cb022022dedc2aa0a255f74d04c0b76ece2d7c691f9dd11a64a8ac49f62a99c3a05f9d01232103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71ac00000000
      ✓ can decode 0100000000010400010000000000000000000000000000000000000000000000000000000000000200000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff00010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000300000000ffffffff05540b0000000000000151d0070000000000000151840300000000000001513c0f00000000000001512c010000000000000151000248304502210092f4777a0f17bf5aeb8ae768dec5f2c14feabf9d1fe2c89c78dfed0f13fdb86902206da90a86042e252bcd1e80a168c719e4a1ddcc3cebea24b9812c5453c79107e9832103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71000000000000
      ✓ can decode 0100000000010300010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff00010000000000000000000000000000000000000000000000000000000000000200000000ffffffff03e8030000000000000151d0070000000000000151b80b0000000000000151000248304502210092f4777a0f17bf5aeb8ae768dec5f2c14feabf9d1fe2c89c78dfed0f13fdb86902206da90a86042e252bcd1e80a168c719e4a1ddcc3cebea24b9812c5453c79107e9832103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710000000000
      ✓ can decode 0100000000010300010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff00010000000000000000000000000000000000000000000000000000000000000200000000ffffffff0484030000000000000151d0070000000000000151540b0000000000000151c800000000000000015100024730440220699e6b0cfe015b64ca3283e6551440a34f901ba62dd4c72fe1cb815afb2e6761022021cc5e84db498b1479de14efda49093219441adc6c543e5534979605e273d80b032103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710000000000
      ✓ can decode 0100000000010300010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff00010000000000000000000000000000000000000000000000000000000000000200000000ffffffff03e8030000000000000151d0070000000000000151b80b000000000000015100024730440220699e6b0cfe015b64ca3283e6551440a34f901ba62dd4c72fe1cb815afb2e6761022021cc5e84db498b1479de14efda49093219441adc6c543e5534979605e273d80b032103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710000000000
      ✓ can decode 0100000000010400010000000000000000000000000000000000000000000000000000000000000200000000ffffffff00010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff00010000000000000000000000000000000000000000000000000000000000000300000000ffffffff04b60300000000000001519e070000000000000151860b00000000000001009600000000000000015100000248304502210091b32274295c2a3fa02f5bce92fb2789e3fc6ea947fbe1a76e52ea3f4ef2381a022079ad72aefa3837a2e0c033a8652a59731da05fa4a813f4fc48e87c075037256b822103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710000000000
      ✓ can decode 0100000000010300010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff00010000000000000000000000000000000000000000000000000000000000000200000000ffffffff03e8030000000000000151d0070000000000000151b80b0000000000000151000248304502210091b32274295c2a3fa02f5bce92fb2789e3fc6ea947fbe1a76e52ea3f4ef2381a022079ad72aefa3837a2e0c033a8652a59731da05fa4a813f4fc48e87c075037256b822103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710000000000
      ✓ can decode 0100000000010300010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff00010000000000000000000000000000000000000000000000000000000000000200000000ffffffff04b60300000000000001519e070000000000000151860b0000000000000100960000000000000001510002473044022022fceb54f62f8feea77faac7083c3b56c4676a78f93745adc8a35800bc36adfa022026927df9abcf0a8777829bcfcce3ff0a385fa54c3f9df577405e3ef24ee56479022103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710000000000
      ✓ can decode 0100000000010300010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff00010000000000000000000000000000000000000000000000000000000000000200000000ffffffff03e8030000000000000151d0070000000000000151b80b00000000000001510002473044022022fceb54f62f8feea77faac7083c3b56c4676a78f93745adc8a35800bc36adfa022026927df9abcf0a8777829bcfcce3ff0a385fa54c3f9df577405e3ef24ee56479022103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710000000000
      ✓ can decode 01000000000103000100000000000000000000000000000000000000000000000000000000000000000000000200000000010000000000000000000000000000000000000000000000000000000000000100000000ffffffff000100000000000000000000000000000000000000000000000000000000000002000000000200000003e8030000000000000151d0070000000000000151b80b00000000000001510002473044022022fceb54f62f8feea77faac7083c3b56c4676a78f93745adc8a35800bc36adfa022026927df9abcf0a8777829bcfcce3ff0a385fa54c3f9df577405e3ef24ee56479022103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710000000000
      ✓ can decode 0100000000010400010000000000000000000000000000000000000000000000000000000000000200000000ffffffff00010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff00010000000000000000000000000000000000000000000000000000000000000300000000ffffffff03e8030000000000000151d0070000000000000151b80b0000000000000151000002483045022100a3cec69b52cba2d2de623eeef89e0ba1606184ea55476c0f8189fda231bc9cbb022003181ad597f7c380a7d1c740286b1d022b8b04ded028b833282e055e03b8efef812103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710000000000
      ✓ can decode 0100000000010300010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff00010000000000000000000000000000000000000000000000000000000000000200000000ffffffff03e8030000000000000151d0070000000000000151b80b00000000000001510002483045022100a3cec69b52cba2d2de623eeef89e0ba1606184ea55476c0f8189fda231bc9cbb022003181ad597f7c380a7d1c740286b1d022b8b04ded028b833282e055e03b8efef812103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710000000000
      ✓ can decode 0100000000010300010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff00010000000000000000000000000000000000000000000000000000000000000200000000ffffffff03e8030000000000000151d0070000000000000151b80b00000000000001510002483045022100a3cec69b52cba2d2de623ffffffffff1606184ea55476c0f8189fda231bc9cbb022003181ad597f7c380a7d1c740286b1d022b8b04ded028b833282e055e03b8efef812103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710000000000
      ✓ can decode 0100000000010100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff010000000000000000015102fd
      ✓ can decode 0100000000010c00010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff0001000000000000000000000000000000000000000000000000000000000000020000006a473044022026c2e65b33fcd03b2a3b0f25030f0244bd23cc45ae4dec0f48ae62255b1998a00220463aa3982b718d593a6b9e0044513fd67a5009c2fdccc59992cffc2b167889f4012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71ffffffff0001000000000000000000000000000000000000000000000000000000000000030000006a4730440220008bd8382911218dcb4c9f2e75bf5c5c3635f2f2df49b36994fde85b0be21a1a02205a539ef10fb4c778b522c1be852352ea06c67ab74200977c722b0bc68972575a012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71ffffffff0001000000000000000000000000000000000000000000000000000000000000040000006b483045022100d9436c32ff065127d71e1a20e319e4fe0a103ba0272743dbd8580be4659ab5d302203fd62571ee1fe790b182d078ecfd092a509eac112bea558d122974ef9cc012c7012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71ffffffff0001000000000000000000000000000000000000000000000000000000000000050000006a47304402200e2c149b114ec546015c13b2b464bbcb0cdc5872e6775787527af6cbc4830b6c02207e9396c6979fb15a9a2b96ca08a633866eaf20dc0ff3c03e512c1d5a1654f148012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71ffffffff0001000000000000000000000000000000000000000000000000000000000000060000006b483045022100b20e70d897dc15420bccb5e0d3e208d27bdd676af109abbd3f88dbdb7721e6d6022005836e663173fbdfe069f54cde3c2decd3d0ea84378092a5d9d85ec8642e8a41012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71ffffffff00010000000000000000000000000000000000000000000000000000000000000700000000ffffffff00010000000000000000000000000000000000000000000000000000000000000800000000ffffffff00010000000000000000000000000000000000000000000000000000000000000900000000ffffffff00010000000000000000000000000000000000000000000000000000000000000a00000000ffffffff00010000000000000000000000000000000000000000000000000000000000000b0000006a47304402206639c6e05e3b9d2675a7f3876286bdf7584fe2bbd15e0ce52dd4e02c0092cdc60220757d60b0a61fc95ada79d23746744c72bac1545a75ff6c2c7cdb6ae04e7e9592012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71ffffffff0ce8030000000000000151e9030000000000000151ea030000000000000151eb030000000000000151ec030000000000000151ed030000000000000151ee030000000000000151ef030000000000000151f0030000000000000151f1030000000000000151f2030000000000000151f30300000000000001510248304502210082219a54f61bf126bfc3fa068c6e33831222d1d7138c6faa9d33ca87fd4202d6022063f9902519624254d7c2c8ea7ba2d66ae975e4e229ae38043973ec707d5d4a83012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc7102473044022017fb58502475848c1b09f162cb1688d0920ff7f142bed0ef904da2ccc88b168f02201798afa61850c65e77889cbcd648a5703b487895517c88f85cdd18b021ee246a012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc7100000000000247304402202830b7926e488da75782c81a54cd281720890d1af064629ebf2e31bf9f5435f30220089afaa8b455bbeb7d9b9c3fe1ed37d07685ade8455c76472cda424d93e4074a012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc7102473044022026326fcdae9207b596c2b05921dbac11d81040c4d40378513670f19d9f4af893022034ecd7a282c0163b89aaa62c22ec202cef4736c58cd251649bad0d8139bcbf55012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc71024730440220214978daeb2f38cd426ee6e2f44131a33d6b191af1c216247f1dd7d74c16d84a02205fdc05529b0bc0c430b4d5987264d9d075351c4f4484c16e91662e90a72aab24012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710247304402204a6e9f199dc9672cf2ff8094aaa784363be1eb62b679f7ff2df361124f1dca3302205eeb11f70fab5355c9c8ad1a0700ea355d315e334822fa182227e9815308ee8f012103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710000000000
      ✓ can decode 010000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff01e803000000000000015100000000
      ✓ can decode 0100000000010200010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff01d00700000000000001510003483045022100e078de4e96a0e05dcdc0a414124dd8475782b5f3f0ed3f607919e9a5eeeb22bf02201de309b3a3109adb3de8074b3610d4cf454c49b61247a2779a0bcbf31c889333032103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc711976a9144c9c3dfac4207d5d8cb89df5722cb3d712385e3f88ac00000000
      ✓ can decode 010000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff01e803000000000000015100000000
      ✓ can decode 010000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff01e803000000000000015100000000
      ✓ can decode 010000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff01e803000000000000015100000000
      ✓ can decode 010000000100010000000000000000000000000000000000000000000000000000000000000000000000ffffffff01e803000000000000015100000000
      ✓ can decode 0100000000010200010000000000000000000000000000000000000000000000000000000000000000000000ffffffff00010000000000000000000000000000000000000000000000000000000000000100000000ffffffff02e8030000000000000151e90300000000000001510247304402206d59682663faab5e4cb733c562e22cdae59294895929ec38d7c016621ff90da0022063ef0af5f970afe8a45ea836e3509b8847ed39463253106ac17d19c437d3d56b832103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710248304502210085001a820bfcbc9f9de0298af714493f8a37b3b354bfd21a7097c3e009f2018c022050a8b4dbc8155d4d04da2f5cdd575dcf8dd0108de8bec759bd897ea01ecb3af7832103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc7100000000
      ✓ can decode 0100000000010200010000000000000000000000000000000000000000000000000000000000000100000000ffffffff00010000000000000000000000000000000000000000000000000000000000000000000000ffffffff02e9030000000000000151e80300000000000001510248304502210085001a820bfcbc9f9de0298af714493f8a37b3b354bfd21a7097c3e009f2018c022050a8b4dbc8155d4d04da2f5cdd575dcf8dd0108de8bec759bd897ea01ecb3af7832103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc710247304402206d59682663faab5e4cb733c562e22cdae59294895929ec38d7c016621ff90da0022063ef0af5f970afe8a45ea836e3509b8847ed39463253106ac17d19c437d3d56b832103596d3451025c19dbbdeb932d6bf8bfb4ad499b95b6f88db8899efac102e5fc7100000000
      ✓ can decode 01000000020001000000000000000000000000000000000000000000000000000000000000000000004847304402202a0b4b1294d70540235ae033d78e64b4897ec859c7b6f1b2b1d8a02e1d46006702201445e756d2254b0f1dfda9ab8e1e1bc26df9668077403204f32d16a49a36eb6983ffffffff00010000000000000000000000000000000000000000000000000000000000000100000049483045022100acb96cfdbda6dc94b489fd06f2d720983b5f350e31ba906cdbd800773e80b21c02200d74ea5bdf114212b4bbe9ed82c36d2e369e302dff57cb60d01c428f0bd3daab83ffffffff02e8030000000000000151e903000000000000015100000000
      ✓ can decode 01000000000102fe3dc9208094f3ffd12645477b3dc56f60ec4fa8e6f5d67c565d1c6b9216b36e000000004847304402200af4e47c9b9629dbecc21f73af989bdaa911f7e6f6c2e9394588a3aa68f81e9902204f3fcf6ade7e5abb1295b6774c8e0abd94ae62217367096bc02ee5e435b67da201ffffffff0815cf020f013ed6cf91d29f4202e8a58726b1ac6c79da47c23d1bee0a6925f80000000000ffffffff0100f2052a010000001976a914a30741f8145e5acadf23f751864167f32e0963f788ac000347304402200de66acf4527789bfda55fc5459e214fa6083f936b430a762c629656216805ac0220396f550692cd347171cbc1ef1f51e15282e837bb2b30860dc77c8f78bc8501e503473044022027dc95ad6b740fe5129e7e62a75dd00f291a2aeb1200b84b09d9e3789406b6c002201a9ecd315dd6a0e632ab20bbb98948bc0c6fb204f2c286963bb48517a7058e27034721026dccc749adc2a9d0d89497ac511f760f45c47dc5ed9cf352a58ac706453880aeadab210255a9626aebf5e29c0e6538428ba0d1dcf6ca98ffdf086aa8ced5e0d0215ea465ac00000000
      ✓ can decode 01000000000102e9b542c5176808107ff1df906f46bb1f2583b16112b95ee5380665ba7fcfc0010000000000ffffffff80e68831516392fcd100d186b3c2c7b95c80b53c77e77c35ba03a66b429a2a1b0000000000ffffffff0280969800000000001976a914de4b231626ef508c9a74a8517e6783c0546d6b2888ac80969800000000001976a9146648a8cd4531e1ec47f35916de8e259237294d1e88ac02483045022100f6a10b8604e6dc910194b79ccfc93e1bc0ec7c03453caaa8987f7d6c3413566002206216229ede9b4d6ec2d325be245c5b508ff0339bf1794078e20bfe0babc7ffe683270063ab68210392972e2eb617b2388771abe27235fd5ac44af8e61693261550447a4c3e39da98ac024730440220032521802a76ad7bf74d0e2c218b72cf0cbc867066e2e53db905ba37f130397e02207709e2188ed7f08f4c952d9d13986da504502b8c3be59617e043552f506c46ff83275163ab68210392972e2eb617b2388771abe27235fd5ac44af8e61693261550447a4c3e39da98ac00000000
      ✓ can decode 0100000000010280e68831516392fcd100d186b3c2c7b95c80b53c77e77c35ba03a66b429a2a1b0000000000ffffffffe9b542c5176808107ff1df906f46bb1f2583b16112b95ee5380665ba7fcfc0010000000000ffffffff0280969800000000001976a9146648a8cd4531e1ec47f35916de8e259237294d1e88ac80969800000000001976a914de4b231626ef508c9a74a8517e6783c0546d6b2888ac024730440220032521802a76ad7bf74d0e2c218b72cf0cbc867066e2e53db905ba37f130397e02207709e2188ed7f08f4c952d9d13986da504502b8c3be59617e043552f506c46ff83275163ab68210392972e2eb617b2388771abe27235fd5ac44af8e61693261550447a4c3e39da98ac02483045022100f6a10b8604e6dc910194b79ccfc93e1bc0ec7c03453caaa8987f7d6c3413566002206216229ede9b4d6ec2d325be245c5b508ff0339bf1794078e20bfe0babc7ffe683270063ab68210392972e2eb617b2388771abe27235fd5ac44af8e61693261550447a4c3e39da98ac00000000
      ✓ can decode 0100000000010136641869ca081e70f394c6948e8af409e18b619df2ed74aa106c1ca29787b96e0100000023220020a16b5755f7f6f96dbd65f5f0d6ab9418b89af4b1f14a1bb8a09062c35f0dcb54ffffffff0200e9a435000000001976a914389ffce9cd9ae88dcc0631e88a821ffdbe9bfe2688acc0832f05000000001976a9147480a33f950689af511e6e84c138dbbd3c3ee41588ac080047304402206ac44d672dac41f9b00e28f4df20c52eeb087207e8d758d76d92c6fab3b73e2b0220367750dbbe19290069cba53d096f44530e4f98acaa594810388cf7409a1870ce01473044022068c7946a43232757cbdf9176f009a928e1cd9a1a8c212f15c1e11ac9f2925d9002205b75f937ff2f9f3c1246e547e54f62e027f64eefa2695578cc6432cdabce271502473044022059ebf56d98010a932cf8ecfec54c48e6139ed6adb0728c09cbe1e4fa0915302e022007cd986c8fa870ff5d2b3a89139c9fe7e499259875357e20fcbb15571c76795403483045022100fbefd94bd0a488d50b79102b5dad4ab6ced30c4069f1eaa69a4b5a763414067e02203156c6a5c9cf88f91265f5a942e96213afae16d83321c8b31bb342142a14d16381483045022100a5263ea0553ba89221984bd7f0b13613db16e7a70c549a86de0cc0444141a407022005c360ef0ae5a5d4f9f2f87a56c1546cc8268cab08c73501d6b3be2e1e1a8a08824730440220525406a1482936d5a21888260dc165497a90a15669636d8edca6b9fe490d309c022032af0c646a34a44d1f4576bf6a4a74b67940f8faa84c7df9abe12a01a11e2b4783cf56210307b8ae49ac90a048e9b53357a2354b3334e9c8bee813ecb98e99a7e07e8c3ba32103b28f0c28bfab54554ae8c658ac5c3e0ce6e79ad336331f78c428dd43eea8449b21034b8113d703413d57761b8b9781957b8c0ac1dfe69f492580ca4195f50376ba4a21033400f6afecb833092a9a21cfdf1ed1376e58c5d1f47de74683123987e967a8f42103a6d48b1131e94ba04d9737d61acdaa1322008af9602b3b14862c07a1789aac162102d8b661b0b3302ee2f162b09e07a55ad5dfbe673a9f01d9f0c19617681024306b56ae00000000
      ✓ can decode 010000000169c12106097dc2e0526493ef67f21269fe888ef05c7a3a5dacab38e1ac8387f1581b0000b64830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0121037a3fb04bcdb09eba90f69961ba1692a3528e45e67c85b200df820212d7594d334aad4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01ffffffff0101000000000000000000000000
      ✓ can decode 0100000000010169c12106097dc2e0526493ef67f21269fe888ef05c7a3a5dacab38e1ac8387f14c1d000000ffffffff01010000000000000000034830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e012102a9781d66b61fb5a7ef00ac5ad5bc6ffc78be7b44a566e3c87870e1079368df4c4aad4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0100000000
      ✓ can decode 01000000019275cb8d4a485ce95741c013f7c0d28722160008021bb469a11982d47a662896581b0000fd6f01004830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c03959601522102cd74a2809ffeeed0092bc124fd79836706e41f048db3f6ae9df8708cefb83a1c2102e615999372426e46fd107b76eaf007156a507584aa2cc21de9eee3bdbd26d36c4c9552af4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c0395960175ffffffff0101000000000000000000000000
      ✓ can decode 010000000001019275cb8d4a485ce95741c013f7c0d28722160008021bb469a11982d47a6628964c1d000000ffffffff0101000000000000000007004830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c0395960101022102966f109c54e85d3aee8321301136cedeb9fc710fdef58a9de8a73942f8e567c021034ffc99dd9a79dd3cb31e2ab3e0b09e0e67db41ac068c625cd1f491576016c84e9552af4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c039596017500000000
    Transaction
      ✓ should hash 907c2bc503ade11cc3b04eb2918b6f547b0630ab... (SIGHASH_ALL)
      ✓ should hash a0aa3126041621a6dea5b800141aa696daf28408... (SIGHASH_ALL)
      ✓ should hash 6e7e9d4b04ce17afa1e8546b627bb8d89a6a7fef... (SIGHASH_ALL)
      ✓ should hash 73107cbd025c22ebc8c3e0a47b2a760739216a52... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash e93bbf6902be872933cb987fc26ba0f914fcfc2f... (SIGHASH_ALL)
      ✓ should hash 50818f4c01b464538b1e7e7f5ae4ed96ad23c68c... (SIGHASH_ALL)
      ✓ should hash a93e93440250f97012d466a6cc24839f572def24... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash ce7d371f0476dda8b811d4bf3b64d5f86204725d... (SIGHASH_ALL)
      ✓ should hash d3b7421e011f4de0f1cea9ba7458bf3486bee722... (SIGHASH_SINGLE | SIGHASH_ANYONECANPAY)
      ✓ should hash 04bac8c5033460235919a9c63c42b2db884c7c8f... (SIGHASH_ALL)
      ✓ should hash c363a70c01ab174230bbe4afe0c3efa2d7f2feaf... (SIGHASH_ALL)
      ✓ should hash 8d437a7304d8772210a923fd81187c425fc28c17... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash fd878840031e82fdbe1ad1d745d1185622b0060a... (SIGHASH_ALL)
      ✓ should hash f40a750702af06efff3ea68e5d56e42bc41cdb8b... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a63bc673049c75211aa2c09ecc38e360eaa57143... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 4c565efe04e7d32bac03ae358d63140c1cfe95de... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 1233d5e703403b3b8b4dae84510ddfc126b4838d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 0c69702103b25ceaed43122cc2672de84a3b9aa4... (SIGHASH_ALL)
      ✓ should hash fd22692802db8ae6ab095aeae3867305a954278f... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a43f85f701ffa54a3cc57177510f3ea28ecb6db0... (SIGHASH_ALL)
      ✓ should hash c2b0b99001acfecf7da736de0ffaef8134a96768... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 82f9f10304c17a9d954cf3380db817814a8c738d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 8edcf5a1014b604e53f0d12fe143cf4284f86dc7... (SIGHASH_ALL)
      ✓ should hash 2074bad5011847f14df5ea7b4afd80cd56b02b99... (SIGHASH_ALL)
      ✓ should hash 7100b11302e554d4ef249ee416e7510a485e43b2... (SIGHASH_ALL)
      ✓ should hash 02c1017802091d1cb08fec512db7b012fe4220d5... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash cb3178520136cd294568b83bb2520f78fecc5078... (SIGHASH_ALL)
      ✓ should hash 18a4b0c004702cf0e39686ac98aab78ad788308f... (SIGHASH_ALL)
      ✓ should hash 1d9c5df20139904c582285e1ea63dec934251c0f... (SIGHASH_ALL)
      ✓ should hash 4504cb1904c7a4acf375ddae431a74de72d5436e... (SIGHASH_ALL)
      ✓ should hash 14bc7c3e03322ec0f1311f4327e93059c9962753... (SIGHASH_ALL)
      ✓ should hash 2b3bd0dd04a1832f893bf49a776cd567ec4b4394... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 35df11f004a48ba439aba878fe9df20cc935b4a7... (SIGHASH_ALL)
      ✓ should hash a08ff466049fb7619e25502ec22fedfb229eaa1f... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 5ac2f17d03bc902e2bac2469907ec7d01a62b572... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash aeb2e11902dc3770c218b97f0b1960d6ee70459e... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 9860ca9a0294ff4812534def8c3a3e3db35b817e... (SIGHASH_ALL)
      ✓ should hash 4ddaa680026ec4d8060640304b86823f1ac760c2... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 01e76dcd02ad54cbc8c71d68eaf3fa7c883b65d7... (SIGHASH_ALL)
      ✓ should hash fa00b26402670b97906203434aa967ce1559d9bd... (SIGHASH_ALL)
      ✓ should hash cb5c06dc01b022ee6105ba410f0eb12b9ce5b5aa... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash f10a0356031cd569d652dbca8e7a4d36c8da33cd... (SIGHASH_ALL)
      ✓ should hash c3325c9b012f659466626ca8f3c61dfd36f34670... (SIGHASH_ALL)
      ✓ should hash 2333e54c044370a8af16b9750ac949b151522ea6... (SIGHASH_ALL)
      ✓ should hash b500ca48011ec57c2e5252e5da64320891306032... (SIGHASH_ALL)
      ✓ should hash f52ff64b02ee91adb01f3936cc42e41e16727789... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash ab7d6f36027a7adc36a5cf7528fe4fb5d94b2c96... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash f940888f023dce6360263c850372eb145b864228... (SIGHASH_ALL)
      ✓ should hash 530ecd0b01ec302d97ef6f1b5a6420b9a2397140... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 5d781d9303acfcce964f50865ddfddab527ea971... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 25ee54ef0187387564bb86e0af96baec54289ca8... (SIGHASH_NONE | SIGHASH_ANYONECANPAY)
      ✓ should hash a9c57b1a018551bcbc781b256642532bbc09967f... (SIGHASH_ALL)
      ✓ should hash 05c4fb94040f5119dc0b10aa9df054871ed23c98... (SIGHASH_ALL)
      ✓ should hash c95ab19104b63986d7303f4363ca8f5d2fa87c21... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash ca66ae10049533c2b39f1449791bd6d3f039efe0... (SIGHASH_ALL)
      ✓ should hash ba646d0b0453999f0c70cb0430d4cab0e2120457... (SIGHASH_ALL)
      ✓ should hash 2ddb8f84039f983b45f64a7a79b74ff939e3b598... (SIGHASH_ALL)
      ✓ should hash b21fc15403b4bdaa994204444b59323a7b8714dd... (SIGHASH_ALL)
      ✓ should hash d1704d6601acf710b19fa753e307cfcee2735ead... (SIGHASH_ALL)
      ✓ should hash d2f6c096025cc909952c2400bd83ac3d532bfa8a... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 3e6db1a1019444dba461247224ad5933c997256d... (SIGHASH_ALL)
      ✓ should hash f821a042036ad43634d29913b77c0fc87b4af593... (SIGHASH_ALL)
      ✓ should hash 58e3f0f704a186ef55d3919061459910df5406a9... (SIGHASH_ALL)
      ✓ should hash efec1cce044a676c1a3d973f810edb5a9706eb4c... (SIGHASH_ALL)
      ✓ should hash 3c436c2501442a5b700cbc0622ee5143b34b1b80... (SIGHASH_ALL)
      ✓ should hash d62f183e037e0d52dcf73f9b31f70554bce4f693... (SIGHASH_ALL)
      ✓ should hash 44c200a5021238de8de7d80e7cce905606001524... (SIGHASH_ALL)
      ✓ should hash d682d52d034e9b062544e5f8c60f860c18f029df... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash e8c0dec5026575ddf31343c20aeeca8770afb33d... (SIGHASH_ALL)
      ✓ should hash b288c331011c17569293c1e6448e33a64205fc9d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash fc0a092003cb275fa9a25a72cf85d69c19e4590b... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 0fcae7e004a71a4a7c8f66e9450c0c1785268679... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 612701500414271138e30a46b7a5d95c70c78cc4... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 6b68ba00023bb4f446365ea04d68d48539aae66f... (SIGHASH_ALL)
      ✓ should hash aff5850c0168a67296cc790c1b04a9ed9ad1ba04... (SIGHASH_ALL)
      ✓ should hash e6d6b9d8042c27aec99af8c12b6c1f7a80453e22... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 046ac25e030a344116489cc48025659a363da60b... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash bd515acd0130b0ac47c2d87f8d65953ec7d657af... (SIGHASH_ALL)
      ✓ should hash ff1ae37103397245ac0fa1c115b079fa20930757... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash ff5400dd02fec5beb9a396e1cbedc82bedae09ed... (SIGHASH_SINGLE)
      ✓ should hash 28e3daa603c03626ad91ffd0ff927a126e28d29d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash b54bf5ac043b62e97817abb892892269231b9b22... (SIGHASH_ALL)
      ✓ should hash ebf628b30360bab3fa4f47ce9e0dcbe9ceaf6675... (SIGHASH_ALL)
      ✓ should hash d6a8500303f1507b1221a91adb6462fb62d741b3... (SIGHASH_ALL)
      ✓ should hash 658cb1c1049564e728291a56fa79987a4ed31467... (SIGHASH_ALL)
      ✓ should hash e92492cc01aec4e62df67ea3bc645e2e3f603645... (SIGHASH_ALL)
      ✓ should hash 02e242db04be2d8ced9179957e98cee395d47679... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash b28d5f5e015a7f24d5f9e7b04a83cd07277d452e... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash efb8b09801f647553b91922a5874f8e4bb2ed8dd... (SIGHASH_ALL)
      ✓ should hash 68a59fb901c21946797e7d07a4a3ea86978ce43d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 67761f2a014a16f3940dcb14a22ba5dc057fcffd... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash e20fe96302496eb436eee98cd5a32e1c49f2a379... (SIGHASH_ALL)
      ✓ should hash 4e1bd9fa011fe7aa14eee8e78f27c9fde5127f99... (SIGHASH_ALL)
      ✓ should hash ec02fbee03120d02fde12574649660c441b40d33... (SIGHASH_ALL)
      ✓ should hash 23dbdcc1039c99bf11938d8e3ccec53b60c6c1d1... (SIGHASH_ALL)
      ✓ should hash 33b03bf00222c7ca35c2f8870bbdef2a543b7067... (SIGHASH_ALL)
      ✓ should hash 813eda1103ac8159850b4524ef65e4644e0fc30e... (SIGHASH_ALL)
      ✓ should hash 9e45d9aa0248c16dbd7f435e8c54ae1ad086de50... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 36e42018044652286b19a90e5dd4f8d9f361d076... (SIGHASH_NONE)
      ✓ should hash 5e06159a02762b5f3a5edcdfc91fd88c3bff08b2... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a1948872013b543d6d902ccdeead231c58519521... (SIGHASH_ALL)
      ✓ should hash c3efabba03cb656f154d1e159aa4a1a4bf9423a5... (SIGHASH_ALL)
      ✓ should hash efb55c2e04b21a0c25e0e29f6586be9ef09f2008... (SIGHASH_ALL)
      ✓ should hash 91d3b21903629209b877b3e1aef09cd59aca6a5a... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 5d5c41ad0317aa7e40a513f5141ad5fc6e17d391... (SIGHASH_NONE)
      ✓ should hash ceecfa6c02b7e3345445b82226b15b7a097563fa... (SIGHASH_SINGLE)
      ✓ should hash ae62d5fd0380c4083a26642159f51af24bf55dc6... (SIGHASH_ALL)
      ✓ should hash f06f64af04fdcb830464b5efdb3d5ee25869b074... (SIGHASH_ALL)
      ✓ should hash 6dfd2f98046b08e7e2ef5fff153e00545faf7076... (SIGHASH_ALL)
      ✓ should hash 187eafed01389a45e75e9dda526d3acbbd41e641... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 7d50b977035d50411d814d296da9f7965ddc56f3... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 2a45cd1001bf642a2315d4a427eddcc1e2b0209b... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 479358c202427f3c8d19e2ea3def6d6d3ef2281b... (SIGHASH_ALL)
      ✓ should hash 76179a8e03bec40747ad65ab0f8a21bc0d125b5c... (SIGHASH_ALL)
      ✓ should hash 75ae53c2042f7546223ce5d5f9e00a968ddc68d5... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 1cdfa01e01e1b8078e9c2b0ca5082249bd18fdb8... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash cc28c1810113dfa6f0fcd9c7d9c9a30fb6f1d774... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash ca816e7802cd43d66b9374cd9bf99a8da09402d6... (SIGHASH_ALL)
      ✓ should hash b42b955303942fedd7dc77bbd9040aa0de858afa... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 92c9fe210201e781b72554a0ed5e22507fb02434... (SIGHASH_SINGLE | SIGHASH_ANYONECANPAY)
      ✓ should hash ccca1d5b01e40fe2c6b3ee24c660252134601dab... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash bc1a7a3c01691e2d0c4266136f12e391422f9365... (SIGHASH_ALL)
      ✓ should hash 076d209e02d904a6c40713c7225d23e7c25d4133... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 690fd1f80476db1f9eebe91317f2f130a60cbc1f... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 49ac2af00216c0307a29e83aa5de19770e6b2084... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash fa4d868b024b010bd5dce46576c2fb489aa60bb7... (SIGHASH_ALL)
      ✓ should hash cac6382d0462375e83b67c7a86c922b569a7473b... (SIGHASH_ALL)
      ✓ should hash 1711146502c1a0b82eaa7893976fefe0fb758c3f... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 8d5b124d0231fbfc640c706ddb1d57bb49a18ba8... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 38146dc502c7430e92b6708e9e107b61cd38e5e7... (SIGHASH_ALL)
      ✓ should hash 22d81c740469695a6a83a9a4824f77ecff8804d0... (SIGHASH_SINGLE | SIGHASH_ANYONECANPAY)
      ✓ should hash a27dcbc801e3475174a183586082e0914c314bc9... (SIGHASH_ALL)
      ✓ should hash b123ed2204410d4e8aaaa8cdb95234ca86dad9ff... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 1339051503e196f730955c5a39acd6ed28dec89b... (SIGHASH_ALL)
      ✓ should hash 0728c606014c1fd6005ccf878196ba71a54e86cc... (SIGHASH_ALL)
      ✓ should hash a1134397034bf4067b6c81c581e2b73fb63835a0... (SIGHASH_ALL)
      ✓ should hash bcdafbae04aa18eb75855aeb1f5124f300447413... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash ed3bb93802ddbd08cb030ef60a2247f715a0226d... (SIGHASH_SINGLE | SIGHASH_ANYONECANPAY)
      ✓ should hash 59f4629d030fa5d115c33e8d55a79ea3cba8c209... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 286e3eb7043902bae5173ac3b39b44c5950bc363... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 2e245cf80179e2e95cd1b34995c2aff49fe4519c... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 33a98004029d262f951881b20a8d746c8c707ea8... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash aac18f2b02b144ed481557c53f2146ae523f24fc... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 5ab79881033555b65fe58c928883f70ce7057426... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 6c2c8fac0124b0b7d4b610c3c5b91dee32b7c927... (SIGHASH_ALL)
      ✓ should hash 6e3880af031735a0059c0bb5180574a7dcc88e52... (SIGHASH_NONE)
      ✓ should hash 8df1cd19027db4240718dcaf70cdee33b26ea3de... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 0e803682024f79337b25c98f276d412bc27e56a3... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 7d71669d03022f9dd90edac323cde9e56354c680... (SIGHASH_ALL)
      ✓ should hash 9ff618e60136f8e6bb7eabaaac7d6e2535f5fba9... (SIGHASH_SINGLE | SIGHASH_ANYONECANPAY)
      ✓ should hash 9fbd43ac025e1462ecd10b1a9182a8e0c542f6d1... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 0117c92004314b84ed228fc11e2999e657f953b6... (SIGHASH_SINGLE | SIGHASH_ANYONECANPAY)
      ✓ should hash e7f5482903f98f0299e0984b361efb2fddcd9979... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 09adb2e90175ca0e816326ae2dce7750c1b27941... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash f973867602e30f857855cd0364b5bbb894c049f4... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash fd22ebaa03bd588ad16795bea7d4aa7f7d48df16... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 130b462d01dd49fac019dc4442d0fb54eaa6b1c2... (SIGHASH_ALL)
      ✓ should hash f8e50c2604609be2a95f6d0f31553081f4e1a49a... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 18020dd1017f149eec65b2ec23300d8df0a7dd64... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash b04154610363fdade55ceb6942d5e5a723323863... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 9794b3ce033df7b1e32db62d2f0906b589eacdac... (SIGHASH_ALL)
      ✓ should hash 94533db7015e70e8df715066efa69dbb9c3a42ff... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash c8597ada04f59836f06c224a2640b79f3a8a7b41... (SIGHASH_ALL)
      ✓ should hash 1a28c4f702c8efaad96d879b38ec65c5283b5c08... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash c6c7a87003f772bcae9f3a0ac5e499000b68703e... (SIGHASH_ALL)
      ✓ should hash 0ea580ac04c9495ab6af3b8d59108bb4194fcb9a... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash c33028b301d5093e1e8397270d75a0b009b2a650... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 43b2727901a7dd06dd2abf690a1ccedc0b0739cb... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 4763ed4401c3e6ab204bed280528e84d5288f9ca... (SIGHASH_ALL)
      ✓ should hash d24f647b02f71708a880e6819a1dc929c1a50b16... (SIGHASH_ALL)
      ✓ should hash fe6ddf3a02657e42a7496ef170b4a8caf245b925... (SIGHASH_ALL)
      ✓ should hash c61523ef0129bb3952533cbf22ed797fa2088f30... (SIGHASH_ALL)
      ✓ should hash ba3dac6c0182562b0a26d475fe1e36315f0913b6... (SIGHASH_ALL)
      ✓ should hash ac27e7f5025fc877d1d99f7fc18dd4cadbafa50e... (SIGHASH_ALL)
      ✓ should hash edb30140029182b80c8c3255b888f7c7f061c417... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 7e50207303146d1f7ad62843ae8017737a698498... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash c05764f40244fb4ebe4c54f2c5298c7c798aa90e... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 5a59e0b9040654a3596d6dab8146462363cd6549... (SIGHASH_ALL)
      ✓ should hash 156ebc8202065d0b114984ee98c097600c75c859... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 15e37793023c7cbf46e073428908fce0331e4955... (SIGHASH_ALL)
      ✓ should hash f7a09f10027250fc1b70398fb5c6bffd2be9718d... (SIGHASH_ALL)
      ✓ should hash 6d97a9a5029220e04f4ccc342d8394c751282c32... (SIGHASH_ALL)
      ✓ should hash 8e3fddfb028d9e566dfdda251cd874cd3ce72e9d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a603f37b02a35e5f25aae73d0adc0b4b479e68a7... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 9eeedaa8034471a3a0e3165620d1743237986f06... (SIGHASH_ALL)
      ✓ should hash 05921d7c048cf26f76c1219d0237c226454c2a71... (SIGHASH_ALL)
      ✓ should hash b9b44d9f04b9f15e787d7704e6797d51bc463821... (SIGHASH_ALL)
      ✓ should hash ff60473b02574f46d3e49814c484081d1adb9b15... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash f218026204f4f4fc3d3bd0eada07c57b88570d54... (SIGHASH_ALL)
      ✓ should hash 48e7d42103b260b27577b70530d1ac2fed2551e9... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 91ebc4cf01bc1e068d958d72ee6e954b196f1d85... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 3cd4474201be7a6c25403bf00ca62e2aa8f8f4f7... (SIGHASH_ALL)
      ✓ should hash 92fc95f00307a6b3e2572e228011b9c9ed41e58d... (SIGHASH_ALL)
      ✓ should hash 4db591ab018adcef5f4f3f2060e41f7829ce3a07... (SIGHASH_ALL)
      ✓ should hash 503fd5ef029e1beb7b242d10032ac2768f9a1aca... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash c80abebd042cfec3f5c1958ee6970d2b4586e0ab... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 0337b2d5043eb6949a76d6632b8bb393efc7fe26... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 59f6cffd034733f4616a20fe19ea6aaf6abddb30... (SIGHASH_ALL)
      ✓ should hash cbc79b10020b15d605680a24ee11d8098ad94ae5... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 7c07419202fa756d29288c57b5c2b83f3c847a80... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 351cbb57021346e076d2a2889d491e9bfa28c543... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a8252ea903f1e8ff953adb16c1d1455a5036222c... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 2f1a425c0471a5239068c4f38f9df135b1d24bf5... (SIGHASH_ALL)
      ✓ should hash ef3acfd4024defb48def411b8f8ba2dc408dc9ee... (SIGHASH_ALL)
      ✓ should hash ff4468dc0108475fc8d4959a9562879ce4ab4867... (SIGHASH_ALL)
      ✓ should hash 4e8594d803b1d0a26911a2bcdd46d7cbc987b709... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a88830a7023f13ed19ab14fd757358eb6af10d65... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 44e1a2b4010762af23d2027864c784e34ef322b6... (SIGHASH_ALL)
      ✓ should hash 44ca65b901259245abd50a745037b17eb51d9ce1... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash cfa147d2017fe84122122b4dda2f0d6318e59e60... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 91c5d5f6022fea6f230cc4ae446ce040d8313071... (SIGHASH_ALL)
      ✓ should hash 03f20dc202c886907b607e278731ebc5d7373c34... (SIGHASH_ALL)
      ✓ should hash d9611140036881b61e01627078512bc3378386e1... (SIGHASH_ALL)
      ✓ should hash 98b3a0bf034233afdcf0df9d46ac65be84ef839e... (SIGHASH_ALL)
      ✓ should hash 97be4f7702dc20b087a1fdd533c7de762a3f2867... (SIGHASH_NONE)
      ✓ should hash 085b6e04040b5bff81e29b646f0ed4a45e05890a... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash eec32fff03c6a18b12cd7b60b7bdc2dd74a08977... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 98ea7eac0313d9fb03573fb2b8e718180c70ce64... (SIGHASH_NONE | SIGHASH_ANYONECANPAY)
      ✓ should hash 3ab70f4604e8fc7f9de395ec3e4c3de0d560212e... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash bdb6b4d704af0b7234ced671c04ba57421aba7ea... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 54258edd017d22b274fbf0317555aaf11318affe... (SIGHASH_ALL)
      ✓ should hash ce0d322e04f0ffc7774218b251530a7b64ebefca... (SIGHASH_ALL)
      ✓ should hash 47ac54940313430712ebb32004679d3a512242c2... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 233cd90b043916fc41eb870c64543f0111fb31f3... (SIGHASH_ALL)
      ✓ should hash 9200e26b03ff36bc4bf908143de5f97d4d02358d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 45f335ba01ce2073a8b0273884eb5b48f56df474... (SIGHASH_ALL)
      ✓ should hash d8f652a6043b4faeada05e14b81756cd6920cfcf... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 718662be026e1dcf672869ac658fd0c87d6835cf... (SIGHASH_ALL)
      ✓ should hash 94083c840288d40a6983faca876d452f7c52a07d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 30e0d4d20493d0cd0e640b757c9c47a823120e01... (SIGHASH_ALL)
      ✓ should hash f9c69d940276ec00f65f9fe08120fc89385d7350... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 5c0ac112032d6885b7a9071d3c5f493aa16c610a... (SIGHASH_ALL)
      ✓ should hash e3683329026720010b08d4bec0faa244f159ae10... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 48c4afb204204209e1df6805f0697edaa42c0450... (SIGHASH_SINGLE)
      ✓ should hash 00b20fd104dd59705b84d67441019fa26c4c3dec... (SIGHASH_ALL)
      ✓ should hash 455131860220abbaa72015519090a666faf137a0... (SIGHASH_ALL)
      ✓ should hash 624d28cb02c8747915e9af2b13c79b417eb34d2f... (SIGHASH_ALL)
      ✓ should hash 8f28471d02f7d41b2e70e9b4c804f2d90d23fb24... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 10ec50d7046b8b40e4222a3c6449490ebe41513a... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash fef98b7101bf99277b08a6eff17d08f3fcb862e2... (SIGHASH_ALL)
      ✓ should hash 34a2b8830253661b373b519546552a2c3bff7414... (SIGHASH_ALL)
      ✓ should hash 43559290038f32fda86580dd8a4bc4422db88dd2... (SIGHASH_ALL)
      ✓ should hash 6878a6bd02e7e1c8082d5e3ee1b746cfebfac9e8... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 35b6fc06047ebad04783a5167ab5fc9878a00c4e... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash bebb90c302bf91fd4501d33555a5fc5f2e1be281... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash af48319f031b4eeb4319714a285f44244f283cbf... (SIGHASH_ALL)
      ✓ should hash f35befbc03faf8c25cc4bc0b92f6239f477e663b... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash d3da18520216601acf885414538ce2fb4d910997... (SIGHASH_ALL)
      ✓ should hash 8218eb740229c695c252e3630fc6257c42624f97... (SIGHASH_ALL)
      ✓ should hash 1123e7010240310013c74e5def60d8e14dd67aed... (SIGHASH_ALL)
      ✓ should hash fd92fe1003083c5179f97e77bf7d719757881381... (SIGHASH_ALL)
      ✓ should hash d1b6a703038f14d41fcc5cc45455faa135a5322b... (SIGHASH_ALL)
      ✓ should hash 81dadaa7011556683db3fe95262f4fdb20391b7e... (SIGHASH_ALL)
      ✓ should hash 3b937e05032b8895d2f4945cb7e3679be2fbd153... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a48f27ca047997470da74c8ee086ddad82f36d9c... (SIGHASH_ALL)
      ✓ should hash 180cd53101c5074cf0b7f089d139e837fe499327... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash c21ec8b60376c47e057f2c71caa90269888d0ffd... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 128cd90f04b66a4cbc78bf48748f6eec0f08d519... (SIGHASH_ALL)
      ✓ should hash da9695a403493d3511c10e1fe1286f954db0366b... (SIGHASH_ALL)
      ✓ should hash b240517501334021240427adb0b4134336415554... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 96bac43903044a199b4b3efeeec5d196ee23fb05... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash b8fd394001ed255f49ad491fecc990b7f38688e9... (SIGHASH_ALL)
      ✓ should hash e42a76740264677829e30ed610864160c7f97232... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 0f034f32027a8e094119443aa9cfe11737c6d7dd... (SIGHASH_ALL)
      ✓ should hash a2dfa4690214c1ab25331815a5128f143219de51... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 9dbc591f04521670af83fb3bb591c5d4da99206f... (SIGHASH_ALL)
      ✓ should hash 1345fb2c04bb21a35ae33a3f9f295bece3465030... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 7d75dc8f011e5f9f7313ba6aedef8dbe10d0a471... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 1459179504b69f01c066e8ade5e124c748ae5652... (SIGHASH_ALL)
      ✓ should hash d98b777f04b1b3f4de16b07a05c31d79965579d0... (SIGHASH_ALL)
      ✓ should hash cabb1b06045a895e6dcfc0c1e971e94130c46fea... (SIGHASH_ALL)
      ✓ should hash 8b96d7a30132f6005b5bd33ea82aa325e2bcb441... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 112191b7013cfbe18a175eaf09af7a43cbac2c39... (SIGHASH_ALL)
      ✓ should hash ce6e1a9e04b4c746318424705ea69517e5e03433... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a7721d94021652d90c79aaf5022d98219337d50f... (SIGHASH_ALL)
      ✓ should hash 2f7353dd02e395b0a4d16da0f7472db618857cd3... (SIGHASH_NONE)
      ✓ should hash 7d95473604fd5267d0e1bb8c9b8be06d7e83ff18... (SIGHASH_NONE | SIGHASH_ANYONECANPAY)
      ✓ should hash 221d4718023d9ca9fe1af178dbfce02b2b369bf8... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 6f66c0b3013e6ae6aabae9382a4326df31c981ea... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 89e7928c04363cb520eff4465251fd8e41550cbd... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash ca356e2004bea08ec2dd2df203dc275765dc3f60... (SIGHASH_ALL)
      ✓ should hash 82d4fa65017958d53e562fac073df233ab154bd0... (SIGHASH_ALL)
      ✓ should hash 75f6949503e0e47dd70426ef32002d6cdb564a45... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 24f24cd90132b2162f938f1c22d3ca5e7daa8351... (SIGHASH_ALL)
      ✓ should hash 5ff2cac201423064a4d87a96b88f1669b33adddc... (SIGHASH_ALL)
      ✓ should hash 10011f150220ad76a50ccc7bb1a015eda0ff987e... (SIGHASH_ALL)
      ✓ should hash 8b95ec900456648d820a9b8df1d8f816db647df8... (SIGHASH_ALL)
      ✓ should hash babbb7ea01ab5d584727cb44393b17cf66521606... (SIGHASH_ALL)
      ✓ should hash e86a24bc03e4fae784cdf81b24d120348cb5e52d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 53bd749603798ed78798ef0f1861b498fc61dcee... (SIGHASH_NONE | SIGHASH_ANYONECANPAY)
      ✓ should hash 691bf9fc028ca3099020b79184e70039cf53b3c7... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 536bc5e60232eb60954587667d6bcdd19a49048d... (SIGHASH_ALL)
      ✓ should hash 74606eba01c2f98b86c29ba5a32dc7a7807c2abe... (SIGHASH_ALL)
      ✓ should hash 2ed805e20399e52b5bcc9dc075dad5cf19049ff5... (SIGHASH_ALL)
      ✓ should hash fab796ee03f737f07669160d1f1c8bf080004115... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash f2b539a401e4e8402869d5e1502dbc3156dbce93... (SIGHASH_ALL)
      ✓ should hash 9f10b1d8033aee81ac04d84ceee0c03416a784d1... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash ab81755f02b325cbd2377acd416374806aa51482... (SIGHASH_ALL)
      ✓ should hash 7a17e0ef0378dab4c601240639139335da3b7d68... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash ff2ecc09041b4cf5abb7b760e910b775268abee2... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 70a8577804e553e462a859375957db68cfdf724d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a3604e5304caa5a6ba3c257c20b45dcd468f2c73... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash c6a72ed403313b7d027f6864e705ec6b5fa52eb9... (SIGHASH_ALL)
      ✓ should hash 93c12cc30270fc4370c960665b8f774e07942a62... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 97bddc63015f1767619d56598ad0eb5c7e9f880b... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash cc3c9dd303637839fb727270261d8e9ddb8a21b7... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 236f91b702b8ffea3b890700b6f91af713480769... (SIGHASH_ALL)
      ✓ should hash 22e10d2003ab4ea9849a2801921113583b7c35c3... (SIGHASH_ALL)
      ✓ should hash c47d5ad60485cb2f7a825587b95ea665a5937691... (SIGHASH_ALL)
      ✓ should hash 0b43f122032f182366541e7ee18562eb5f39bc7a... (SIGHASH_ALL)
      ✓ should hash 4b0ecc0c03ba35700d2a30a71f28e432ff6ac7e3... (SIGHASH_NONE | SIGHASH_ANYONECANPAY)
      ✓ should hash adaac0a803f66811346271c733036d6e0d45e15a... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash af1c4ab301ec462f76ee69ba419b1b2557b7ded6... (SIGHASH_ALL)
      ✓ should hash 0bfd34210451c92cdfa02125a62ba365448e11ff... (SIGHASH_ALL)
      ✓ should hash 2c84c0640487a4a695751d3e4be48019dbaea85a... (SIGHASH_ALL)
      ✓ should hash 1f7e4b1b045d3efa6cd7a11d7873a8bab886c19b... (SIGHASH_NONE)
      ✓ should hash 467a3e7602e6d1a7a531106791845ec3908a29b8... (SIGHASH_ALL)
      ✓ should hash 8713bc4f01b411149d575ebae575f5dd7e456198... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash f2ba8a8701b9c401efe3dd0695d655e20532b90a... (SIGHASH_ALL)
      ✓ should hash b5a7df6102107beded33ae7f1dec0531d4829dff... (SIGHASH_ALL)
      ✓ should hash 278cb16204b9dadf400266106392c4aa9df01ba0... (SIGHASH_ALL)
      ✓ should hash 49eb2178020a04fca08612c34959fd41447319c1... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 0f96cea9019b4b3233c0485d5b1bad770c246fe8... (SIGHASH_ALL)
      ✓ should hash 9a7d858604577171f5fe3f3fd3e5e039c4b0a067... (SIGHASH_ALL)
      ✓ should hash 148e68480196eb52529af8e83e14127cbfdbd4a1... (SIGHASH_ALL)
      ✓ should hash e2bc29d4013660631ba14ecf75c60ec5e9bed723... (SIGHASH_ALL)
      ✓ should hash 0c8a70d70494dca6ab05b2bc941b5b431c43a292... (SIGHASH_ALL)
      ✓ should hash f98f79cf0274b745e1d6f36da7cbe205a79132a7... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 6c7913f902aa3f5f939dd1615114ce961beda7c1... (SIGHASH_ALL)
      ✓ should hash 4624aa9204584f06a8a325c84e3b108cafb97a38... (SIGHASH_ALL)
      ✓ should hash 16562fc503f1cf9113987040c408bfd4523f1512... (SIGHASH_ALL)
      ✓ should hash 531665d701f86bacbdb881c317ef60d9cd1baeff... (SIGHASH_ALL)
      ✓ should hash 0f1227a20140655a3da36e413b9b5d108a866f6f... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 063ff6eb01aff98d0d2a6db224475010edb634c2... (SIGHASH_ALL)
      ✓ should hash 3320f6730132f830c4681d0cae542188e4177cad... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash c13aa4b702eedd7cde09d0416e649a890d40e675... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash d9a6f20e019dd1b5fae897fb472843903f9c3c22... (SIGHASH_ALL)
      ✓ should hash 157c81bf0490432b3fcb3f9a5b79e5f91f67f05e... (SIGHASH_ALL)
      ✓ should hash a2692fff03b2387f5bacd5640c86ba7df574a0ee... (SIGHASH_ALL)
      ✓ should hash 2c5b003201b88654ac2d02ff6762446cb5a4af77... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash f981b9e104acb93b9a7e2375080f3ea0e7a94ce5... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash e7416df901269b7af14a13d9d0507709b3cd751f... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 402a815902193073625ab13d876190d1bbb72aec... (SIGHASH_ALL)
      ✓ should hash c4b702e502f1a54f235224f0e6de961d2e53b506... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 9b83f78704f492b9b353a3faad8d93f688e88503... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash f492a9da04f80b679708c01224f68203d5ea2668... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 2f73e0b304f154d3a00fde2fdd40e791295e28d6... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 5a60b9b503553f3c099f775db56af3456330f1e4... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 7e98d353045569c52347ca0ff2fdba608829e744... (SIGHASH_ALL)
      ✓ should hash e3649aa40405e6ffe377dbb1bbbb672a40d8424c... (SIGHASH_ALL)
      ✓ should hash 1d033569040700441686672832b531ab55db89b5... (SIGHASH_ALL)
      ✓ should hash 4c4be7540344050e3044f0f1d628039a334a7c1f... (SIGHASH_ALL)
      ✓ should hash 202c18eb012bc0a987e69e205aea63f0f0c089f9... (SIGHASH_ALL)
      ✓ should hash 32fa0b0804e6ea101e137665a041cc2350b794e5... (SIGHASH_NONE | SIGHASH_ANYONECANPAY)
      ✓ should hash ae23424d040cd884ebfb9a815d8f17176980ab80... (SIGHASH_SINGLE)
      ✓ should hash 030f44fc01b4a9267335a95677bd190c1c12655e... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash c05f448f02817740b30652c5681a3b128322f9dc... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 163ba45703dd8c2c5a1c1f8b806afdc710a2a8fc... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 07f7f5530453a12ad0c7eb8fbc3f140c7ab68181... (SIGHASH_ALL)
      ✓ should hash fe647f950311bf8f3a4d90afd7517df306e04a34... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a1050f8604d0f9d2feefcdb5051ae0052f38e21b... (SIGHASH_ALL)
      ✓ should hash cef7316804c3e77fe67fc6207a1ea6ae6eb06b3b... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 7b3ff28004ba3c7590ed6e36f45453ebb3f16636... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash d5c1b16f0248c60a3ddccf7ebd1b3f260360bbdf... (SIGHASH_NONE)
      ✓ should hash 1be8ee5604a9937ebecffc832155d9ba7860d0ca... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 9e0f99c504fbca858c209c6d9371ddd78985be1a... (SIGHASH_SINGLE)
      ✓ should hash 11ce51f90164b4b54b9278f0337d95c50d16f682... (SIGHASH_ALL)
      ✓ should hash 86bc233e02ba3c647e356558e7252481a7769491... (SIGHASH_SINGLE)
      ✓ should hash beac155d03a853bf18cd5c490bb2a245b3b2a501... (SIGHASH_ALL)
      ✓ should hash 81dab34a039c9e225ba8ef421ec8e0e9d46b5172... (SIGHASH_ALL)
      ✓ should hash 489ebbf10478e260ba88c0168bd7509a651b36aa... (SIGHASH_ALL)
      ✓ should hash 6911195d04f449e8eade3bc49fd09b6fb4b7b7ec... (SIGHASH_ALL)
      ✓ should hash 746347cf03faa548f4c0b9d2bd96504d2e780292... (SIGHASH_ALL)
      ✓ should hash e17149010239dd33f847bf1f57896db60e955117... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 144971940223597a2d1dec49c7d4ec557e4f4bd2... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash b11b6752044e650b9c4744fb9c930819227d2ac4... (SIGHASH_ALL)
      ✓ should hash 2aee6b9a02172a8288e02fac654520c9dd9ab93c... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 9554595203ad5d687f34474685425c1919e3d2cd... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 04f51f2a0484cba53d63de1cb0efdcb222999cdf... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 5e4fab42024a27f0544fe11abc781f46596f7508... (SIGHASH_ALL)
      ✓ should hash a115284704b88b45a5f060af429a3a8eab10b26b... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash f3f771ae02939752bfe309d6c652c0d271b7cab1... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash fd3e267203ae7d6d3975e738ca84f12540229bb2... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash f380ae23033646af5dfc186f6599098015139e96... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 5c45d09801bb4d8e7679d857b86b97697472d514... (SIGHASH_SINGLE)
      ✓ should hash 4ecc6bde030ca0f83c0ed3d4b777f94c0c88708c... (SIGHASH_ALL)
      ✓ should hash a59484b501eb50114be0fc79e72ab9bc9f4a5f7a... (SIGHASH_ALL)
      ✓ should hash 53dc1a88046531c7b57a35f4d9adf101d068bf8d... (SIGHASH_ALL)
      ✓ should hash 53f8959f01ddb36afdcd20167edcbb75a63d1865... (SIGHASH_ALL)
      ✓ should hash 5a06cb4602dcfc85f49b8d14513f33c48f67146f... (SIGHASH_ALL)
      ✓ should hash ca9d84fa0129011e1bf27d7cb71819650b59fb29... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash e3cdbfb4014d90ae6a4401e85f7ac717adc2c035... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash b2b6b9ab0283d9d73eeae3d847f41439cd88279c... (SIGHASH_ALL)
      ✓ should hash f30c5c3d01a6edb9e10fafaf7e85db14e7fec558... (SIGHASH_ALL)
      ✓ should hash 4314339e01de40faabcb1b970245a7f19eedbc17... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 2d4cf4e9031b3e175b2ff18cd933151379d9cfac... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash f063171b03e1830fdc1d685a30a377537363ccaf... (SIGHASH_ALL)
      ✓ should hash cf7bdc250249e22cbe23baf6b648328d31773ea0... (SIGHASH_ALL)
      ✓ should hash ac7a125a0269d35f5dbdab9948c48674616e7507... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 3a1f454a03a4591e46cf1f7605a3a130b631bf4d... (SIGHASH_ALL)
      ✓ should hash f59366cc0114c2a18e6bd1347ed9470f2522284e... (SIGHASH_ALL)
      ✓ should hash 6269e0fa0173e76e89657ca495913f1b86af5b8f... (SIGHASH_ALL)
      ✓ should hash eb2bc00604815b9ced1c604960d54beea4a3a74b... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash dc9fe6a8038b84209bbdae5d848e8c040433237f... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash eba8b0de04ac276293c272d0d3636e81400b1aaa... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 91bd040802c92f6fe97411b159df2cd60fb95717... (SIGHASH_ALL)
      ✓ should hash 185cda1a01ecf7a8a8c28466725b60431545fc7a... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a9531f07034091668b65fea8b1a79700d586ac9e... (SIGHASH_ALL)
      ✓ should hash 6b5ecc7903fe0ba37ea551df92a59e12bad0a306... (SIGHASH_ALL)
      ✓ should hash 92c9fb780138abc472e589d5b59489303f234acc... (SIGHASH_ALL)
      ✓ should hash 6f62138301436f33a00b84a26a0457ccbfc0f824... (SIGHASH_SINGLE)
      ✓ should hash 9981143a040a88c2484ac3abe053849e72d04862... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a2bb630b01989bc5d643f2da4fb9b55c0cdf846b... (SIGHASH_ALL)
      ✓ should hash 49f7d0b6037bba276e910ad3cd74966c7b3bc197... (SIGHASH_ALL)
      ✓ should hash 58a4fed801fbd8d92db9dfcb2e26b6ff10b12020... (SIGHASH_ALL)
      ✓ should hash 32765a0b02e455793d9ce530e9f6a44bcbc612e8... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 17fad0d303da0d764fedf9f2887a91ea625331b2... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 236c32850300045e292c84ede2b9ab5733ba0831... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash b78d5fd601345f3100af494cdf447e7d4076179f... (SIGHASH_ALL)
      ✓ should hash 5a2257df03554550b774e677f348939b37f8e765... (SIGHASH_ALL)
      ✓ should hash e0032ad601269154b3fa72d3888a3151da0aed32... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 014b2a5304d46764817aca180dca50f5ab25f2e0... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash c4ef04c103c5dde65410fced19bf6a569549ecf0... (SIGHASH_ALL)
      ✓ should hash 29083fe00398bd2bb76ceb178f22c51b49b5c029... (SIGHASH_ALL)
      ✓ should hash 1201ab5d04f89f07c0077abd009762e59db4bb0d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 344fa11e01c19c4dd232c77742f0dd0aeb3695f1... (SIGHASH_SINGLE | SIGHASH_ANYONECANPAY)
      ✓ should hash b2fda1950191358a2b855f5626a0ebc830ab625b... (SIGHASH_ALL)
      ✓ should hash a4a6bbd201aa5d882957ac94f2c74d4747ae32d6... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 584e8d6c035a6b2f9dac2791b980a485994bf38e... (SIGHASH_ALL)
      ✓ should hash 83a583d204d926f2ee587a83dd526cf1e25a44bb... (SIGHASH_ALL)
      ✓ should hash ffd35d51042f290108fcb6ea49a560ba0a6560f9... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 6c9a4b98013c8f1cae1b1df9f0f2de518d0c5020... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash e01dc7f0021dc07928906b2946ca3e9ac95f14ad... (SIGHASH_ALL)
      ✓ should hash 009046a1023f266d0113556d604931374d7932b4... (SIGHASH_SINGLE | SIGHASH_ANYONECANPAY)
      ✓ should hash df76ec0801a3fcf3d18862c5f686b878266dd508... (SIGHASH_ALL)
      ✓ should hash 828fd3e0031084051ccef9cfdd97fae4d9cc50c0... (SIGHASH_ALL)
      ✓ should hash c4b80f850323022205b3e1582f1ed097911a81be... (SIGHASH_ALL)
      ✓ should hash 8ab69ed50351b47b6e04ac05e12320984a638017... (SIGHASH_ALL)
      ✓ should hash 2484991e047f1cf3cfe38eab071f915fe86ebd45... (SIGHASH_ALL)
      ✓ should hash 54839ef9026f65db30fc9cfcb71f5f84d7bb3c48... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 5036d7080434eb4eef93efda86b9131b0b4c6a0c... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 9ad5ccf503fa4facf6a27b538bc910cce83c118d... (SIGHASH_ALL)
      ✓ should hash 669538a204047214ce058aed6a07ca5ad4866c82... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a7f139e502af5894be88158853b7cbea49ba0841... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 3b94438f0366f9f53579a9989b86a95d134256ce... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash e5dca8a20456de0a67e185fa6ea94085ceae478d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 972128b904e7b673517e96e98d80c0c8ceceae76... (SIGHASH_ALL)
      ✓ should hash 1fb4085b022c6cfb848f8af7ba3ba8d21bd23ffa... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 5374f0c603d727f63006078bd6c3dce48bd5d0a4... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash c441132102cc82101b6f31c1025066ab089f2810... (SIGHASH_ALL)
      ✓ should hash ab82ad3b04545bd86b3bb937eb1af304d3ef1a6d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 8bff9d170419fa6d556c65fa227a185fe066efc1... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 0e1633b4041c50f656e882a53fde964e7f0c853b... (SIGHASH_ALL)
      ✓ should hash 2b052c24022369e956a8d318e38780ef73b487ba... (SIGHASH_ALL)
      ✓ should hash 073bc856015245f03b2ea2da62ccedc44ecb99e4... (SIGHASH_ALL)
      ✓ should hash 7888b71403f6d522e414d4ca2e12786247acf3e7... (SIGHASH_ALL)
      ✓ should hash cc4dda57047bd0ca6806243a6a4b108f7ced43d8... (SIGHASH_NONE)
      ✓ should hash b7877f82019c832707a60cf14fba44cfa254d787... (SIGHASH_ALL)
      ✓ should hash aeb14046045a28cc59f244c2347134d3434faaf9... (SIGHASH_ALL)
      ✓ should hash c9270fe004c7911b791a00999d108ce42f9f1b19... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 57a5a04c0278c8c8e243d2df4bb716f81d41ac41... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 072b75a504ad2550c2e9a02614bc9b2a2f50b5b5... (SIGHASH_ALL)
      ✓ should hash 7e27c42d0279c1a05eeb9b9faedcc9be0cab6303... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 11414de403d7f6c0135a9df01cb108c1359b8d4e... (SIGHASH_NONE)
      ✓ should hash 1c6b5f29033fc139338658237a42456123727c84... (SIGHASH_ALL)
      ✓ should hash 978b9dad0214cfc7ce392d74d9dcc507350dc340... (SIGHASH_ALL)
      ✓ should hash 442f1c8703ab39876153c241ab3d69f432ba6db4... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 2b3470dd028083910117f86614cdcfb459ee56d8... (SIGHASH_ALL)
      ✓ should hash d74282b501be95d3c19a5d9da3d49c8a88a7049c... (SIGHASH_ALL)
      ✓ should hash 3a5644a9010f199f253f858d65782d3caec0ac64... (SIGHASH_ALL)
      ✓ should hash 67b3cc43049d13007485a8133b90d94648bcf30e... (SIGHASH_ALL)
      ✓ should hash bda1ff6804a3c228b7a12799a4c20917301dd501... (SIGHASH_ALL)
      ✓ should hash 2ead28ff0243b3ab285e5d1067f0ec8724224402... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash db4904e6026b6dd8d898f278c6428a176410d1ff... (SIGHASH_ALL)
      ✓ should hash dca31ad10461ead74751e83d9a81dcee08db778d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash e14e1a9f0442ab44dfc5f6d945ad1ff8a376bc96... (SIGHASH_ALL)
      ✓ should hash 720d4693025ca3d347360e219e9bc746ef8f7bc8... (SIGHASH_ALL)
      ✓ should hash 69df842a04c1410bfca10896467ce664cfa31c68... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash adf2340d03af5c589cb5d28c06635ac07dd0757b... (SIGHASH_ALL)
      ✓ should hash e4fec9f10378a95199c1dd23c6228732c9de0d79... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 4000d3600100b7a3ff5b41ec8d6ccdc8b2775ad0... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash eabc0aa701fe489c0e4e6222d72b52f083166b49... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash d48d55d304aad0139783b44789a771539d052db5... (SIGHASH_ALL)
      ✓ should hash 9746f45b039bfe723258fdb6be77eb85917af808... (SIGHASH_ALL)
      ✓ should hash 8731b64903d735ba16da64af537eaf487b57d739... (SIGHASH_ALL)
      ✓ should hash f5cfc52f016209ab1385e890c2865a74e9307659... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash df0a32ae01c4672fd1abd0b2623aae0a1a825602... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash d102d10c028b9c721abb259fe70bc68962f6cae3... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash cef930ed01c36fcb1d62ceef931bef57098f27a7... (SIGHASH_ALL)
      ✓ should hash b1c0b71804dff30812b92eefb533ac77c4b9fdb9... (SIGHASH_SINGLE)
      ✓ should hash 6a270ee404ebc8d137cfd4bb6b92aa3702213a31... (SIGHASH_ALL)
      ✓ should hash 3657e4260304ccdc19936e47bdf058d36167ee3d... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash a0eb6dc402994e493c787b45d1f946d267b09c59... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 6e67c0d3027701ef71082204c85ed63c700ef140... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash 8f53639901f1d643e01fc631f632b7a16e831d84... (SIGHASH_ALL)
      ✓ should hash 491f99cb01bdfba1aa235e5538dac081fae9ce55... (SIGHASH_ALL | SIGHASH_ANYONECANPAY)
      ✓ should hash b3cad3a7041c2c17d90a2cd994f6c37307753fa3... (SIGHASH_NONE | SIGHASH_ANYONECANPAY)
      ✓ should hash e1cfd73b0125add9e9d699f5a45dca458355af17... (SIGHASH_ALL)
      ✓ should hash cf781855040a755f5ba85eef93837236b34a5d3d... (SIGHASH_ALL)
      ✓ should hash fea256ce01272d125e577c0a09570a7136689828... (SIGHASH_ALL)
    ECSignature.parseScriptSignature
      ✓ can parse 300602010002010001
      ✓ can parse 3008020200ff020200ff01
      ✓ can parse 304402203932c892e2e550f3af8ee4ce9c215a87f9bb831dcac87b2838e2c2eaa891df0c022030b61dd36543125d56b9f9f3a1f9353189e5af33cdda8d77a5209aec03978fa001
      ✓ can parse 30450220076045be6f9eca28ff1ec606b833d0b87e70b2a630f5e3a496b110967a40f90a0221008fffd599910eefe00bc803c688c2eca1d2ba7f6b180620eaa03488e6585db6ba01
      ✓ can parse 3046022100876045be6f9eca28ff1ec606b833d0b87e70b2a630f5e3a496b110967a40f90a0221008fffd599910eefe00bc803c688c2eca1d2ba7f6b180620eaa03488e6585db6ba01
      ✓ throws on too short
      ✓ throws on too long
      ✓ throws on hashtype
      ✓ throws on type
      ✓ throws on total length
      ✓ throws on S len oob
      ✓ throws on R+S
      ✓ throws on R type
      ✓ throws on R len = 0
      ✓ throws on R<0
      ✓ throws on R padded
      ✓ throws on S type
      ✓ throws on S len = 0
      ✓ throws on S<0
      ✓ throws on S padded

  privateKeyBufferFromECPair
    ✓ pads short private keys
    ✓ does not pad 32 bytes private keys
    ✓ throws if passed value is not ecpair

  privateKeyBufferToECPair
    ✓ constructs an ECPair from a random private key buffer
    ✓ throws if the private key buffer is not a buffer
    ✓ throws if the private key buffer is not 32 bytes

  Block
    version
      ✓ should be interpreted as an int32le
    calculateTarget
      ✓ returns 00000000ffff0000000000000000000000000000000000000000000000000000 for 0x1d00ffff
      ✓ returns 000000000000ffff000000000000000000000000000000000000000000000000 for 0x1b80ffff
      ✓ returns 00000000000404cb000000000000000000000000000000000000000000000000 for 0x1b0404cb
      ✓ returns 000000000000000014dd04000000000000000000000000000000000000000000 for 0x1814dd04
      ✓ returns 00000000000000000000000000000000000000007fca00000000000000000000 for 0xcffca00
      ✓ returns 1234560000000000000000000000000000000000000000000000000000000000 for 0x20123456
      ✓ returns 00000000000000001bc330000000000000000000000000000000000000000000 for 0x181bc330
      ✓ returns 0000000000000000000000000000000000000000000000000000000000000000 for 0x01003456
      ✓ returns 0000000000000000000000000000000000000000000000000000000000000012 for 0x01123456
      ✓ returns 0000000000000000000000000000000000000000000000000000000000000080 for 0x02008000
      ✓ returns 0000000000000000000000000000000000000000000000000000000092340000 for 0x05009234
      ✓ returns 0000000000000000000000000000000000000000000000000000000012345600 for 0x04923456
      ✓ returns 0000000000000000000000000000000000000000000000000000000012345600 for 0x04123456
      ✓ returns 1234560000000000000000000000000000000000000000000000000000000000 for 0x20123456
      ✓ returns 00000000000000001bc330000000000000000000000000000000000000000000 for 0x181bc330
      ✓ returns 0000000000000000000000000000000000000000000000000000000000000000 for 0x01003456
      ✓ returns 0000000000000000000000000000000000000000000000000000000000000012 for 0x01123456
      ✓ returns 0000000000000000000000000000000000000000000000000000000000000080 for 0x02008000
      ✓ returns 0000000000000000000000000000000000000000000000000000000092340000 for 0x05009234
      ✓ returns 0000000000000000000000000000000000000000000000000000000012345600 for 0x04923456
      ✓ returns 0000000000000000000000000000000000000000000000000000000012345600 for 0x04123456
    fromBuffer/fromHex
      ✓ imports Headers only
      ✓ imports Headers only
      ✓ imports Headers + Coinbase
      ✓ imports Block (~3 KiB)
      ✓ imports Block (~32 KiB)
      ✓ imports Headers only - nonce changed
      ✓ imports Genesis Block
      ✓ throws on Buffer too small \(< 80 bytes\)
    toBuffer/toHex
      ✓ exports Headers only
      ✓ exports Headers only
      ✓ exports Headers + Coinbase
      ✓ exports Block (~3 KiB)
      ✓ exports Block (~32 KiB)
      ✓ exports Headers only - nonce changed
      ✓ exports Genesis Block
    getHash/getId
      ✓ returns 000000006c840ca5ff4dadcfeb4fe14b3d90c144be0fe5b8d06b329b8f8f3855 for Headers only
      ✓ returns 0000000000000000110f732932babf666ee2d7438529f55a286a751c30dff720 for Headers only
      ✓ returns 000000006c840ca5ff4dadcfeb4fe14b3d90c144be0fe5b8d06b329b8f8f3855 for Headers + Coinbase
      ✓ returns 000000005ee8f3674748276fdc56a0202714d94bde87cd943195cc84cf57caf0 for Block (~3 KiB)
      ✓ returns 000000000c9f25eb2565f81cdbe98aa692ccda81a3532cea1301a284b8f0cc0c for Block (~32 KiB)
      ✓ returns 3d7e96a81344bf43c4cb695de640993f2a1cc4511dcc95f3e777ebc7f037ec0f for Headers only - nonce changed
      ✓ returns 000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f for Genesis Block
    getUTCDate
      ✓ returns UTC date of 000000006c840ca5ff4dadcfeb4fe14b3d90c144be0fe5b8d06b329b8f8f3855
      ✓ returns UTC date of 0000000000000000110f732932babf666ee2d7438529f55a286a751c30dff720
      ✓ returns UTC date of 000000006c840ca5ff4dadcfeb4fe14b3d90c144be0fe5b8d06b329b8f8f3855
      ✓ returns UTC date of 000000005ee8f3674748276fdc56a0202714d94bde87cd943195cc84cf57caf0
      ✓ returns UTC date of 000000000c9f25eb2565f81cdbe98aa692ccda81a3532cea1301a284b8f0cc0c
      ✓ returns UTC date of 3d7e96a81344bf43c4cb695de640993f2a1cc4511dcc95f3e777ebc7f037ec0f
      ✓ returns UTC date of 000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f
    calculateMerkleRoot
      ✓ should throw on zero-length transaction array
      ✓ returns cf52f0ed6571367818a801a169e64030d8cab1a9f17e27170a6924127e19dbb8 for 000000006c840ca5ff4dadcfeb4fe14b3d90c144be0fe5b8d06b329b8f8f3855
      ✓ returns 0ebdaf5341d911e69ab53928e3f9f46e5ece27b950f3b43eae521a602bde41d3 for 000000005ee8f3674748276fdc56a0202714d94bde87cd943195cc84cf57caf0
      ✓ returns 0c40f497466fe67a94dd9dd6851844097ec0e30656959ccc26efde12e119f770 for 000000000c9f25eb2565f81cdbe98aa692ccda81a3532cea1301a284b8f0cc0c
      ✓ returns 3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a for 000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f
    checkMerkleRoot
      ✓ returns true for 000000006c840ca5ff4dadcfeb4fe14b3d90c144be0fe5b8d06b329b8f8f3855
      ✓ returns true for 000000005ee8f3674748276fdc56a0202714d94bde87cd943195cc84cf57caf0
      ✓ returns true for 000000000c9f25eb2565f81cdbe98aa692ccda81a3532cea1301a284b8f0cc0c
      ✓ returns true for 000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f
    checkProofOfWork
      ✓ returns true for 000000006c840ca5ff4dadcfeb4fe14b3d90c144be0fe5b8d06b329b8f8f3855
      ✓ returns true for 0000000000000000110f732932babf666ee2d7438529f55a286a751c30dff720
      ✓ returns true for 000000006c840ca5ff4dadcfeb4fe14b3d90c144be0fe5b8d06b329b8f8f3855
      ✓ returns true for 000000005ee8f3674748276fdc56a0202714d94bde87cd943195cc84cf57caf0
      ✓ returns true for 000000000c9f25eb2565f81cdbe98aa692ccda81a3532cea1301a284b8f0cc0c
      ✓ returns false for 3d7e96a81344bf43c4cb695de640993f2a1cc4511dcc95f3e777ebc7f037ec0f
      ✓ returns true for 000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f

  bufferutils
    readUInt64LE
      ✓ decodes 0000000000000000
      ✓ decodes 0100000000000000
      ✓ decodes fc00000000000000
      ✓ decodes fd00000000000000
      ✓ decodes fe00000000000000
      ✓ decodes ff00000000000000
      ✓ decodes feff000000000000
      ✓ decodes ffff000000000000
      ✓ decodes 0000010000000000
      ✓ decodes 0100010000000000
      ✓ decodes ffffffff00000000
      ✓ decodes 0000000001000000
      ✓ decodes 0100000001000000
      ✓ decodes ffffffffffff1f00
      ✓ throws on n === 2^53
      ✓ throws on n > 2^53
    writeUInt64LE
      ✓ encodes 0
      ✓ encodes 1
      ✓ encodes 252
      ✓ encodes 253
      ✓ encodes 254
      ✓ encodes 255
      ✓ encodes 65534
      ✓ encodes 65535
      ✓ encodes 65536
      ✓ encodes 65537
      ✓ encodes 4294967295
      ✓ encodes 4294967296
      ✓ encodes 4294967297
      ✓ encodes 9007199254740991
      ✓ throws on n === 2^53
      ✓ throws on n > 2^53
    BufferWriter
      ✓ writeUint8
      ✓ writeInt32
      ✓ writeUInt32
      ✓ writeUInt64
      ✓ writeVarInt
      ✓ writeSlice
      ✓ writeVarSlice
      ✓ writeVector
    BufferReader
      ✓ readUint8
      ✓ readInt32
      ✓ readUInt32
      ✓ readUInt64
      ✓ readVarInt
      ✓ readSlice
      ✓ readVarSlice
      ✓ readVector

  crypto
    hash160
      ✓ returns cdb00698f02afd929ffabea308340fa99ac2afa8 for 0000000000000001
      ✓ returns abaf1119f83e384210fe8e222eac76e2f0da39dc for 0101010101010101
      ✓ returns f86221f5a1fca059a865c0b7d374dfa9d5f3aeb4 for ffffffffffffffff
      ✓ returns 9763e6b367c363bd6b88a7b361c98e6beee243a5 for 4c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e20446f6e65632061742066617563696275732073617069656e2c2076656c20666163696c6973697320617263752e20536564207574206d61737361206e6962682e205574206d6f6c6c69732070756c76696e6172206d617373612e20557420756c6c616d636f7270657220646f6c6f7220656e696d2c20696e206d6f6c657374696520656e696d20636f6e64696d656e74756d2061632e20416c697175616d206572617420766f6c75747061742e204e756c6c6120736f64616c657320617420647569206e656320
    hash256
      ✓ returns 3ae5c198d17634e79059c2cd735491553d22c4e09d1d9fea3ecf214565df2284 for 0000000000000001
      ✓ returns 728338d99f356175c4945ef5cccfa61b7b56143cbbf426ddd0e0fc7cfe8c3c23 for 0101010101010101
      ✓ returns 752adad0a7b9ceca853768aebb6965eca126a62965f698a0c1bc43d83db632ad for ffffffffffffffff
      ✓ returns 033588797115feb3545052670cac2a46584ab3cb460de63756ee0275e66b5799 for 4c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e20446f6e65632061742066617563696275732073617069656e2c2076656c20666163696c6973697320617263752e20536564207574206d61737361206e6962682e205574206d6f6c6c69732070756c76696e6172206d617373612e20557420756c6c616d636f7270657220646f6c6f7220656e696d2c20696e206d6f6c657374696520656e696d20636f6e64696d656e74756d2061632e20416c697175616d206572617420766f6c75747061742e204e756c6c6120736f64616c657320617420647569206e656320
    ripemd160
      ✓ returns 8d1a05d1bc08870968eb8a81ad4393fd3aac6633 for 0000000000000001
      ✓ returns 5825701b4b9767fd35063b286dca3582853e0630 for 0101010101010101
      ✓ returns cb760221600ed34337ca3ab70016b5f58c838120 for ffffffffffffffff
      ✓ returns cad8593dcdef12ee334c97bab9787f07b3f3a1a5 for 4c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e20446f6e65632061742066617563696275732073617069656e2c2076656c20666163696c6973697320617263752e20536564207574206d61737361206e6962682e205574206d6f6c6c69732070756c76696e6172206d617373612e20557420756c6c616d636f7270657220646f6c6f7220656e696d2c20696e206d6f6c657374696520656e696d20636f6e64696d656e74756d2061632e20416c697175616d206572617420766f6c75747061742e204e756c6c6120736f64616c657320617420647569206e656320
    sha1
      ✓ returns cb473678976f425d6ec1339838f11011007ad27d for 0000000000000001
      ✓ returns c0357a32ed1f6a03be92dd094476f7f1a2e214ec for 0101010101010101
      ✓ returns be673e8a56eaa9d8c1d35064866701c11ef8e089 for ffffffffffffffff
      ✓ returns 10d96fb43aca84e342206887bbeed3065d4e4344 for 4c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e20446f6e65632061742066617563696275732073617069656e2c2076656c20666163696c6973697320617263752e20536564207574206d61737361206e6962682e205574206d6f6c6c69732070756c76696e6172206d617373612e20557420756c6c616d636f7270657220646f6c6f7220656e696d2c20696e206d6f6c657374696520656e696d20636f6e64696d656e74756d2061632e20416c697175616d206572617420766f6c75747061742e204e756c6c6120736f64616c657320617420647569206e656320
    sha256
      ✓ returns cd2662154e6d76b2b2b92e70c0cac3ccf534f9b74eb5b89819ec509083d00a50 for 0000000000000001
      ✓ returns 04abc8821a06e5a30937967d11ad10221cb5ac3b5273e434f1284ee87129a061 for 0101010101010101
      ✓ returns 12a3ae445661ce5dee78d0650d33362dec29c4f82af05e7e57fb595bbbacf0ca for ffffffffffffffff
      ✓ returns a7fb8276035057ed6479c5f2305a96da100ac43f0ac10f277e5ab8c5457429da for 4c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e20446f6e65632061742066617563696275732073617069656e2c2076656c20666163696c6973697320617263752e20536564207574206d61737361206e6962682e205574206d6f6c6c69732070756c76696e6172206d617373612e20557420756c6c616d636f7270657220646f6c6f7220656e696d2c20696e206d6f6c657374696520656e696d20636f6e64696d656e74756d2061632e20416c697175616d206572617420766f6c75747061742e204e756c6c6120736f64616c657320617420647569206e656320

  ecdsa
    deterministicGenerateK
      ✓ for "Everything should be made as simple as possible, but not simpler."
      ✓ for "Equations are more important to me, because politics is for the present, but an equation is something for eternity."
      ✓ for "Not only is the Universe stranger than we think, it is stranger than we can think."
      ✓ for "How wonderful that we have met with a paradox. Now we have some hope of making progress."
      ✓ for "Computer science is no more about computers than astronomy is about telescopes."
      ✓ for "...if you aren't, at any given time, scandalized by code you wrote five or even three years ago, you're not learning anywhere near enough"
      ✓ for "The question of whether computers can think is like the question of whether submarines can swim."
      ✓ loops until an appropriate k value is found
      ✓ loops until a suitable signature is found
      ✓ produces the expected k values for test data if k wasn't suitable
      ✓ produces the expected k values for Everything should be made as simple as possible, but not simpler. if k wasn't suitable
      ✓ produces the expected k values for Satoshi Nakamoto if k wasn't suitable
      ✓ produces the expected k values for Diffie Hellman if k wasn't suitable
      ✓ produces the expected k values for Japan if k wasn't suitable
      ✓ produces the expected k values for Bitcoin if k wasn't suitable
      ✓ produces the expected k values for i2FLPP8WEus5WPjpoHwheXOMSobUJVaZM1JPMQZq if k wasn't suitable
      ✓ produces the expected k values for lEE55EJNP7aLrMtjkeJKKux4Yg0E8E1SAJnWTCEh if k wasn't suitable
      ✓ produces the expected k values for 2SaVPvhxkAPrayIVKcsoQO5DKA8Uv5X/esZFlf+y if k wasn't suitable
      ✓ produces the expected k values for 00A0OwO2THi7j5Z/jp0FmN6nn7N/DQd6eBnCS+/b if k wasn't suitable
    sign
      ✓ produces a deterministic signature for "Everything should be made as simple as possible, but not simpler." (80ms)
      ✓ produces a deterministic signature for "Equations are more important to me, because politics is for the present, but an equation is something for eternity."
      ✓ produces a deterministic signature for "Not only is the Universe stranger than we think, it is stranger than we can think."
      ✓ produces a deterministic signature for "How wonderful that we have met with a paradox. Now we have some hope of making progress."
      ✓ produces a deterministic signature for "Computer science is no more about computers than astronomy is about telescopes."
      ✓ produces a deterministic signature for "...if you aren't, at any given time, scandalized by code you wrote five or even three years ago, you're not learning anywhere near enough"
      ✓ produces a deterministic signature for "The question of whether computers can think is like the question of whether submarines can swim."
      ✓ should sign with low S value
    verify
      ✓ verifies a valid signature for "Everything should be made as simple as possible, but not simpler." (39ms)
      ✓ verifies a valid signature for "Equations are more important to me, because politics is for the present, but an equation is something for eternity."
      ✓ verifies a valid signature for "Not only is the Universe stranger than we think, it is stranger than we can think."
      ✓ verifies a valid signature for "How wonderful that we have met with a paradox. Now we have some hope of making progress."
      ✓ verifies a valid signature for "Computer science is no more about computers than astronomy is about telescopes." (53ms)
      ✓ verifies a valid signature for "...if you aren't, at any given time, scandalized by code you wrote five or even three years ago, you're not learning anywhere near enough" (40ms)
      ✓ verifies a valid signature for "The question of whether computers can think is like the question of whether submarines can swim."
      ✓ fails to verify with The wrong signature
      ✓ fails to verify with Invalid r value (< 0)
      ✓ fails to verify with Invalid r value (== 0)
      ✓ fails to verify with Invalid r value (>= n)
      ✓ fails to verify with Invalid s value (< 0)
      ✓ fails to verify with Invalid s value (== 0)
      ✓ fails to verify with Invalid s value (>= n)
      ✓ fails to verify with Invalid r, s values (r = s = -n)

  ECPair
    constructor
      ✓ defaults to compressed
      ✓ supports the uncompressed option
      ✓ supports the network option
      ✓ calculates the public point for KwDiBf89QgGbjEhKnhXJuH7LrciVrZi3qYjgd9M7rFU73sVHnoWn
      ✓ calculates the public point for 5HpHagT65TZzG1PH3CSu63k8DbpvD8s5ip4nEB3kEsreAnchuDf
      ✓ calculates the public point for KxhEDBQyyEFymvfJD96q8stMbJMbZUb6D1PmXqBWZDU2WvbvVs9o
      ✓ calculates the public point for KzrA86mCVMGWnLGBQu9yzQa32qbxb5dvSK4XhyjjGAWSBKYX4rHx
      ✓ calculates the public point for 5JdxzLtFPHNe7CAL8EBC6krdFv9pwPoRo4e3syMZEQT9srmK8hh
      ✓ calculates the public point for cRD9b1m3vQxmwmjSoJy7Mj56f4uNFXjcWMCzpQCEmHASS4edEwXv
      ✓ calculates the public point for 92Qba5hnyWSn5Ffcka56yMQauaWY6ZLd91Vzxbi4a9CCetaHtYj
      ✓ calculates the public point for L5oLkpV3aqBjhki6LmvChTCV6odsp4SXM6FfU2Gppt5kFLaHLuZ9
      ✓ throws Private key must be greater than 0
      ✓ throws Private key must be greater than 0
      ✓ throws Private key must be less than the curve order
      ✓ throws Private key must be less than the curve order
      ✓ throws Expected property "compressed" of type \?Boolean, got Number 2
      ✓ throws Unexpected publicKey parameter
      ✓ throws Expected property "network.messagePrefix" of type Buffer|String, got undefined
    getPublicKeyBuffer
      ✓ wraps Q.getEncoded
    getPrivateKeyBuffer
      ✓ pads short private keys
      ✓ does not pad 32 bytes private keys
      ✓ throws if the key is too long
    fromWIF
      ✓ imports KwDiBf89QgGbjEhKnhXJuH7LrciVrZi3qYjgd9M7rFU73sVHnoWn (bitcoin)
      ✓ imports 5HpHagT65TZzG1PH3CSu63k8DbpvD8s5ip4nEB3kEsreAnchuDf (bitcoin)
      ✓ imports KxhEDBQyyEFymvfJD96q8stMbJMbZUb6D1PmXqBWZDU2WvbvVs9o (bitcoin)
      ✓ imports KzrA86mCVMGWnLGBQu9yzQa32qbxb5dvSK4XhyjjGAWSBKYX4rHx (bitcoin)
      ✓ imports 5JdxzLtFPHNe7CAL8EBC6krdFv9pwPoRo4e3syMZEQT9srmK8hh (bitcoin)
      ✓ imports cRD9b1m3vQxmwmjSoJy7Mj56f4uNFXjcWMCzpQCEmHASS4edEwXv (testnet)
      ✓ imports 92Qba5hnyWSn5Ffcka56yMQauaWY6ZLd91Vzxbi4a9CCetaHtYj (testnet)
      ✓ imports L5oLkpV3aqBjhki6LmvChTCV6odsp4SXM6FfU2Gppt5kFLaHLuZ9 (bitcoin)
      ✓ imports KwDiBf89QgGbjEhKnhXJuH7LrciVrZi3qYjgd9M7rFU73sVHnoWn (via list of networks)
      ✓ imports 5HpHagT65TZzG1PH3CSu63k8DbpvD8s5ip4nEB3kEsreAnchuDf (via list of networks)
      ✓ imports KxhEDBQyyEFymvfJD96q8stMbJMbZUb6D1PmXqBWZDU2WvbvVs9o (via list of networks)
      ✓ imports KzrA86mCVMGWnLGBQu9yzQa32qbxb5dvSK4XhyjjGAWSBKYX4rHx (via list of networks)
      ✓ imports 5JdxzLtFPHNe7CAL8EBC6krdFv9pwPoRo4e3syMZEQT9srmK8hh (via list of networks)
      ✓ imports cRD9b1m3vQxmwmjSoJy7Mj56f4uNFXjcWMCzpQCEmHASS4edEwXv (via list of networks)
      ✓ imports 92Qba5hnyWSn5Ffcka56yMQauaWY6ZLd91Vzxbi4a9CCetaHtYj (via list of networks)
      ✓ imports L5oLkpV3aqBjhki6LmvChTCV6odsp4SXM6FfU2Gppt5kFLaHLuZ9 (via list of networks)
      ✓ throws on 92Qba5hnyWSn5Ffcka56yMQauaWY6ZLd91Vzxbi4a9CCetaHtYj
      ✓ throws on brQnSed3Fia1w9VcbbS6ZGDgJ6ENkgwuQY2LS7pEC5bKHD1fMF
      ✓ throws on KwDiBf89QgGbjEhKnhXJuH7LrciVrZi3qYjgd9M7rFU73sfZr2ym
      ✓ throws on 3tq8Vmhh9SN5XhjTGSWgx8iKk59XbKG6UH4oqpejRuJhfYD
      ✓ throws on 38uMpGARR2BJy5p4dNFKYg9UsWNoBtkpbdrXDjmfvz8krCtw3T1W92ZDSR
    toWIF
      ✓ exports KwDiBf89QgGbjEhKnhXJuH7LrciVrZi3qYjgd9M7rFU73sVHnoWn
      ✓ exports 5HpHagT65TZzG1PH3CSu63k8DbpvD8s5ip4nEB3kEsreAnchuDf
      ✓ exports KxhEDBQyyEFymvfJD96q8stMbJMbZUb6D1PmXqBWZDU2WvbvVs9o
      ✓ exports KzrA86mCVMGWnLGBQu9yzQa32qbxb5dvSK4XhyjjGAWSBKYX4rHx
      ✓ exports 5JdxzLtFPHNe7CAL8EBC6krdFv9pwPoRo4e3syMZEQT9srmK8hh
      ✓ exports cRD9b1m3vQxmwmjSoJy7Mj56f4uNFXjcWMCzpQCEmHASS4edEwXv
      ✓ exports 92Qba5hnyWSn5Ffcka56yMQauaWY6ZLd91Vzxbi4a9CCetaHtYj
      ✓ exports L5oLkpV3aqBjhki6LmvChTCV6odsp4SXM6FfU2Gppt5kFLaHLuZ9
    makeRandom
      ✓ allows a custom RNG to be used
      ✓ retains the same defaults as ECPair constructor
      ✓ supports the options parameter
      ✓ loops until d is within interval [1, n - 1] : 1
      ✓ loops until d is within interval [1, n - 1] : n - 1
      uses randombytes RNG
        ✓ generates a ECPair
    getAddress
      ✓ returns 1BgGZ9tcN4rm9KBzDn7KprQz87SZ26SAMH for KwDiBf89QgGbjEhKnhXJuH7LrciVrZi3qYjgd9M7rFU73sVHnoWn
      ✓ returns 1EHNa6Q4Jz2uvNExL497mE43ikXhwF6kZm for 5HpHagT65TZzG1PH3CSu63k8DbpvD8s5ip4nEB3kEsreAnchuDf
      ✓ returns 1MasfEKgSiaSeri2C6kgznaqBNtyrZPhNq for KxhEDBQyyEFymvfJD96q8stMbJMbZUb6D1PmXqBWZDU2WvbvVs9o
      ✓ returns 1LwwMWdSEMHJ2dMhSvAHZ3g95tG2UBv9jg for KzrA86mCVMGWnLGBQu9yzQa32qbxb5dvSK4XhyjjGAWSBKYX4rHx
      ✓ returns 1zXcfvKCLgsFdJDYPuqpu1sF3q92tnnUM for 5JdxzLtFPHNe7CAL8EBC6krdFv9pwPoRo4e3syMZEQT9srmK8hh
      ✓ returns n1TteZiR3NiYojqKAV8fNxtTwsrjM7kVdj for cRD9b1m3vQxmwmjSoJy7Mj56f4uNFXjcWMCzpQCEmHASS4edEwXv
      ✓ returns mgWUuj1J1N882jmqFxtDepEC73Rr22E9GU for 92Qba5hnyWSn5Ffcka56yMQauaWY6ZLd91Vzxbi4a9CCetaHtYj
      ✓ returns 1GrLCmVQXoyJXaPJQdqssNqwxvha1eUo2E for L5oLkpV3aqBjhki6LmvChTCV6odsp4SXM6FfU2Gppt5kFLaHLuZ9
    getNetwork
      ✓ returns bitcoin for KwDiBf89QgGbjEhKnhXJuH7LrciVrZi3qYjgd9M7rFU73sVHnoWn
      ✓ returns bitcoin for 5HpHagT65TZzG1PH3CSu63k8DbpvD8s5ip4nEB3kEsreAnchuDf
      ✓ returns bitcoin for KxhEDBQyyEFymvfJD96q8stMbJMbZUb6D1PmXqBWZDU2WvbvVs9o
      ✓ returns bitcoin for KzrA86mCVMGWnLGBQu9yzQa32qbxb5dvSK4XhyjjGAWSBKYX4rHx
      ✓ returns bitcoin for 5JdxzLtFPHNe7CAL8EBC6krdFv9pwPoRo4e3syMZEQT9srmK8hh
      ✓ returns testnet for cRD9b1m3vQxmwmjSoJy7Mj56f4uNFXjcWMCzpQCEmHASS4edEwXv
      ✓ returns testnet for 92Qba5hnyWSn5Ffcka56yMQauaWY6ZLd91Vzxbi4a9CCetaHtYj
      ✓ returns bitcoin for L5oLkpV3aqBjhki6LmvChTCV6odsp4SXM6FfU2Gppt5kFLaHLuZ9
    ecdsa wrappers
      signing
        ✓ wraps ecdsa.sign
        ✓ wraps fastcurve.sign (42ms)
        ✓ throws if no private key is found
      verify
        ✓ wraps ecdsa.verify
        ✓ wraps fastcurve.verify
        ✓ handles falsey return values from fastcurve.verify
    fromPrivateKeyBuffer
      ✓ constructs an ECPair from a random private key buffer
      ✓ throws if the private key is out of range
      ✓ throws if the private key buffer is not a buffer
      ✓ throws if the private key buffer is not 32 bytes

  ECSignature
    toCompact
      ✓ exports 1f33a69cd2065432a30f3d1ce4eb0d59b8ab58c74f27c41a7fdb5696ad4e6108c96f807982866f785d3f6418d24163ddae117b7db4d5fdf0071de069fa54342262 correctly
      ✓ exports 1b54c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed07082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5 correctly
      ✓ exports 1fff466a9f1b7b273e2f4c3ffe032eb2e814121ed18ef84665d0f515360dab3dd06fc95f5132e5ecfdc8e5e6e616cc77151455d46ed48f5589b7db7771a332b283 correctly
      ✓ exports 1cc0dafec8251f1d5010289d210232220b03202cba34ec11fec58b3e93a85b91d375afdc06b7d6322a590955bf264e7aaa155847f614d80078a90292fe205064d3 correctly
      ✓ exports 1f7186363571d65e084e7f02b0b77c3ec44fb1b257dee26274c38c928986fea45d0de0b38e06807e46bda1f1e293f4f6323e854c86d58abdd00c46c16441085df6 correctly
      ✓ exports 1cfbfe5076a15860ba8ed00e75e9bd22e05d230f02a936b653eb55b61c99dda4870e68880ebb0050fe4312b1b1eb0899e1b82da89baa5b895f612619edf34cbd37 correctly
      ✓ exports 20cde1302d83f8dd835d89aef803c74a119f561fbaef3eb9129e45f30de86abbf906ce643f5049ee1f27890467b77a6a8e11ec4661cc38cd8badf90115fbd03cef correctly
    parseCompact
      ✓ imports 1f33a69cd2065432a30f3d1ce4eb0d59b8ab58c74f27c41a7fdb5696ad4e6108c96f807982866f785d3f6418d24163ddae117b7db4d5fdf0071de069fa54342262 correctly
      ✓ imports 1b54c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed07082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5 correctly
      ✓ imports 1fff466a9f1b7b273e2f4c3ffe032eb2e814121ed18ef84665d0f515360dab3dd06fc95f5132e5ecfdc8e5e6e616cc77151455d46ed48f5589b7db7771a332b283 correctly
      ✓ imports 1cc0dafec8251f1d5010289d210232220b03202cba34ec11fec58b3e93a85b91d375afdc06b7d6322a590955bf264e7aaa155847f614d80078a90292fe205064d3 correctly
      ✓ imports 1f7186363571d65e084e7f02b0b77c3ec44fb1b257dee26274c38c928986fea45d0de0b38e06807e46bda1f1e293f4f6323e854c86d58abdd00c46c16441085df6 correctly
      ✓ imports 1cfbfe5076a15860ba8ed00e75e9bd22e05d230f02a936b653eb55b61c99dda4870e68880ebb0050fe4312b1b1eb0899e1b82da89baa5b895f612619edf34cbd37 correctly
      ✓ imports 20cde1302d83f8dd835d89aef803c74a119f561fbaef3eb9129e45f30de86abbf906ce643f5049ee1f27890467b77a6a8e11ec4661cc38cd8badf90115fbd03cef correctly
      ✓ throws on 23987ceade6a304fc5823ab38f99fc3c5f772a2d3e89ea05931e2726105fc53b9e601fc3231f35962c714fcbce5c95b427496edc7ae8b3d12e93791d7629795b62
      ✓ throws on 1c987ceade6a304fc5823ab38f99fc3c5f772a2d3e89ea05931e2726105fc53b9e601fc3231f35962c714fcbce5c95b427496edc7ae8b3d12e93791d7629795b62000000
      ✓ throws on 1c987ceade6a304fc5823ab38f99fc3c5f772a2d3e89ea05931e2726105fc53b9e601fc3231f35962c714fcbce5c95b427496edc7ae8b3d12e9379
    toDER
      ✓ exports 3044022033a69cd2065432a30f3d1ce4eb0d59b8ab58c74f27c41a7fdb5696ad4e6108c902206f807982866f785d3f6418d24163ddae117b7db4d5fdf0071de069fa54342262 correctly
      ✓ exports 3044022054c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed022007082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5 correctly
      ✓ exports 3045022100ff466a9f1b7b273e2f4c3ffe032eb2e814121ed18ef84665d0f515360dab3dd002206fc95f5132e5ecfdc8e5e6e616cc77151455d46ed48f5589b7db7771a332b283 correctly
      ✓ exports 3045022100c0dafec8251f1d5010289d210232220b03202cba34ec11fec58b3e93a85b91d3022075afdc06b7d6322a590955bf264e7aaa155847f614d80078a90292fe205064d3 correctly
      ✓ exports 304402207186363571d65e084e7f02b0b77c3ec44fb1b257dee26274c38c928986fea45d02200de0b38e06807e46bda1f1e293f4f6323e854c86d58abdd00c46c16441085df6 correctly
      ✓ exports 3045022100fbfe5076a15860ba8ed00e75e9bd22e05d230f02a936b653eb55b61c99dda48702200e68880ebb0050fe4312b1b1eb0899e1b82da89baa5b895f612619edf34cbd37 correctly
      ✓ exports 3045022100cde1302d83f8dd835d89aef803c74a119f561fbaef3eb9129e45f30de86abbf9022006ce643f5049ee1f27890467b77a6a8e11ec4661cc38cd8badf90115fbd03cef correctly
    fromDER
      ✓ imports 3044022033a69cd2065432a30f3d1ce4eb0d59b8ab58c74f27c41a7fdb5696ad4e6108c902206f807982866f785d3f6418d24163ddae117b7db4d5fdf0071de069fa54342262 correctly
      ✓ imports 3044022054c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed022007082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5 correctly
      ✓ imports 3045022100ff466a9f1b7b273e2f4c3ffe032eb2e814121ed18ef84665d0f515360dab3dd002206fc95f5132e5ecfdc8e5e6e616cc77151455d46ed48f5589b7db7771a332b283 correctly
      ✓ imports 3045022100c0dafec8251f1d5010289d210232220b03202cba34ec11fec58b3e93a85b91d3022075afdc06b7d6322a590955bf264e7aaa155847f614d80078a90292fe205064d3 correctly
      ✓ imports 304402207186363571d65e084e7f02b0b77c3ec44fb1b257dee26274c38c928986fea45d02200de0b38e06807e46bda1f1e293f4f6323e854c86d58abdd00c46c16441085df6 correctly
      ✓ imports 3045022100fbfe5076a15860ba8ed00e75e9bd22e05d230f02a936b653eb55b61c99dda48702200e68880ebb0050fe4312b1b1eb0899e1b82da89baa5b895f612619edf34cbd37 correctly
      ✓ imports 3045022100cde1302d83f8dd835d89aef803c74a119f561fbaef3eb9129e45f30de86abbf9022006ce643f5049ee1f27890467b77a6a8e11ec4661cc38cd8badf90115fbd03cef correctly
      ✓ throws "DER sequence length is too short" for ffffffffffffff
      ✓ throws "DER sequence length is too long" for ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      ✓ throws "Expected DER sequence" for 00ffff0400ffffff020400ffffff
      ✓ throws "DER sequence length is invalid" for 30ff020400ffffff020400ffffff
      ✓ throws "DER sequence length is invalid" for 300c030400ffffff030400ffffff0000
      ✓ throws "Expected DER integer" for 300cff0400ffffff020400ffffff
      ✓ throws "Expected DER integer \(2\)" for 300c020200ffffff020400ffffff
      ✓ throws "R length is zero" for 30080200020400ffffff
      ✓ throws "S length is zero" for 3008020400ffffff0200
      ✓ throws "R length is too long" for 300c02dd00ffffff020400ffffff
      ✓ throws "S length is invalid" for 300c020400ffffff02dd00ffffff
      ✓ throws "R value is negative" for 300c020480000000020400ffffff
      ✓ throws "S value is negative" for 300c020400ffffff020480000000
      ✓ throws "R value excessively padded" for 300c02040000ffff020400ffffff
      ✓ throws "S value excessively padded" for 300c020400ffffff02040000ffff
    toScriptSignature
      ✓ exports 3044022033a69cd2065432a30f3d1ce4eb0d59b8ab58c74f27c41a7fdb5696ad4e6108c902206f807982866f785d3f6418d24163ddae117b7db4d5fdf0071de069fa5434226201 correctly
      ✓ exports 3044022054c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed022007082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a502 correctly
      ✓ exports 3045022100ff466a9f1b7b273e2f4c3ffe032eb2e814121ed18ef84665d0f515360dab3dd002206fc95f5132e5ecfdc8e5e6e616cc77151455d46ed48f5589b7db7771a332b28303 correctly
      ✓ exports 3045022100c0dafec8251f1d5010289d210232220b03202cba34ec11fec58b3e93a85b91d3022075afdc06b7d6322a590955bf264e7aaa155847f614d80078a90292fe205064d381 correctly
      ✓ exports 304402207186363571d65e084e7f02b0b77c3ec44fb1b257dee26274c38c928986fea45d02200de0b38e06807e46bda1f1e293f4f6323e854c86d58abdd00c46c16441085df682 correctly
      ✓ exports 3045022100fbfe5076a15860ba8ed00e75e9bd22e05d230f02a936b653eb55b61c99dda48702200e68880ebb0050fe4312b1b1eb0899e1b82da89baa5b895f612619edf34cbd3783 correctly
      ✓ exports 3045022100cde1302d83f8dd835d89aef803c74a119f561fbaef3eb9129e45f30de86abbf9022006ce643f5049ee1f27890467b77a6a8e11ec4661cc38cd8badf90115fbd03cef81 correctly
      ✓ throws Invalid hashType 7
      ✓ throws Invalid hashType 140
    parseScriptSignature
      ✓ imports 3044022033a69cd2065432a30f3d1ce4eb0d59b8ab58c74f27c41a7fdb5696ad4e6108c902206f807982866f785d3f6418d24163ddae117b7db4d5fdf0071de069fa5434226201 correctly
      ✓ imports 3044022054c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed022007082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a502 correctly
      ✓ imports 3045022100ff466a9f1b7b273e2f4c3ffe032eb2e814121ed18ef84665d0f515360dab3dd002206fc95f5132e5ecfdc8e5e6e616cc77151455d46ed48f5589b7db7771a332b28303 correctly
      ✓ imports 3045022100c0dafec8251f1d5010289d210232220b03202cba34ec11fec58b3e93a85b91d3022075afdc06b7d6322a590955bf264e7aaa155847f614d80078a90292fe205064d381 correctly
      ✓ imports 304402207186363571d65e084e7f02b0b77c3ec44fb1b257dee26274c38c928986fea45d02200de0b38e06807e46bda1f1e293f4f6323e854c86d58abdd00c46c16441085df682 correctly
      ✓ imports 3045022100fbfe5076a15860ba8ed00e75e9bd22e05d230f02a936b653eb55b61c99dda48702200e68880ebb0050fe4312b1b1eb0899e1b82da89baa5b895f612619edf34cbd3783 correctly
      ✓ imports 3045022100cde1302d83f8dd835d89aef803c74a119f561fbaef3eb9129e45f30de86abbf9022006ce643f5049ee1f27890467b77a6a8e11ec4661cc38cd8badf90115fbd03cef81 correctly
      ✓ throws on 3044022033a69cd2065432a30f3d1ce4eb0d59b8ab58c74f27c41a7fdb5696ad4e6108c902206f807982866f785d3f6418d24163ddae117b7db4d5fdf0071de069fa5434226207
      ✓ throws on 3044022033a69cd2065432a30f3d1ce4eb0d59b8ab58c74f27c41a7fdb5696ad4e6108c902206f807982866f785d3f6418d24163ddae117b7db4d5fdf0071de069fa543422628c

  mergeFixtures
    ✓ merges fixtures
    ✓ merges fixtures recursively
    ✓ does not merge for mismatched fields

  TransactionBuilder (bitcoincash)
    ✓ Build and sign p2pk

  TransactionBuilder (bitcoingold)
    ✓ Build and sign p2pkh
    ✓ Parse and re-build from txHex (1)
    ✓ Parse and re-build from txHex (2)

  Transaction (dash)
    fromBuffer/fromHex for Testnet Dash
      ✓ imports Version 2-of-3 transaction
      ✓ imports Coinbase Special transaction
      ✓ imports ProRegTx
      ✓ exports Version 2-of-3 transaction
      ✓ exports Coinbase Special transaction
      ✓ exports ProRegTx
      ✓ clone Version 2-of-3 transaction
      ✓ clone Coinbase Special transaction
      ✓ clone ProRegTx
    getPrevoutHash
      ✓ produces the correct inputsHash on ProRegTx

  Block (tent)
    fromBuffer/fromHex
      6) imports Tent Sapling 1
      7) imports Tent Sapling 2
      ✓ imports Tent Sapling Genesis block
    toBuffer/toHex
      8) "before each" hook for "exports Tent Sapling 1"
    getHash/getId
      9) "before each" hook for "returns 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb for Tent Sapling 1"
    getUTCDate
      10) "before each" hook for "returns UTC date of 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb"
    calculateMerkleRoot
      11) "before each" hook for "returns 4b6285fb6f64e9d5c84c95dd90e35133550174ead06bbedce3ff49cbe993726b for 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb"
    checkMerkleRoot
      12) "before each" hook for "Tent returns true for 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb"
    checkProofOfWork
      13) "before each" hook for "Tent returns true for 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb"

  ZcashBufferReader
    ✓ readInt64

  Transaction (tent)
    fromBuffer/fromHex
      ✓ imports Version 1 transaction (1:1)
      ✓ imports Version 1 transaction (1:3)
      14) imports Version 2 transaction (3:1)
      15) imports Version 2 transaction (4:0) with JoinSplit
      16) imports Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness
      17) imports Version 3 transaction (4:2)
      18) imports Version 3 transaction (2:2)
      19) imports Version 3 transaction (1:2) zero lock_time
      20) imports Version 4 transaction (1:1) zero lock_time
      21) imports Version 4 transaction, ZIP 243 Test Vector 1
      22) imports Version 4 transaction, ZIP 243 Test Vector 2
      ✓ exports Version 1 transaction (1:1)
      ✓ exports Version 1 transaction (1:3)
      23) exports Version 2 transaction (3:1)
      24) exports Version 2 transaction (4:0) with JoinSplit
      25) exports Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness
      26) exports Version 3 transaction (4:2)
      27) exports Version 3 transaction (2:2)
      28) exports Version 3 transaction (1:2) zero lock_time
      29) exports Version 4 transaction (1:1) zero lock_time
      30) exports Version 4 transaction, ZIP 243 Test Vector 1
      31) exports Version 4 transaction, ZIP 243 Test Vector 2
      ✓ clone Version 1 transaction (1:1)
      ✓ clone Version 1 transaction (1:3)
      32) clone Version 2 transaction (3:1)
      33) clone Version 2 transaction (4:0) with JoinSplit
      34) clone Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness
      35) clone Version 3 transaction (4:2)
      36) clone Version 3 transaction (2:2)
      37) clone Version 3 transaction (1:2) zero lock_time
      38) clone Version 4 transaction (1:1) zero lock_time
      39) clone Version 4 transaction, ZIP 243 Test Vector 1
      40) clone Version 4 transaction, ZIP 243 Test Vector 2
    hashForTentSignature
      41) should return 967f00c292b9af74c7e770bd393f80b6a6d1c50ae639356dd66d29020d5904ed for version 3 transaction (3:4) from Tent test data
      42) should return 44db5f1c43284937e6bb2b25790c06fb2f22b5a25062e8455b964dbbcd9f64de for version 3 transaction (3:2) from Tent test data
      43) should return ed51c8db5ba2accabb1d8a718ecc0e61a55ebdf4a2a2aaa3999593e6c207f9c1 for version 3 transaction (4:3) from Tent test data
      44) should throw on version 3 with joinsplits

  TransactionBuilder (tent)
    ✓ returns TransactionBuilder, with Version 1 transaction (1:1)
    ✓ throws if transaction builder network is incompatible for Version 1 transaction (1:1)
    ✓ returns TransactionBuilder, with Version 2 transaction (3:1)
    ✓ throws if transaction builder network is incompatible for Version 2 transaction (3:1)
    ✓ returns TransactionBuilder, with Version 2 transaction (4:0) with JoinSplit
    ✓ throws if transaction builder network is incompatible for Version 2 transaction (4:0) with JoinSplit
    ✓ returns TransactionBuilder, with Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness
    ✓ throws if transaction builder network is incompatible for Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness
    ✓ returns TransactionBuilder, with Version 3 transaction (4:2)
    ✓ throws if transaction builder network is incompatible for Version 3 transaction (4:2)
    ✓ returns TransactionBuilder, with Version 3 transaction (2:2)
    ✓ throws if transaction builder network is incompatible for Version 3 transaction (2:2)

  Block (zcash)
    fromBuffer/fromHex
      ✓ imports Zcash Sapling 1
      ✓ imports Zcash Sapling 2
      ✓ imports Zcash Sapling Genesis block
    toBuffer/toHex
      ✓ exports Zcash Sapling 1
      ✓ exports Zcash Sapling 2
      ✓ exports Zcash Sapling Genesis block
    getHash/getId
      ✓ returns 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb for Zcash Sapling 1
      ✓ returns 000003da15493ba3a837f75f7cdde83a2a28249149a78727342f7bde0f251cc8 for Zcash Sapling 2
      ✓ returns 05a60a92d99d85997cce3b87616c089f6124d7342af37106edc76126334a2c38 for Zcash Sapling Genesis block
    getUTCDate
      ✓ returns UTC date of 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb
      ✓ returns UTC date of 000003da15493ba3a837f75f7cdde83a2a28249149a78727342f7bde0f251cc8
      ✓ returns UTC date of 05a60a92d99d85997cce3b87616c089f6124d7342af37106edc76126334a2c38
    calculateMerkleRoot
      ✓ returns 4b6285fb6f64e9d5c84c95dd90e35133550174ead06bbedce3ff49cbe993726b for 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb
      ✓ returns 8b612db17691cee1cf9c0e41416ba9b6adac91172665eea0684a11d55f19cc2b for 000003da15493ba3a837f75f7cdde83a2a28249149a78727342f7bde0f251cc8
      ✓ returns c4eaa58879081de3c24a7b117ed2b28300e7ec4c4c1dff1d3f1268b7857a4ddb for 05a60a92d99d85997cce3b87616c089f6124d7342af37106edc76126334a2c38
    checkMerkleRoot
      ✓ Zcash returns true for 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb
      ✓ Zcash returns true for 000003da15493ba3a837f75f7cdde83a2a28249149a78727342f7bde0f251cc8
      ✓ Zcash returns true for 05a60a92d99d85997cce3b87616c089f6124d7342af37106edc76126334a2c38
    checkProofOfWork
      ✓ Zcash returns true for 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb
      ✓ Zcash returns true for 000003da15493ba3a837f75f7cdde83a2a28249149a78727342f7bde0f251cc8
      ✓ Zcash returns true for 05a60a92d99d85997cce3b87616c089f6124d7342af37106edc76126334a2c38

  ZcashBufferReader
    ✓ readInt64

  Transaction (zcash)
    fromBuffer/fromHex
      ✓ imports Version 1 transaction (1:1)
      ✓ imports Version 1 transaction (1:3)
      ✓ imports Version 2 transaction (3:1)
      ✓ imports Version 2 transaction (4:0) with JoinSplit
      ✓ imports Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness
      ✓ imports Version 3 transaction (4:2)
      ✓ imports Version 3 transaction (2:2)
      ✓ imports Version 3 transaction (1:2) zero lock_time
      ✓ imports Version 4 transaction (1:1) zero lock_time
      ✓ imports Version 4 transaction, ZIP 243 Test Vector 1
      ✓ imports Version 4 transaction, ZIP 243 Test Vector 2
      ✓ exports Version 1 transaction (1:1)
      ✓ exports Version 1 transaction (1:3)
      ✓ exports Version 2 transaction (3:1)
      ✓ exports Version 2 transaction (4:0) with JoinSplit
      ✓ exports Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness
      ✓ exports Version 3 transaction (4:2)
      ✓ exports Version 3 transaction (2:2)
      ✓ exports Version 3 transaction (1:2) zero lock_time
      ✓ exports Version 4 transaction (1:1) zero lock_time
      ✓ exports Version 4 transaction, ZIP 243 Test Vector 1
      ✓ exports Version 4 transaction, ZIP 243 Test Vector 2
      ✓ clone Version 1 transaction (1:1)
      ✓ clone Version 1 transaction (1:3)
      ✓ clone Version 2 transaction (3:1)
      ✓ clone Version 2 transaction (4:0) with JoinSplit
      ✓ clone Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness
      ✓ clone Version 3 transaction (4:2)
      ✓ clone Version 3 transaction (2:2)
      ✓ clone Version 3 transaction (1:2) zero lock_time
      ✓ clone Version 4 transaction (1:1) zero lock_time
      ✓ clone Version 4 transaction, ZIP 243 Test Vector 1
      ✓ clone Version 4 transaction, ZIP 243 Test Vector 2
    hashForZcashSignature
      ✓ should return 967f00c292b9af74c7e770bd393f80b6a6d1c50ae639356dd66d29020d5904ed for version 3 transaction (3:4) from zcash test data
      ✓ should return 44db5f1c43284937e6bb2b25790c06fb2f22b5a25062e8455b964dbbcd9f64de for version 3 transaction (3:2) from zcash test data
      ✓ should return ed51c8db5ba2accabb1d8a718ecc0e61a55ebdf4a2a2aaa3999593e6c207f9c1 for version 3 transaction (4:3) from zcash test data
      ✓ should throw on version 3 with joinsplits

  TransactionBuilder (zcash)
    ✓ returns TransactionBuilder, with Version 1 transaction (1:1)
    ✓ throws if transaction builder network is incompatible for Version 1 transaction (1:1)
    ✓ returns TransactionBuilder, with Version 2 transaction (3:1)
    ✓ throws if transaction builder network is incompatible for Version 2 transaction (3:1)
    ✓ returns TransactionBuilder, with Version 2 transaction (4:0) with JoinSplit
    ✓ throws if transaction builder network is incompatible for Version 2 transaction (4:0) with JoinSplit
    ✓ returns TransactionBuilder, with Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness
    ✓ throws if transaction builder network is incompatible for Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness
    ✓ returns TransactionBuilder, with Version 3 transaction (4:2)
    ✓ throws if transaction builder network is incompatible for Version 3 transaction (4:2)
    ✓ returns TransactionBuilder, with Version 3 transaction (2:2)
    ✓ throws if transaction builder network is incompatible for Version 3 transaction (2:2)

  HDNode
    Constructor
      ✓ stores the keyPair/chainCode directly
      ✓ has a default depth/index of 0
      ✓ throws on uncompressed keyPair
      ✓ throws when an invalid length chain code is given
    fromSeed*
      ✓ calculates privKey and chainCode for 3442193e
      ✓ calculates privKey and chainCode for bd16bee5
      ✓ calculates privKey and chainCode for 1a87677b
      ✓ calculates privKey and chainCode for 3442193e
      ✓ throws if IL is not within interval [1, n - 1] | IL === 0
      ✓ throws if IL is not within interval [1, n - 1] | IL === n
      ✓ throws on low entropy seed
      ✓ throws on too high entropy seed
    ECPair wrappers
      getAddress
        ✓ wraps keyPair.getAddress
      getNetwork
        ✓ wraps keyPair.getNetwork
      getPublicKeyBuffer
        ✓ wraps keyPair.getPublicKeyBuffer
      sign
        ✓ wraps keyPair.sign
      verify
        ✓ wraps keyPair.verify
    fromBase58 / toBase58
      ✓ exports xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8 (public) correctly
      ✓ exports xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw (public) correctly
      ✓ exports xpub6ASuArnXKPbfEwhqN6e3mwBcDTgzisQN1wXN9BJcM47sSikHjJf3UFHKkNAWbWMiGj7Wf5uMash7SyYq527Hqck2AxYysAA7xmALppuCkwQ (public) correctly
      ✓ exports xpub6D4BDPcP2GT577Vvch3R8wDkScZWzQzMMUm3PWbmWvVJrZwQY4VUNgqFJPMM3No2dFDFGTsxxpG5uJh7n7epu4trkrX7x7DogT5Uv6fcLW5 (public) correctly
      ✓ exports xpub6FHa3pjLCk84BayeJxFW2SP4XRrFd1JYnxeLeU8EqN3vDfZmbqBqaGJAyiLjTAwm6ZLRQUMv1ZACTj37sR62cfN7fe5JnJ7dh8zL4fiyLHV (public) correctly
      ✓ exports xpub6H1LXWLaKsWFhvm6RVpEL9P4KfRZSW7abD2ttkWP3SSQvnyA8FSVqNTEcYFgJS2UaFcxupHiYkro49S8yGasTvXEYBVPamhGW6cFJodrTHy (public) correctly
      ✓ exports xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB (public) correctly
      ✓ exports xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH (public) correctly
      ✓ exports xpub6ASAVgeehLbnwdqV6UKMHVzgqAG8Gr6riv3Fxxpj8ksbH9ebxaEyBLZ85ySDhKiLDBrQSARLq1uNRts8RuJiHjaDMBU4Zn9h8LZNnBC5y4a (public) correctly
      ✓ exports xpub6DF8uhdarytz3FWdA8TvFSvvAh8dP3283MY7p2V4SeE2wyWmG5mg5EwVvmdMVCQcoNJxGoWaU9DCWh89LojfZ537wTfunKau47EL2dhHKon (public) correctly
      ✓ exports xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL (public) correctly
      ✓ exports xpub6FnCn6nSzZAw5Tw7cgR9bi15UV96gLZhjDstkXXxvCLsUXBGXPdSnLFbdpq8p9HmGsApME5hQTZ3emM2rnY5agb9rXpVGyy3bdW6EEgAtqt (public) correctly
      ✓ exports xpub661MyMwAqRbcGUbHLLJ5n2DzFAt8mmaDxbmbdimh68m8EiXGEQPiJya4BJat5yMzy4e68VSUoLGCu5uvzf8dUoGvwuJsLE6F1cibmWsxFNn (public) correctly
      ✓ exports xpub6GcBnm7FfDg5ERWACCvtuotN6Tdoc37r3SZ1asBHvCWzPkqWn3MVKPWKzy6GsfmdMUGanR3D12dH1cp5tJauuubwc4FAJDn67SH2uUjwAT1 (public) correctly
      ✓ exports xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8 (public) correctly
      ✓ exports xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw (public) correctly
      ✓ exports xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi (private) correctly
      ✓ exports xprv9uHRZZhk6KAJC1avXpDAp4MDc3sQKNxDiPvvkX8Br5ngLNv1TxvUxt4cV1rGL5hj6KCesnDYUhd7oWgT11eZG7XnxHrnYeSvkzY7d2bhkJ7 (private) correctly
      ✓ exports xprv9wTYmMFdV23N2TdNG573QoEsfRrWKQgWeibmLntzniatZvR9BmLnvSxqu53Kw1UmYPxLgboyZQaXwTCg8MSY3H2EU4pWcQDnRnrVA1xe8fs (private) correctly
      ✓ exports xprv9z4pot5VBttmtdRTWfWQmoH1taj2axGVzFqSb8C9xaxKymcFzXBDptWmT7FwuEzG3ryjH4ktypQSAewRiNMjANTtpgP4mLTj34bhnZX7UiM (private) correctly
      ✓ exports xprvA2JDeKCSNNZky6uBCviVfJSKyQ1mDYahRjijr5idH2WwLsEd4Hsb2Tyh8RfQMuPh7f7RtyzTtdrbdqqsunu5Mm3wDvUAKRHSC34sJ7in334 (private) correctly
      ✓ exports xprvA41z7zogVVwxVSgdKUHDy1SKmdb533PjDz7J6N6mV6uS3ze1ai8FHa8kmHScGpWmj4WggLyQjgPie1rFSruoUihUZREPSL39UNdE3BBDu76 (private) correctly
      ✓ exports xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U (private) correctly
      ✓ exports xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt (private) correctly
      ✓ exports xprv9wSp6B7kry3Vj9m1zSnLvN3xH8RdsPP1Mh7fAaR7aRLcQMKTR2vidYEeEg2mUCTAwCd6vnxVrcjfy2kRgVsFawNzmjuHc2YmYRmagcEPdU9 (private) correctly
      ✓ exports xprv9zFnWC6h2cLgpmSA46vutJzBcfJ8yaJGg8cX1e5StJh45BBciYTRXSd25UEPVuesF9yog62tGAQtHjXajPPdbRCHuWS6T8XA2ECKADdw4Ef (private) correctly
      ✓ exports xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc (private) correctly
      ✓ exports xprvA2nrNbFZABcdryreWet9Ea4LvTJcGsqrMzxHx98MMrotbir7yrKCEXw7nadnHM8Dq38EGfSh6dqA9QWTyefMLEcBYJUuekgW4BYPJcr9E7j (private) correctly
      ✓ exports xprv9s21ZrQH143K3zWpEJm5QtHFh93eNJrNbNqzqLN5XoE9MvC7gs5TmBFaL2PpaXpDc8FBYVe5EChc73ApjSQ5fWsXS7auHy1MmG6hdpywE1q (private) correctly
      ✓ exports xprvA3cqPFaMpr7n1wRh6BPtYfwdYRoKCaPzgDdQnUmgMrz1WxWNEW3EmbBr9ieh9BJAsRGKFPLvotb4p4Aq79jddUVKPVJt7exVzLHcv777JVf (private) correctly
      ✓ exports xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi (private) correctly
      ✓ exports xprv9uHRZZhk6KAJC1avXpDAp4MDc3sQKNxDiPvvkX8Br5ngLNv1TxvUxt4cV1rGL5hj6KCesnDYUhd7oWgT11eZG7XnxHrnYeSvkzY7d2bhkJ7 (private) correctly
      ✓ throws on xprvQQQQQQQQQQQQQQQQCviVfJSKyQ1mDYahRjijr5idH2WwLsEd4Hsb2Tyh8RfQMuPh7f7RtyzTtdrbdqqsunu5Mm3wDvUAKRHSC34sJ7in334
      ✓ throws on HAsbc6CgKmTYEQg2CTz7m5STEPAB
      ✓ throws on xprv9tnJFvAXAXPfPnMTKfwpwnkty7MzJwELVgp4NTBquaKXy4RndyfJJCJJf7zNaVpBpzrwVRutZNLRCVLEcZHcvuCNG3zGbGBcZn57FbNnmSP
      ✓ throws on xprv9s21ZrQH143K3yLysFvsu3n1dMwhNusmNHr7xArzAeCc7MQYqDBBStmqnZq6WLi668siBBNs3SjiyaexduHu9sXT9ixTsqptL67ADqcaBdm
      ✓ throws on xprv9s21ZrQYdgnodnKW4Drm1Qg7poU6Gf2WUDsjPxvYiK7iLBMrsjbnF1wsZZQgmXNeMSG3s7jmHk1b3JrzhG5w8mwXGxqFxfrweico7k8DtxR
      ✓ throws on 1111111111111adADjFaSNPxwXqLjHLj4mBfYxuewDPbw9hEj1uaXCzMxRPXDFF3cUoezTFYom4sEmEVSQmENPPR315cFk9YUFVek73wE9
      ✓ throws on Ltpv73XYpw28ZyVe2zEVyiFnxUZxoKLGQNdZ8NxUi1WcqjNmMBgtLbh3KimGSnPHCoLv1RmvxHs4dnKmo1oXQ8dXuDu8uroxrbVxZPA1gXboYvx
      ✓ throws on 9XpNiB4DberdMn4jZiMhNGtuZUd7xUrCEGw4MG967zsVNvUKBEC9XLrmVmFasanWGp15zXfTNw4vW4KdvUAynEwyKjdho9QdLMPA2H5uyt
      ✓ throws on 7JJikZQ2NUXjSAnAF2SjFYE3KXbnnVxzRBNddFE1DjbDEHVGEJzYC7zqSgPoauBJS3cWmZwsER94oYSFrW9vZ4Ch5FtGeifdzmtS3FGYDB1vxFZsYKgMc
      ✓ throws on xpub67tVq9SuNQCfm2PXBqjGRAtNZ935kx2uHJaURePth4JBpMfEy6jum7Euj7FTpbs7fnjhfZcNEktCucWHcJf74dbKLKNSTZCQozdDVwvkJhs
      ✓ throws on xpub661MyMwTWkfYZq6BEh3ywGVXFvNj5hhzmWMhFBHSqmub31B1LZ9wbJ3DEYXZ8bHXGqnHKfepTud5a2XxGdnnePzZa2m2DyzTnFGBUXtaf9M
      ✓ throws on 8FH81Rao5EgGmdScoN66TJAHsQP7phEMeyMTku9NBJd7hXgaj3HTvSNjqJjoqBpxdbuushwPEM5otvxXt2p9dcw33AqNKzZEPMqGHmz7Dpayi6Vb
      ✓ throws on xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gYymDsxxRe3WWeZQ7TadaLSdKUffezzczTCpB8j3JP96UwE2n6w1
    getIdentifier
      ✓ returns the identifier for 3442193e
      ✓ returns the identifier for 5c1bd648
      ✓ returns the identifier for bef5a2f9
      ✓ returns the identifier for ee7ab90c
      ✓ returns the identifier for d880d7d8
      ✓ returns the identifier for d69aa102
      ✓ returns the identifier for bd16bee5
      ✓ returns the identifier for 5a61ff8e
      ✓ returns the identifier for d8ab4937
      ✓ returns the identifier for 78412e3a
      ✓ returns the identifier for 31a507b8
      ✓ returns the identifier for 26132fdb
      ✓ returns the identifier for 1a87677b
      ✓ returns the identifier for e371d69b
      ✓ returns the identifier for 3442193e
      ✓ returns the identifier for 5c1bd648
    getFingerprint
      ✓ returns the fingerprint for 3442193e
      ✓ returns the fingerprint for 5c1bd648
      ✓ returns the fingerprint for bef5a2f9
      ✓ returns the fingerprint for ee7ab90c
      ✓ returns the fingerprint for d880d7d8
      ✓ returns the fingerprint for d69aa102
      ✓ returns the fingerprint for bd16bee5
      ✓ returns the fingerprint for 5a61ff8e
      ✓ returns the fingerprint for d8ab4937
      ✓ returns the fingerprint for 78412e3a
      ✓ returns the fingerprint for 31a507b8
      ✓ returns the fingerprint for 26132fdb
      ✓ returns the fingerprint for 1a87677b
      ✓ returns the fingerprint for e371d69b
      ✓ returns the fingerprint for 3442193e
      ✓ returns the fingerprint for 5c1bd648
    neutered / isNeutered
      ✓ drops the private key for 3442193e
      ✓ drops the private key for 5c1bd648
      ✓ drops the private key for bef5a2f9
      ✓ drops the private key for ee7ab90c
      ✓ drops the private key for d880d7d8
      ✓ drops the private key for d69aa102
      ✓ drops the private key for bd16bee5
      ✓ drops the private key for 5a61ff8e
      ✓ drops the private key for d8ab4937
      ✓ drops the private key for 78412e3a
      ✓ drops the private key for 31a507b8
      ✓ drops the private key for 26132fdb
      ✓ drops the private key for 1a87677b
      ✓ drops the private key for e371d69b
      ✓ drops the private key for 3442193e
      ✓ drops the private key for 5c1bd648
    derive
      ✓ m/0' from 3442193e by path
      ✓ m/0'/1 from 3442193e by path
      ✓ m/0'/1/2' from 3442193e by path
      ✓ m/0'/1/2'/2 from 3442193e by path
      ✓ m/0'/1/2'/2/1000000000 from 3442193e by path
      ✓ m/0'/1 from 5c1bd648 by path
      ✓ m/0'/1/2' from 5c1bd648 by path
      ✓ m/0'/1/2'/2 from 5c1bd648 by path
      ✓ m/0'/1/2'/2/1000000000 from 5c1bd648 by path
      ✓ m/0'/1/2' from bef5a2f9 by path
      ✓ m/0'/1/2'/2 from bef5a2f9 by path
      ✓ m/0'/1/2'/2/1000000000 from bef5a2f9 by path
      ✓ m/0'/1/2'/2 from ee7ab90c by path
      ✓ m/0'/1/2'/2/1000000000 from ee7ab90c by path
      ✓ m/0'/1/2'/2/1000000000 from d880d7d8 by path
      ✓ m/0' from 3442193e
      ✓ m/0'/1 from 3442193e
      ✓ m/0'/1/2' from 3442193e
      ✓ m/0'/1/2'/2 from 3442193e
      ✓ m/0'/1/2'/2/1000000000 from 3442193e
      ✓ m/0 from bd16bee5 by path
      ✓ m/0/2147483647' from bd16bee5 by path
      ✓ m/0/2147483647'/1 from bd16bee5 by path
      ✓ m/0/2147483647'/1/2147483646' from bd16bee5 by path
      ✓ m/0/2147483647'/1/2147483646'/2 from bd16bee5 by path
      ✓ m/0/2147483647' from 5a61ff8e by path
      ✓ m/0/2147483647'/1 from 5a61ff8e by path
      ✓ m/0/2147483647'/1/2147483646' from 5a61ff8e by path
      ✓ m/0/2147483647'/1/2147483646'/2 from 5a61ff8e by path
      ✓ m/0/2147483647'/1 from d8ab4937 by path
      ✓ m/0/2147483647'/1/2147483646' from d8ab4937 by path
      ✓ m/0/2147483647'/1/2147483646'/2 from d8ab4937 by path
      ✓ m/0/2147483647'/1/2147483646' from 78412e3a by path
      ✓ m/0/2147483647'/1/2147483646'/2 from 78412e3a by path
      ✓ m/0/2147483647'/1/2147483646'/2 from 31a507b8 by path
      ✓ m/0 from bd16bee5
      ✓ m/0/2147483647' from bd16bee5
      ✓ m/0/2147483647'/1 from bd16bee5
      ✓ m/0/2147483647'/1/2147483646' from bd16bee5
      ✓ m/0/2147483647'/1/2147483646'/2 from bd16bee5
      ✓ m/44'/0'/0'/0/0' from 1a87677b by path
      ✓ m/0' from 3442193e by path
      ✓ m/0' from 3442193e
      ✓ works for Private -> public (neutered)
      ✓ works for Private -> public (neutered, hardened)
      ✓ works for Public -> public
      ✓ throws on Public -> public (hardened)
      ✓ throws on wrong types
      ✓ works when private key has leading zeros
      ✓ works with cached intermediate nodes

  bitcoinjs-lib (addresses)
    ✓ can generate a random address
    ✓ can generate an address from a SHA256 hash
    ✓ can import an address via WIF
    ✓ can generate a 2-of-3 multisig P2SH address
    ✓ can generate a SegWit address
    ✓ can generate a SegWit address (via P2SH)
    ✓ can generate a SegWit 3-of-4 multisig address
    ✓ can generate a SegWit 2-of-2 multisig address (via P2SH)
    ✓ can support the retrieval of transactions for an address (via 3PBP) (209ms)
    ✓ can generate a Testnet address
    ✓ can generate a Litecoin address

  bitcoinjs-lib (BIP32)
    ✓ can import a BIP32 testnet xpriv and export to WIF
    ✓ can export a BIP32 xpriv, then import it
    ✓ can export a BIP32 xpub
    ✓ can create a BIP32, bitcoin, account 0, external address
    ✓ can create a BIP44, bitcoin, account 0, external address
    ✓ can create a BIP49, bitcoin testnet, account 0, external address
    ✓ can use BIP39 to generate BIP32 addresses

  bitcoinjs-lib (transactions w/ CLTV)
    - can create (and broadcast via 3PBP) a Transaction where Alice can redeem the output after the expiry (in the past)
    - can create (and broadcast via 3PBP) a Transaction where Alice can redeem the output after the expiry (in the future)

  bitcoinjs-lib (crypto)
    ✓ can recover a private key from duplicate R values
    ✓ can recover a BIP32 parent private key from the parent public key, and a derived, non-hardened child private key

  bitcoinjs-lib (crypto)
    ✓ can generate a single-key stealth address (49ms)
    ✓ can generate a single-key stealth address (randomly) (56ms)
    ✓ can recover parent recipient.d, if a derived private key is leaked [and nonce was revealed] (61ms)
    ✓ can generate a dual-key stealth address (74ms)
    ✓ can generate a dual-key stealth address (randomly) (88ms)

  bitcoinjs-lib (transactions)
    ✓ can create a 1-to-1 Transaction
    ✓ can create a 2-to-2 Transaction
    - can create (and broadcast via 3PBP) a typical Transaction
    - can create (and broadcast via 3PBP) a Transaction with an OP_RETURN output
    - can create (and broadcast via 3PBP) a Transaction with a 2-of-4 P2SH(multisig) input
    - can create (and broadcast via 3PBP) a Transaction with a SegWit P2SH(P2WPKH) input
    - can create (and broadcast via 3PBP) a Transaction with a SegWit 3-of-4 P2SH(P2WSH(multisig)) input

  networks
    getNetworkList()
      ✓ mainnets are sorted alphabetically
      ✓ testnet(s) follow mainnets
    networks.bitcoin
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.testnet
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.bitcoincash
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.bitcoincashTestnet
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.bitcoingold
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.bitcoinsv
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.bitcoinsvTestnet
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.dash
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.dashTest
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.litecoin
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.litecoinTest
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.tent
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.tentTest
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.zcash
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcashTest
    networks.zcashTest
      ✓ is valid network
      ✓ getNetworkName() returns network name
      ✓ has corresponding testnet/mainnet
      ✓ has expected properties
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with testnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoincashTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoingold
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsv
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with bitcoinsvTestnet
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dash
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with dashTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoin
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with litecoinTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tent
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with tentTest
      ✓ isSameCoin() returns true testnet/mainnet variants
      ✓ has distinct properties with zcash
      ✓ isSameCoin() returns true testnet/mainnet variants

  script
    isCanonicalPubKey
      ✓ rejects if not provided a Buffer
      ✓ rejects smaller than 33
    fromASM/toASM
      ✓ encodes/decodes OP_1NEGATE
      ✓ encodes/decodes 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
      ✓ encodes/decodes 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ encodes/decodes 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ encodes/decodes OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ encodes/decodes OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ encodes/decodes OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ encodes/decodes OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ encodes/decodes OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ encodes/decodes OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 522102359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1210395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a52ae
      ✓ encodes/decodes OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ encodes/decodes OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ encodes/decodes OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ encodes/decodes OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ encodes/decodes OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ encodes/decodes OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ encodes/decodes OP_0 OP_0 OP_0 OP_0
      ✓ encodes/decodes OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ encodes/decodes OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ encodes/decodes OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ encodes/decodes OP_0
      ✓ encodes/decodes OP_0 00
      ✓ encodes/decodes OP_6
      ✓ encodes/decodes 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      ✓ encodes/decodes OP_RETURN aa21a9ed4db4fb830efe3e804337413ffe8ad7393af301e0ec8e71b6e6f2b860a56f4dcd
      ✓ encodes/decodes OP_RETURN deadffffffffffffffffffffffffffffffffbeef deadffffffffffffffffffffffffffffffffbeef
      ✓ encodes/decodes OP_RETURN deadffffffffffffffffffffffffffffffffbeef deadffffffffffffffffffffffffffffffffbeef
      ✓ throws Expected Hex, got String "0xff"
    fromASM/toASM (templates)
      ✓ encodes/decodes 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
      ✓ encodes/decodes 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ encodes/decodes 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ encodes/decodes OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ encodes/decodes OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ encodes/decodes OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ encodes/decodes OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ encodes/decodes OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ encodes/decodes OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 522102359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1210395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a52ae
      ✓ encodes/decodes OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ encodes/decodes OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ encodes/decodes OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ encodes/decodes OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ encodes/decodes OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ encodes/decodes OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ encodes/decodes OP_0 OP_0 OP_0 OP_0
      ✓ encodes/decodes OP_0 304502210093efc26facedc5f51e304aa270a7b4f1a911b2d912c3674e5c6e2ad4ac7a410402201cf0b62c240461902f9f16d8a0bc3a210b7bfcd2c06523dd4b4b63be22e8525201 52210327e023a353d111808f61d554c2e1934721eaf87f33b7a771e807006908a493722103251670bb6a179a0d43b75476c7e580c0ba274378a18077e8de0832c870e5381f2102cca7f9a64425a0466d26d5c7e9eb3ad6b64cd48ea89edb38bc08f58a792dde4753ae
      ✓ encodes/decodes OP_HASH160 fcc42dd4aa770d75cb6796bbd7853a325e746659 OP_EQUAL
      ✓ encodes/decodes OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ encodes/decodes OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ encodes/decodes OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ encodes/decodes OP_0
      ✓ encodes/decodes OP_0 00
      ✓ encodes/decodes OP_6
      ✓ encodes/decodes
    isPushOnly
      ✓ returns true for OP_1NEGATE
      ✓ returns true for 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
      ✓ returns false for 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ returns true for 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ returns false for OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ returns true for OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ returns false for OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ returns true for OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ returns true for OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 522102359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1210395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a52ae
      ✓ returns false for OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ returns true for OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ returns true for OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ returns false for OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ returns true for OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns true for OP_0 OP_0 OP_0 OP_0
      ✓ returns true for OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ returns false for OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ returns false for OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ returns true for OP_0
      ✓ returns true for OP_0 00
      ✓ returns true for OP_6
      ✓ returns true for
      ✓ returns false for OP_RETURN aa21a9ed4db4fb830efe3e804337413ffe8ad7393af301e0ec8e71b6e6f2b860a56f4dcd
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef deadffffffffffffffffffffffffffffffffbeef
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef deadffffffffffffffffffffffffffffffffbeef
    toStack
      ✓ returns true for OP_1NEGATE
      ✓ returns true for 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
      ✓ returns false for 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ returns true for 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ returns false for OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ returns true for OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ returns false for OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ returns true for OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ returns true for OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 522102359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1210395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a52ae
      ✓ returns false for OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ returns true for OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ returns true for OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ returns false for OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ returns true for OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns true for OP_0 OP_0 OP_0 OP_0
      ✓ returns true for OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ returns false for OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ returns false for OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ returns true for OP_0
      ✓ returns true for OP_0 00
      ✓ returns true for OP_6
      ✓ returns true for
      ✓ returns false for OP_RETURN aa21a9ed4db4fb830efe3e804337413ffe8ad7393af301e0ec8e71b6e6f2b860a56f4dcd
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef deadffffffffffffffffffffffffffffffffbeef
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef deadffffffffffffffffffffffffffffffffbeef
    compile (via fromASM)
      ✓ (undefined) compiles OP_1NEGATE
      ✓ (undefined) compiles 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
      ✓ (undefined) compiles 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ (undefined) compiles 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ (undefined) compiles OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ (undefined) compiles OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ (undefined) compiles OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ (undefined) compiles OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ (undefined) compiles OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ (undefined) compiles OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 522102359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1210395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a52ae
      ✓ (undefined) compiles OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ (undefined) compiles OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ (undefined) compiles OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ (undefined) compiles OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ (undefined) compiles OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ (undefined) compiles OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ (undefined) compiles OP_0 OP_0 OP_0 OP_0
      ✓ (undefined) compiles OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ (undefined) compiles OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ (undefined) compiles OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ (undefined) compiles OP_0
      ✓ (undefined) compiles OP_0 00
      ✓ (undefined) compiles OP_6
      ✓ (undefined) compiles 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      ✓ (undefined) compiles OP_RETURN aa21a9ed4db4fb830efe3e804337413ffe8ad7393af301e0ec8e71b6e6f2b860a56f4dcd
      ✓ (undefined) compiles OP_RETURN deadffffffffffffffffffffffffffffffffbeef deadffffffffffffffffffffffffffffffffbeef
      ✓ (undefined) compiles OP_RETURN deadffffffffffffffffffffffffffffffffbeef deadffffffffffffffffffffffffffffffffbeef
    decompile
      ✓ decompiles OP_1NEGATE
      ✓ decompiles 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
      ✓ decompiles 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ decompiles 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ decompiles OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ decompiles OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ decompiles OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ decompiles OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ decompiles OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ decompiles OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 522102359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1210395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a52ae
      ✓ decompiles OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ decompiles OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ decompiles OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ decompiles OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ decompiles OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ decompiles OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ decompiles OP_0 OP_0 OP_0 OP_0
      ✓ decompiles OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ decompiles OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ decompiles OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ decompiles OP_0
      ✓ decompiles OP_0 00
      ✓ decompiles OP_6
      ✓ decompiles
      ✓ decompiles OP_RETURN aa21a9ed4db4fb830efe3e804337413ffe8ad7393af301e0ec8e71b6e6f2b860a56f4dcd
      ✓ decompiles OP_RETURN deadffffffffffffffffffffffffffffffffbeef deadffffffffffffffffffffffffffffffffbeef
      ✓ decompiles OP_RETURN deadffffffffffffffffffffffffffffffffbeef deadffffffffffffffffffffffffffffffffbeef
      ✓ decompiles 01 to [] because of "Not enough data: OP_1"
      ✓ decompiles 0201 to [] because of "Not enough data: OP_2"
      ✓ decompiles 4c0201 to [] because of "Not enough data: OP_PUSHDATA1 0x02"
      ✓ decompiles 4dffff01 to [] because of "Not enough data: OP_PUSHDATA2 0xffff"
      ✓ decompiles 4effffffff01 to [] because of "Not enough data: OP_PUSHDATA4 0xffffffff"
    SCRIPT_VERIFY_MINIMALDATA policy
      ✓ compliant for undefined scriptSig OP_1NEGATE
      ✓ compliant for undefined scriptSig 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
      ✓ compliant for undefined scriptSig 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ compliant for undefined scriptSig 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ compliant for undefined scriptSig OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ compliant for undefined scriptSig OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ compliant for undefined scriptSig OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ compliant for undefined scriptSig OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ compliant for undefined scriptSig OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ compliant for undefined scriptSig OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 522102359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1210395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a52ae
      ✓ compliant for undefined scriptSig OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ compliant for undefined scriptSig OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ compliant for undefined scriptSig OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ compliant for undefined scriptSig OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ compliant for undefined scriptSig OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ compliant for undefined scriptSig OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ compliant for undefined scriptSig OP_0 OP_0 OP_0 OP_0
      ✓ compliant for undefined scriptSig OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ compliant for undefined scriptSig OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ compliant for undefined scriptSig OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ compliant for undefined scriptSig OP_0
      ✓ compliant for undefined scriptSig OP_0 00
      ✓ compliant for undefined scriptSig OP_6
      ✓ compliant for undefined scriptSig 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
      ✓ compliant for undefined scriptSig OP_RETURN aa21a9ed4db4fb830efe3e804337413ffe8ad7393af301e0ec8e71b6e6f2b860a56f4dcd
      ✓ compliant for undefined scriptSig OP_RETURN deadffffffffffffffffffffffffffffffffbeef deadffffffffffffffffffffffffffffffffbeef
      ✓ compliant for undefined scriptSig OP_RETURN deadffffffffffffffffffffffffffffffffbeef deadffffffffffffffffffffffffffffffffbeef
      ✓ compliant for data PUSH of length 0
      ✓ compliant for data PUSH of length 1
      ✓ compliant for data PUSH of length 2
      ✓ compliant for data PUSH of length 3
      ✓ compliant for data PUSH of length 4
      ✓ compliant for data PUSH of length 5
      ✓ compliant for data PUSH of length 6
      ✓ compliant for data PUSH of length 7
      ✓ compliant for data PUSH of length 8
      ✓ compliant for data PUSH of length 9
      ✓ compliant for data PUSH of length 10
      ✓ compliant for data PUSH of length 11
      ✓ compliant for data PUSH of length 12
      ✓ compliant for data PUSH of length 13
      ✓ compliant for data PUSH of length 14
      ✓ compliant for data PUSH of length 15
      ✓ compliant for data PUSH of length 16
      ✓ compliant for data PUSH of length 17
      ✓ compliant for data PUSH of length 18
      ✓ compliant for data PUSH of length 19
      ✓ compliant for data PUSH of length 20
      ✓ compliant for data PUSH of length 21
      ✓ compliant for data PUSH of length 22
      ✓ compliant for data PUSH of length 23
      ✓ compliant for data PUSH of length 24
      ✓ compliant for data PUSH of length 25
      ✓ compliant for data PUSH of length 26
      ✓ compliant for data PUSH of length 27
      ✓ compliant for data PUSH of length 28
      ✓ compliant for data PUSH of length 29
      ✓ compliant for data PUSH of length 30
      ✓ compliant for data PUSH of length 31
      ✓ compliant for data PUSH of length 32
      ✓ compliant for data PUSH of length 33
      ✓ compliant for data PUSH of length 34
      ✓ compliant for data PUSH of length 35
      ✓ compliant for data PUSH of length 36
      ✓ compliant for data PUSH of length 37
      ✓ compliant for data PUSH of length 38
      ✓ compliant for data PUSH of length 39
      ✓ compliant for data PUSH of length 40
      ✓ compliant for data PUSH of length 41
      ✓ compliant for data PUSH of length 42
      ✓ compliant for data PUSH of length 43
      ✓ compliant for data PUSH of length 44
      ✓ compliant for data PUSH of length 45
      ✓ compliant for data PUSH of length 46
      ✓ compliant for data PUSH of length 47
      ✓ compliant for data PUSH of length 48
      ✓ compliant for data PUSH of length 49
      ✓ compliant for data PUSH of length 50
      ✓ compliant for data PUSH of length 51
      ✓ compliant for data PUSH of length 52
      ✓ compliant for data PUSH of length 53
      ✓ compliant for data PUSH of length 54
      ✓ compliant for data PUSH of length 55
      ✓ compliant for data PUSH of length 56
      ✓ compliant for data PUSH of length 57
      ✓ compliant for data PUSH of length 58
      ✓ compliant for data PUSH of length 59
      ✓ compliant for data PUSH of length 60
      ✓ compliant for data PUSH of length 61
      ✓ compliant for data PUSH of length 62
      ✓ compliant for data PUSH of length 63
      ✓ compliant for data PUSH of length 64
      ✓ compliant for data PUSH of length 65
      ✓ compliant for data PUSH of length 66
      ✓ compliant for data PUSH of length 67
      ✓ compliant for data PUSH of length 68
      ✓ compliant for data PUSH of length 69
      ✓ compliant for data PUSH of length 70
      ✓ compliant for data PUSH of length 71
      ✓ compliant for data PUSH of length 72
      ✓ compliant for data PUSH of length 73
      ✓ compliant for data PUSH of length 74
      ✓ compliant for data PUSH of length 75
      ✓ compliant for data PUSH of length 76
      ✓ compliant for data PUSH of length 77
      ✓ compliant for data PUSH of length 78
      ✓ compliant for data PUSH of length 79
      ✓ compliant for data PUSH of length 80
      ✓ compliant for data PUSH of length 81
      ✓ compliant for data PUSH of length 82
      ✓ compliant for data PUSH of length 83
      ✓ compliant for data PUSH of length 84
      ✓ compliant for data PUSH of length 85
      ✓ compliant for data PUSH of length 86
      ✓ compliant for data PUSH of length 87
      ✓ compliant for data PUSH of length 88
      ✓ compliant for data PUSH of length 89
      ✓ compliant for data PUSH of length 90
      ✓ compliant for data PUSH of length 91
      ✓ compliant for data PUSH of length 92
      ✓ compliant for data PUSH of length 93
      ✓ compliant for data PUSH of length 94
      ✓ compliant for data PUSH of length 95
      ✓ compliant for data PUSH of length 96
      ✓ compliant for data PUSH of length 97
      ✓ compliant for data PUSH of length 98
      ✓ compliant for data PUSH of length 99
      ✓ compliant for data PUSH of length 100
      ✓ compliant for data PUSH of length 101
      ✓ compliant for data PUSH of length 102
      ✓ compliant for data PUSH of length 103
      ✓ compliant for data PUSH of length 104
      ✓ compliant for data PUSH of length 105
      ✓ compliant for data PUSH of length 106
      ✓ compliant for data PUSH of length 107
      ✓ compliant for data PUSH of length 108
      ✓ compliant for data PUSH of length 109
      ✓ compliant for data PUSH of length 110
      ✓ compliant for data PUSH of length 111
      ✓ compliant for data PUSH of length 112
      ✓ compliant for data PUSH of length 113
      ✓ compliant for data PUSH of length 114
      ✓ compliant for data PUSH of length 115
      ✓ compliant for data PUSH of length 116
      ✓ compliant for data PUSH of length 117
      ✓ compliant for data PUSH of length 118
      ✓ compliant for data PUSH of length 119
      ✓ compliant for data PUSH of length 120
      ✓ compliant for data PUSH of length 121
      ✓ compliant for data PUSH of length 122
      ✓ compliant for data PUSH of length 123
      ✓ compliant for data PUSH of length 124
      ✓ compliant for data PUSH of length 125
      ✓ compliant for data PUSH of length 126
      ✓ compliant for data PUSH of length 127
      ✓ compliant for data PUSH of length 128
      ✓ compliant for data PUSH of length 129
      ✓ compliant for data PUSH of length 130
      ✓ compliant for data PUSH of length 131
      ✓ compliant for data PUSH of length 132
      ✓ compliant for data PUSH of length 133
      ✓ compliant for data PUSH of length 134
      ✓ compliant for data PUSH of length 135
      ✓ compliant for data PUSH of length 136
      ✓ compliant for data PUSH of length 137
      ✓ compliant for data PUSH of length 138
      ✓ compliant for data PUSH of length 139
      ✓ compliant for data PUSH of length 140
      ✓ compliant for data PUSH of length 141
      ✓ compliant for data PUSH of length 142
      ✓ compliant for data PUSH of length 143
      ✓ compliant for data PUSH of length 144
      ✓ compliant for data PUSH of length 145
      ✓ compliant for data PUSH of length 146
      ✓ compliant for data PUSH of length 147
      ✓ compliant for data PUSH of length 148
      ✓ compliant for data PUSH of length 149
      ✓ compliant for data PUSH of length 150
      ✓ compliant for data PUSH of length 151
      ✓ compliant for data PUSH of length 152
      ✓ compliant for data PUSH of length 153
      ✓ compliant for data PUSH of length 154
      ✓ compliant for data PUSH of length 155
      ✓ compliant for data PUSH of length 156
      ✓ compliant for data PUSH of length 157
      ✓ compliant for data PUSH of length 158
      ✓ compliant for data PUSH of length 159
      ✓ compliant for data PUSH of length 160
      ✓ compliant for data PUSH of length 161
      ✓ compliant for data PUSH of length 162
      ✓ compliant for data PUSH of length 163
      ✓ compliant for data PUSH of length 164
      ✓ compliant for data PUSH of length 165
      ✓ compliant for data PUSH of length 166
      ✓ compliant for data PUSH of length 167
      ✓ compliant for data PUSH of length 168
      ✓ compliant for data PUSH of length 169
      ✓ compliant for data PUSH of length 170
      ✓ compliant for data PUSH of length 171
      ✓ compliant for data PUSH of length 172
      ✓ compliant for data PUSH of length 173
      ✓ compliant for data PUSH of length 174
      ✓ compliant for data PUSH of length 175
      ✓ compliant for data PUSH of length 176
      ✓ compliant for data PUSH of length 177
      ✓ compliant for data PUSH of length 178
      ✓ compliant for data PUSH of length 179
      ✓ compliant for data PUSH of length 180
      ✓ compliant for data PUSH of length 181
      ✓ compliant for data PUSH of length 182
      ✓ compliant for data PUSH of length 183
      ✓ compliant for data PUSH of length 184
      ✓ compliant for data PUSH of length 185
      ✓ compliant for data PUSH of length 186
      ✓ compliant for data PUSH of length 187
      ✓ compliant for data PUSH of length 188
      ✓ compliant for data PUSH of length 189
      ✓ compliant for data PUSH of length 190
      ✓ compliant for data PUSH of length 191
      ✓ compliant for data PUSH of length 192
      ✓ compliant for data PUSH of length 193
      ✓ compliant for data PUSH of length 194
      ✓ compliant for data PUSH of length 195
      ✓ compliant for data PUSH of length 196
      ✓ compliant for data PUSH of length 197
      ✓ compliant for data PUSH of length 198
      ✓ compliant for data PUSH of length 199
      ✓ compliant for data PUSH of length 200
      ✓ compliant for data PUSH of length 201
      ✓ compliant for data PUSH of length 202
      ✓ compliant for data PUSH of length 203
      ✓ compliant for data PUSH of length 204
      ✓ compliant for data PUSH of length 205
      ✓ compliant for data PUSH of length 206
      ✓ compliant for data PUSH of length 207
      ✓ compliant for data PUSH of length 208
      ✓ compliant for data PUSH of length 209
      ✓ compliant for data PUSH of length 210
      ✓ compliant for data PUSH of length 211
      ✓ compliant for data PUSH of length 212
      ✓ compliant for data PUSH of length 213
      ✓ compliant for data PUSH of length 214
      ✓ compliant for data PUSH of length 215
      ✓ compliant for data PUSH of length 216
      ✓ compliant for data PUSH of length 217
      ✓ compliant for data PUSH of length 218
      ✓ compliant for data PUSH of length 219
      ✓ compliant for data PUSH of length 220
      ✓ compliant for data PUSH of length 221
      ✓ compliant for data PUSH of length 222
      ✓ compliant for data PUSH of length 223
      ✓ compliant for data PUSH of length 224
      ✓ compliant for data PUSH of length 225
      ✓ compliant for data PUSH of length 226
      ✓ compliant for data PUSH of length 227
      ✓ compliant for data PUSH of length 228
      ✓ compliant for data PUSH of length 229
      ✓ compliant for data PUSH of length 230
      ✓ compliant for data PUSH of length 231
      ✓ compliant for data PUSH of length 232
      ✓ compliant for data PUSH of length 233
      ✓ compliant for data PUSH of length 234
      ✓ compliant for data PUSH of length 235
      ✓ compliant for data PUSH of length 236
      ✓ compliant for data PUSH of length 237
      ✓ compliant for data PUSH of length 238
      ✓ compliant for data PUSH of length 239
      ✓ compliant for data PUSH of length 240
      ✓ compliant for data PUSH of length 241
      ✓ compliant for data PUSH of length 242
      ✓ compliant for data PUSH of length 243
      ✓ compliant for data PUSH of length 244
      ✓ compliant for data PUSH of length 245
      ✓ compliant for data PUSH of length 246
      ✓ compliant for data PUSH of length 247
      ✓ compliant for data PUSH of length 248
      ✓ compliant for data PUSH of length 249
      ✓ compliant for data PUSH of length 250
      ✓ compliant for data PUSH of length 251
      ✓ compliant for data PUSH of length 252
      ✓ compliant for data PUSH of length 253
      ✓ compliant for data PUSH of length 254
      ✓ compliant for data PUSH of length 255
      ✓ compliant for data PUSH of length 256
      ✓ compliant for data PUSH of length 257
      ✓ compliant for data PUSH of length 258
      ✓ compliant for data PUSH of length 259
      ✓ compliant for data PUSH of length 260
      ✓ compliant for data PUSH of length 261
      ✓ compliant for data PUSH of length 262
      ✓ compliant for data PUSH of length 263
      ✓ compliant for data PUSH of length 264
      ✓ compliant for data PUSH of length 265
      ✓ compliant for data PUSH of length 266
      ✓ compliant for data PUSH of length 267
      ✓ compliant for data PUSH of length 268
      ✓ compliant for data PUSH of length 269
      ✓ compliant for data PUSH of length 270
      ✓ compliant for data PUSH of length 271
      ✓ compliant for data PUSH of length 272
      ✓ compliant for data PUSH of length 273
      ✓ compliant for data PUSH of length 274
      ✓ compliant for data PUSH of length 275
      ✓ compliant for data PUSH of length 276
      ✓ compliant for data PUSH of length 277
      ✓ compliant for data PUSH of length 278
      ✓ compliant for data PUSH of length 279
      ✓ compliant for data PUSH of length 280
      ✓ compliant for data PUSH of length 281
      ✓ compliant for data PUSH of length 282
      ✓ compliant for data PUSH of length 283
      ✓ compliant for data PUSH of length 284
      ✓ compliant for data PUSH of length 285
      ✓ compliant for data PUSH of length 286
      ✓ compliant for data PUSH of length 287
      ✓ compliant for data PUSH of length 288
      ✓ compliant for data PUSH of length 289
      ✓ compliant for data PUSH of length 290
      ✓ compliant for data PUSH of length 291
      ✓ compliant for data PUSH of length 292
      ✓ compliant for data PUSH of length 293
      ✓ compliant for data PUSH of length 294
      ✓ compliant for data PUSH of length 295
      ✓ compliant for data PUSH of length 296
      ✓ compliant for data PUSH of length 297
      ✓ compliant for data PUSH of length 298
      ✓ compliant for data PUSH of length 299
      ✓ compliant for data PUSH of length 300
      ✓ compliant for data PUSH of length 301
      ✓ compliant for data PUSH of length 302
      ✓ compliant for data PUSH of length 303
      ✓ compliant for data PUSH of length 304
      ✓ compliant for data PUSH of length 305
      ✓ compliant for data PUSH of length 306
      ✓ compliant for data PUSH of length 307
      ✓ compliant for data PUSH of length 308
      ✓ compliant for data PUSH of length 309
      ✓ compliant for data PUSH of length 310
      ✓ compliant for data PUSH of length 311
      ✓ compliant for data PUSH of length 312
      ✓ compliant for data PUSH of length 313
      ✓ compliant for data PUSH of length 314
      ✓ compliant for data PUSH of length 315
      ✓ compliant for data PUSH of length 316
      ✓ compliant for data PUSH of length 317
      ✓ compliant for data PUSH of length 318
      ✓ compliant for data PUSH of length 319
      ✓ compliant for data PUSH of length 320
      ✓ compliant for data PUSH of length 321
      ✓ compliant for data PUSH of length 322
      ✓ compliant for data PUSH of length 323
      ✓ compliant for data PUSH of length 324
      ✓ compliant for data PUSH of length 325
      ✓ compliant for data PUSH of length 326
      ✓ compliant for data PUSH of length 327
      ✓ compliant for data PUSH of length 328
      ✓ compliant for data PUSH of length 329
      ✓ compliant for data PUSH of length 330
      ✓ compliant for data PUSH of length 331
      ✓ compliant for data PUSH of length 332
      ✓ compliant for data PUSH of length 333
      ✓ compliant for data PUSH of length 334
      ✓ compliant for data PUSH of length 335
      ✓ compliant for data PUSH of length 336
      ✓ compliant for data PUSH of length 337
      ✓ compliant for data PUSH of length 338
      ✓ compliant for data PUSH of length 339
      ✓ compliant for data PUSH of length 340
      ✓ compliant for data PUSH of length 341
      ✓ compliant for data PUSH of length 342
      ✓ compliant for data PUSH of length 343
      ✓ compliant for data PUSH of length 344
      ✓ compliant for data PUSH of length 345
      ✓ compliant for data PUSH of length 346
      ✓ compliant for data PUSH of length 347
      ✓ compliant for data PUSH of length 348
      ✓ compliant for data PUSH of length 349
      ✓ compliant for data PUSH of length 350
      ✓ compliant for data PUSH of length 351
      ✓ compliant for data PUSH of length 352
      ✓ compliant for data PUSH of length 353
      ✓ compliant for data PUSH of length 354
      ✓ compliant for data PUSH of length 355
      ✓ compliant for data PUSH of length 356
      ✓ compliant for data PUSH of length 357
      ✓ compliant for data PUSH of length 358
      ✓ compliant for data PUSH of length 359
      ✓ compliant for data PUSH of length 360
      ✓ compliant for data PUSH of length 361
      ✓ compliant for data PUSH of length 362
      ✓ compliant for data PUSH of length 363
      ✓ compliant for data PUSH of length 364
      ✓ compliant for data PUSH of length 365
      ✓ compliant for data PUSH of length 366
      ✓ compliant for data PUSH of length 367
      ✓ compliant for data PUSH of length 368
      ✓ compliant for data PUSH of length 369
      ✓ compliant for data PUSH of length 370
      ✓ compliant for data PUSH of length 371
      ✓ compliant for data PUSH of length 372
      ✓ compliant for data PUSH of length 373
      ✓ compliant for data PUSH of length 374
      ✓ compliant for data PUSH of length 375
      ✓ compliant for data PUSH of length 376
      ✓ compliant for data PUSH of length 377
      ✓ compliant for data PUSH of length 378
      ✓ compliant for data PUSH of length 379
      ✓ compliant for data PUSH of length 380
      ✓ compliant for data PUSH of length 381
      ✓ compliant for data PUSH of length 382
      ✓ compliant for data PUSH of length 383
      ✓ compliant for data PUSH of length 384
      ✓ compliant for data PUSH of length 385
      ✓ compliant for data PUSH of length 386
      ✓ compliant for data PUSH of length 387
      ✓ compliant for data PUSH of length 388
      ✓ compliant for data PUSH of length 389
      ✓ compliant for data PUSH of length 390
      ✓ compliant for data PUSH of length 391
      ✓ compliant for data PUSH of length 392
      ✓ compliant for data PUSH of length 393
      ✓ compliant for data PUSH of length 394
      ✓ compliant for data PUSH of length 395
      ✓ compliant for data PUSH of length 396
      ✓ compliant for data PUSH of length 397
      ✓ compliant for data PUSH of length 398
      ✓ compliant for data PUSH of length 399
      ✓ compliant for data PUSH of length 400
      ✓ compliant for data PUSH of length 401
      ✓ compliant for data PUSH of length 402
      ✓ compliant for data PUSH of length 403
      ✓ compliant for data PUSH of length 404
      ✓ compliant for data PUSH of length 405
      ✓ compliant for data PUSH of length 406
      ✓ compliant for data PUSH of length 407
      ✓ compliant for data PUSH of length 408
      ✓ compliant for data PUSH of length 409
      ✓ compliant for data PUSH of length 410
      ✓ compliant for data PUSH of length 411
      ✓ compliant for data PUSH of length 412
      ✓ compliant for data PUSH of length 413
      ✓ compliant for data PUSH of length 414
      ✓ compliant for data PUSH of length 415
      ✓ compliant for data PUSH of length 416
      ✓ compliant for data PUSH of length 417
      ✓ compliant for data PUSH of length 418
      ✓ compliant for data PUSH of length 419
      ✓ compliant for data PUSH of length 420
      ✓ compliant for data PUSH of length 421
      ✓ compliant for data PUSH of length 422
      ✓ compliant for data PUSH of length 423
      ✓ compliant for data PUSH of length 424
      ✓ compliant for data PUSH of length 425
      ✓ compliant for data PUSH of length 426
      ✓ compliant for data PUSH of length 427
      ✓ compliant for data PUSH of length 428
      ✓ compliant for data PUSH of length 429
      ✓ compliant for data PUSH of length 430
      ✓ compliant for data PUSH of length 431
      ✓ compliant for data PUSH of length 432
      ✓ compliant for data PUSH of length 433
      ✓ compliant for data PUSH of length 434
      ✓ compliant for data PUSH of length 435
      ✓ compliant for data PUSH of length 436
      ✓ compliant for data PUSH of length 437
      ✓ compliant for data PUSH of length 438
      ✓ compliant for data PUSH of length 439
      ✓ compliant for data PUSH of length 440
      ✓ compliant for data PUSH of length 441
      ✓ compliant for data PUSH of length 442
      ✓ compliant for data PUSH of length 443
      ✓ compliant for data PUSH of length 444
      ✓ compliant for data PUSH of length 445
      ✓ compliant for data PUSH of length 446
      ✓ compliant for data PUSH of length 447
      ✓ compliant for data PUSH of length 448
      ✓ compliant for data PUSH of length 449
      ✓ compliant for data PUSH of length 450
      ✓ compliant for data PUSH of length 451
      ✓ compliant for data PUSH of length 452
      ✓ compliant for data PUSH of length 453
      ✓ compliant for data PUSH of length 454
      ✓ compliant for data PUSH of length 455
      ✓ compliant for data PUSH of length 456
      ✓ compliant for data PUSH of length 457
      ✓ compliant for data PUSH of length 458
      ✓ compliant for data PUSH of length 459
      ✓ compliant for data PUSH of length 460
      ✓ compliant for data PUSH of length 461
      ✓ compliant for data PUSH of length 462
      ✓ compliant for data PUSH of length 463
      ✓ compliant for data PUSH of length 464
      ✓ compliant for data PUSH of length 465
      ✓ compliant for data PUSH of length 466
      ✓ compliant for data PUSH of length 467
      ✓ compliant for data PUSH of length 468
      ✓ compliant for data PUSH of length 469
      ✓ compliant for data PUSH of length 470
      ✓ compliant for data PUSH of length 471
      ✓ compliant for data PUSH of length 472
      ✓ compliant for data PUSH of length 473
      ✓ compliant for data PUSH of length 474
      ✓ compliant for data PUSH of length 475
      ✓ compliant for data PUSH of length 476
      ✓ compliant for data PUSH of length 477
      ✓ compliant for data PUSH of length 478
      ✓ compliant for data PUSH of length 479
      ✓ compliant for data PUSH of length 480
      ✓ compliant for data PUSH of length 481
      ✓ compliant for data PUSH of length 482
      ✓ compliant for data PUSH of length 483
      ✓ compliant for data PUSH of length 484
      ✓ compliant for data PUSH of length 485
      ✓ compliant for data PUSH of length 486
      ✓ compliant for data PUSH of length 487
      ✓ compliant for data PUSH of length 488
      ✓ compliant for data PUSH of length 489
      ✓ compliant for data PUSH of length 490
      ✓ compliant for data PUSH of length 491
      ✓ compliant for data PUSH of length 492
      ✓ compliant for data PUSH of length 493
      ✓ compliant for data PUSH of length 494
      ✓ compliant for data PUSH of length 495
      ✓ compliant for data PUSH of length 496
      ✓ compliant for data PUSH of length 497
      ✓ compliant for data PUSH of length 498
      ✓ compliant for data PUSH of length 499
      ✓ compliant for data PUSH of length 500
      ✓ compliant for data PUSH of length 501
      ✓ compliant for data PUSH of length 502
      ✓ compliant for data PUSH of length 503
      ✓ compliant for data PUSH of length 504
      ✓ compliant for data PUSH of length 505
      ✓ compliant for data PUSH of length 506
      ✓ compliant for data PUSH of length 507
      ✓ compliant for data PUSH of length 508
      ✓ compliant for data PUSH of length 509
      ✓ compliant for data PUSH of length 510
      ✓ compliant for data PUSH of length 511
      ✓ compliant for data PUSH of length 512
      ✓ compliant for data PUSH of length 513
      ✓ compliant for data PUSH of length 514
      ✓ compliant for data PUSH of length 515
      ✓ compliant for data PUSH of length 516
      ✓ compliant for data PUSH of length 517
      ✓ compliant for data PUSH of length 518
      ✓ compliant for data PUSH of length 519

  script-number
    decode
      ✓  returns 0
      ✓ 01 returns 1
      ✓ 02 returns 2
      ✓ 03 returns 3
      ✓ 7e returns 126
      ✓ 7f returns 127
      ✓ 8000 returns 128
      ✓ 8100 returns 129
      ✓ 8200 returns 130
      ✓ ff00 returns 255
      ✓ fe7f returns 32766
      ✓ ff7f returns 32767
      ✓ 008000 returns 32768
      ✓ ffff00 returns 65535
      ✓ 018000 returns 32769
      ✓ 028000 returns 32770
      ✓ ffffff00 returns 16777215
      ✓ feff7f returns 8388606
      ✓ ffff7f returns 8388607
      ✓ 00008000 returns 8388608
      ✓ 01008000 returns 8388609
      ✓ 02008000 returns 8388610
      ✓ feffff7f returns 2147483646
      ✓ ffffff7f returns 2147483647
      ✓ 0000008000 returns 2147483648
      ✓ 0100008000 returns 2147483649
      ✓ 0200008000 returns 2147483650
      ✓ ffffffff00 returns 4294967295
      ✓ 0200008080 returns -2147483650
      ✓ 0100008080 returns -2147483649
      ✓ 0000008080 returns -2147483648
      ✓ ffffffff returns -2147483647
      ✓ feffffff returns -2147483646
      ✓ fdffffff returns -2147483645
      ✓ ffffff80 returns -16777215
      ✓ 01008080 returns -8388609
      ✓ 00008080 returns -8388608
      ✓ ffffff returns -8388607
      ✓ feffff returns -8388606
      ✓ fdffff returns -8388605
      ✓ ffff80 returns -65535
      ✓ 018080 returns -32769
      ✓ 008080 returns -32768
      ✓ ffff returns -32767
      ✓ feff returns -32766
      ✓ fdff returns -32765
      ✓ ff80 returns -255
      ✓ 8180 returns -129
      ✓ 8080 returns -128
      ✓ ff returns -127
      ✓ fe returns -126
      ✓ fd returns -125
      ✓ 82 returns -2
      ✓ 81 returns -1
    encode
      ✓ 0 returns 
      ✓ 1 returns 01
      ✓ 2 returns 02
      ✓ 3 returns 03
      ✓ 126 returns 7e
      ✓ 127 returns 7f
      ✓ 128 returns 8000
      ✓ 129 returns 8100
      ✓ 130 returns 8200
      ✓ 255 returns ff00
      ✓ 32766 returns fe7f
      ✓ 32767 returns ff7f
      ✓ 32768 returns 008000
      ✓ 65535 returns ffff00
      ✓ 32769 returns 018000
      ✓ 32770 returns 028000
      ✓ 16777215 returns ffffff00
      ✓ 8388606 returns feff7f
      ✓ 8388607 returns ffff7f
      ✓ 8388608 returns 00008000
      ✓ 8388609 returns 01008000
      ✓ 8388610 returns 02008000
      ✓ 2147483646 returns feffff7f
      ✓ 2147483647 returns ffffff7f
      ✓ 2147483648 returns 0000008000
      ✓ 2147483649 returns 0100008000
      ✓ 2147483650 returns 0200008000
      ✓ 4294967295 returns ffffffff00
      ✓ -2147483650 returns 0200008080
      ✓ -2147483649 returns 0100008080
      ✓ -2147483648 returns 0000008080
      ✓ -2147483647 returns ffffffff
      ✓ -2147483646 returns feffffff
      ✓ -2147483645 returns fdffffff
      ✓ -16777215 returns ffffff80
      ✓ -8388609 returns 01008080
      ✓ -8388608 returns 00008080
      ✓ -8388607 returns ffffff
      ✓ -8388606 returns feffff
      ✓ -8388605 returns fdffff
      ✓ -65535 returns ffff80
      ✓ -32769 returns 018080
      ✓ -32768 returns 008080
      ✓ -32767 returns ffff
      ✓ -32766 returns feff
      ✓ -32765 returns fdff
      ✓ -255 returns ff80
      ✓ -129 returns 8180
      ✓ -128 returns 8080
      ✓ -127 returns ff
      ✓ -126 returns fe
      ✓ -125 returns fd
      ✓ -2 returns 82
      ✓ -1 returns 81

  Test Suite
    ✓ has expected count

  script-templates
    classifyInput
      ✓ classifies 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 as pubkey
      ✓ classifies 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 as pubkeyhash
      ✓ classifies OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 as multisig
      ✓ classifies OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01 as multisig
      ✓ classifies OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 522102359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1210395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a52ae as scripthash
      ✓ classifies OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01 as nonstandard
      ✓ classifies OP_0 OP_0 OP_0 OP_0 as nonstandard
      ✓ classifies OP_0 304502210093efc26facedc5f51e304aa270a7b4f1a911b2d912c3674e5c6e2ad4ac7a410402201cf0b62c240461902f9f16d8a0bc3a210b7bfcd2c06523dd4b4b63be22e8525201 52210327e023a353d111808f61d554c2e1934721eaf87f33b7a771e807006908a493722103251670bb6a179a0d43b75476c7e580c0ba274378a18077e8de0832c870e5381f2102cca7f9a64425a0466d26d5c7e9eb3ad6b64cd48ea89edb38bc08f58a792dde4753ae as scripthash
      ✓ classifies OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae as nonstandard
      ✓ classifies OP_0 00 as nonstandard
      ✓ classifies OP_6 as nonstandard
      ✓ classifiesas nonstandard
      ✓ classifies incomplete OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01 as multisig
      ✓ classifies incomplete OP_0 OP_0 OP_0 OP_0 as multisig
      ✓ classifies incomplete OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae as scripthash
    classifyOutput
      ✓ classifies 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG as pubkey
      ✓ classifies OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG as pubkeyhash
      ✓ classifies OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG as multisig
      ✓ classifies OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG as multisig
      ✓ classifies OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL as scripthash
      ✓ classifies OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 as witnesspubkeyhash
      ✓ classifies OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80 as witnessscripthash
      ✓ classifies OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474 as nulldata
      ✓ classifies OP_RETURN deadffffffffffffffffffffffffffffffffbeef as nulldata
      ✓ classifies OP_HASH160 fcc42dd4aa770d75cb6796bbd7853a325e746659 OP_EQUAL as scripthash
      ✓ classifies OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL as nonstandard
      ✓ classifies OP_0 OP_0 OP_0 OP_CHECKMULTISIG as nonstandard
      ✓ classifies OP_0 as nonstandard
    pubKey.input.check
      ✓ returns true for 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
      ✓ returns false for 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ returns false for OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ returns false for OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 522102359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1210395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a52ae
      ✓ returns false for OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_0 OP_0 OP_0 OP_0
      ✓ returns false for OP_0 OP_0 OP_0 OP_0
      ✓ returns false for OP_0 304502210093efc26facedc5f51e304aa270a7b4f1a911b2d912c3674e5c6e2ad4ac7a410402201cf0b62c240461902f9f16d8a0bc3a210b7bfcd2c06523dd4b4b63be22e8525201 52210327e023a353d111808f61d554c2e1934721eaf87f33b7a771e807006908a493722103251670bb6a179a0d43b75476c7e580c0ba274378a18077e8de0832c870e5381f2102cca7f9a64425a0466d26d5c7e9eb3ad6b64cd48ea89edb38bc08f58a792dde4753ae
      ✓ returns false for OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ returns false for OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ returns false for OP_0 00
      ✓ returns false for OP_6
      ✓ returns false for
      ✓ returns false for non-canonical signature (too short) (304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf7593)
      ✓ returns false for non-canonical signature (too long) (304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca28ffffffff01)
      ✓ returns false for non-canonical signature (invalid hashType) (304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca28ff)
    pubKey.output.check
      ✓ returns true for 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ returns false for OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ returns false for OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ returns false for OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ returns false for OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ returns false for OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ returns false for OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ returns false for OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ returns false for OP_HASH160 fcc42dd4aa770d75cb6796bbd7853a325e746659 OP_EQUAL
      ✓ returns false for OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ returns false for OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ returns false for OP_0
      ✓ returns false for non-canonical pubkey (too short) (02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce OP_CHECKSIG)
      ✓ returns false for non-canonical pubkey (too long) (02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1ffffff OP_CHECKSIG)
      ✓ returns false for last operator is wrong for pubkey-output (21027a71801ab59336de37785c50005b6abd8ea859eecce1edbe8e81afa74ee5c752ae)
      ✓ returns false for missing OP_CHECKSIG (21027a71801ab59336de37785c50005b6abd8ea859eecce1edbe8e81afa74ee5c752)
      ✓ returns false for non-canonical pubkey (bad prefix) (427a71801ab59336de37785c50005b6abd8ea859eecce1edbe8e81afa74ee5c752 OP_CHECKSIG)
      ✓ returns false for has extra opcode at the end isPubKeyOutput (027a71801ab59336de37785c50005b6abd8ea859eecce1edbe8e81afa74ee5c752 OP_CHECKSIG OP_0)
    pubKeyHash.input.check
      ✓ returns false for 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
      ✓ returns true for 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ returns false for OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ returns false for OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 522102359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1210395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a52ae
      ✓ returns false for OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_0 OP_0 OP_0 OP_0
      ✓ returns false for OP_0 OP_0 OP_0 OP_0
      ✓ returns false for OP_0 304502210093efc26facedc5f51e304aa270a7b4f1a911b2d912c3674e5c6e2ad4ac7a410402201cf0b62c240461902f9f16d8a0bc3a210b7bfcd2c06523dd4b4b63be22e8525201 52210327e023a353d111808f61d554c2e1934721eaf87f33b7a771e807006908a493722103251670bb6a179a0d43b75476c7e580c0ba274378a18077e8de0832c870e5381f2102cca7f9a64425a0466d26d5c7e9eb3ad6b64cd48ea89edb38bc08f58a792dde4753ae
      ✓ returns false for OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ returns false for OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ returns false for OP_0 00
      ✓ returns false for OP_6
      ✓ returns false for
      ✓ returns false for pubKeyHash input : extraneous data (304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 ffffffff)
    pubKeyHash.output.check
      ✓ returns false for 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ returns true for OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ returns false for OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ returns false for OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ returns false for OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ returns false for OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ returns false for OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ returns false for OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ returns false for OP_HASH160 fcc42dd4aa770d75cb6796bbd7853a325e746659 OP_EQUAL
      ✓ returns false for OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ returns false for OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ returns false for OP_0
      ✓ returns false for non-minimal encoded isPubKeyHashOutput (non BIP62 compliant) (76a94c14aa4d7985c57e011a8b3dd8e0e5a73aaef41629c588ac)
      ✓ returns false for bad OP_DUP isPubKeyHashOutput (aca914aa4d7985c57e011a8b3dd8e0e5a73aaef41629c588ac)
      ✓ returns false for bad OP_HASH160 isPubKeyHashOutput (76ac14aa4d7985c57e011a8b3dd8e0e5a73aaef41629c588ac)
      ✓ returns false for bad OP_EQUALVERIFY isPubKeyHashOutput (76a914aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5acac)
      ✓ returns false for bad OP_CHECKSIG isPubKeyHashOutput (76a914aa4d7985c57e011a8b3dd8e0e5a73aaef41629c58888)
      ✓ returns false for bad length isPubKeyHashOutput (76a920aa4d7985c57e011a8b3dd8e0e5a73aaef41629c588ac)
      ✓ returns false for has something at the end isPubKeyHashOutput (76a920aa4d7985c57e011a8b3dd8e0e5a73aaef41629c588ac00)
    scriptHash.input.check
      ✓ returns false for 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
      ✓ returns false for 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ returns false for OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ returns false for OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns true for OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 522102359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1210395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a52ae
      ✓ returns false for OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_0 OP_0 OP_0 OP_0
      ✓ returns false for OP_0 OP_0 OP_0 OP_0
      ✓ returns true for OP_0 304502210093efc26facedc5f51e304aa270a7b4f1a911b2d912c3674e5c6e2ad4ac7a410402201cf0b62c240461902f9f16d8a0bc3a210b7bfcd2c06523dd4b4b63be22e8525201 52210327e023a353d111808f61d554c2e1934721eaf87f33b7a771e807006908a493722103251670bb6a179a0d43b75476c7e580c0ba274378a18077e8de0832c870e5381f2102cca7f9a64425a0466d26d5c7e9eb3ad6b64cd48ea89edb38bc08f58a792dde4753ae
      ✓ returns false for OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ returns false for OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ returns false for OP_0 00
      ✓ returns false for OP_6
      ✓ returns false for
      ✓ returns false for redeemScript not data (OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 OP_RESERVED)
      ✓ returns false for redeemScript is a signature, therefore not a valid script (OP_0 3045022100e12b17b3a4c80c401a1687487bd2bafee9e5f1f8f1ffc6180ce186672ad7b43a02205e316d1e5e71822f5ef301b694e578fa9c94af4f5f098c952c833f4691307f4e01)
    scriptHash.output.check
      ✓ returns false for 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ returns false for OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ returns false for OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ returns false for OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ returns true for OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ returns false for OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ returns false for OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ returns false for OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ returns true for OP_HASH160 fcc42dd4aa770d75cb6796bbd7853a325e746659 OP_EQUAL
      ✓ returns false for OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ returns false for OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ returns false for OP_0
      ✓ returns false for non-minimal encoded isScriptHashOutput (non BIP62 compliant) (a94c14c286a1af0947f58d1ad787385b1c2c4a976f9e7187)
      ✓ returns false for wrong OP_HASH160 opcode (ac4c14c286a1af0947f58d1ad787385b1c2c4a976f9e7187)
      ✓ returns false for wrong length marker (a916c286a1af0947f58d1ad787385b1c2c4a976f9e7187)
      ✓ returns false for wrong OP_EQUAL opcode (a914c286a1af0947f58d1ad787385b1c2c4a976f9e7188)
    witnessPubKeyHash.output.check
      ✓ returns false for 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ returns false for OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ returns false for OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ returns false for OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ returns false for OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ returns true for OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ returns false for OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ returns false for OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ returns false for OP_HASH160 fcc42dd4aa770d75cb6796bbd7853a325e746659 OP_EQUAL
      ✓ returns false for OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ returns false for OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ returns false for OP_0
      ✓ returns false for wrong version (51149090909090909090909090909090909090909090)
      ✓ returns false for wrong length marker (00209090909090909090909090909090909090909090)
    witnessScriptHash.output.check
      ✓ returns false for 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ returns false for OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ returns false for OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ returns false for OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ returns false for OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ returns false for OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ returns true for OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ returns false for OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ returns false for OP_HASH160 fcc42dd4aa770d75cb6796bbd7853a325e746659 OP_EQUAL
      ✓ returns false for OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ returns false for OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ returns false for OP_0
      ✓ returns false for wrong version (51209090909090909090909090909090909090909090909090909090909090909090)
      ✓ returns false for wrong length marker (00219090909090909090909090909090909090909090909090909090909090909090)
    multisig.input.check
      ✓ returns false for 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
      ✓ returns false for 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ returns true for OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ returns true for OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501 522102359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1210395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a52ae
      ✓ returns false for OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ returns false for OP_0 OP_0 OP_0 OP_0
      ✓ returns false for OP_0 OP_0 OP_0 OP_0
      ✓ returns false for OP_0 304502210093efc26facedc5f51e304aa270a7b4f1a911b2d912c3674e5c6e2ad4ac7a410402201cf0b62c240461902f9f16d8a0bc3a210b7bfcd2c06523dd4b4b63be22e8525201 52210327e023a353d111808f61d554c2e1934721eaf87f33b7a771e807006908a493722103251670bb6a179a0d43b75476c7e580c0ba274378a18077e8de0832c870e5381f2102cca7f9a64425a0466d26d5c7e9eb3ad6b64cd48ea89edb38bc08f58a792dde4753ae
      ✓ returns false for OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ returns false for OP_0 OP_0 30450221009c92c1ae1767ac04e424da7f6db045d979b08cde86b1ddba48621d59a109d818022004f5bb21ad72255177270abaeb2d7940ac18f1e5ca1f53db4f3fd1045647a8a801 52410479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b84104c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee51ae168fea63dc339a3c58419466ceaeef7f632653266d0e1236431a950cfe52a52ae
      ✓ returns false for OP_0 00
      ✓ returns false for OP_6
      ✓ returns false for
    multisig.output.check
      ✓ returns false for 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ returns false for OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ returns true for OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ returns true for OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ returns false for OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ returns false for OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ returns false for OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ returns false for OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ returns false for OP_HASH160 fcc42dd4aa770d75cb6796bbd7853a325e746659 OP_EQUAL
      ✓ returns false for OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ returns false for OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ returns false for OP_0
      ✓ returns false for OP_CHECKMULTISIG not found (OP_0 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 OP_2 OP_HASH160)
      ✓ returns false for less than 4 chunks (OP_0 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 OP_HASH160)
      ✓ returns false for m === 0 (OP_0 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 OP_2 OP_CHECKMULTISIG)
      ✓ returns false for m < OP_1 (OP_1NEGATE 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 OP_2 OP_CHECKMULTISIG)
      ✓ returns false for m > OP_16 (OP_NOP 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 OP_2 OP_CHECKMULTISIG)
      ✓ returns false for n === 0 (OP_1 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 OP_0 OP_CHECKMULTISIG)
      ✓ returns false for n < OP_1 (OP_1 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 OP_1NEGATE OP_CHECKMULTISIG)
      ✓ returns false for n > OP_16 (OP_1 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 OP_NOP OP_CHECKMULTISIG)
      ✓ returns false for n < m (OP_2 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 OP_1 OP_CHECKMULTISIG)
      ✓ returns false for n < len(pubKeys) (OP_2 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_2 OP_CHECKMULTISIG)
      ✓ returns false for n > len(pubKeys) (OP_1 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_2 OP_CHECKMULTISIG)
      ✓ returns false for m is data (ffff 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_1 OP_CHECKMULTISIG)
      ✓ returns false for n is data (OP_1 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 ffff OP_CHECKMULTISIG)
      ✓ returns false for non-canonical pubKey (bad length) (OP_1 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798ffff OP_1 OP_CHECKMULTISIG)
    nullData.output.check
      ✓ returns false for 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ returns false for OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ returns false for OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ returns false for OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ returns false for OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ returns false for OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ returns false for OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ returns true for OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ returns true for OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ returns false for OP_HASH160 fcc42dd4aa770d75cb6796bbd7853a325e746659 OP_EQUAL
      ✓ returns false for OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ returns false for OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ returns false for OP_0
    witnessCommitment.output.check
      ✓ returns false for 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ returns false for OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ returns false for OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ returns false for OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ returns false for OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ returns false for OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ returns false for OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ returns false for OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ returns false for OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ returns false for OP_HASH160 fcc42dd4aa770d75cb6796bbd7853a325e746659 OP_EQUAL
      ✓ returns false for OP_HASH256 6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000 OP_EQUAL
      ✓ returns false for OP_0 OP_0 OP_0 OP_CHECKMULTISIG
      ✓ returns false for OP_0
    pubKey.input
      ✓ encodes to 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
      ✓ decodes to 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801
    pubKey.output
      ✓ encodes to 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 OP_CHECKSIG
      ✓ decodes to 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
    pubKeyHash.input
      ✓ encodes to 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ decodes to original arguments
    pubKeyHash.output
      ✓ encodes to OP_DUP OP_HASH160 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5 OP_EQUALVERIFY OP_CHECKSIG
      ✓ decodes to aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ throws on Expected Buffer\(Length: 20\), got Buffer\(Length: 2\)
    multisig.input
      ✓ encodes to OP_0 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ decodes to 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801,3045022100ef253c1faa39e65115872519e5f0a33bbecf430c0f35cf562beabbad4da24d8d02201742be8ee49812a73adea3007c9641ce6725c32cd44ddb8e3a3af460015d140501
      ✓ encodes to OP_0 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ decodes to 3045022100fe324541215798b2df68cbd44039615e23c506d4ec1a05572064392a98196b82022068c849fa6699206da2fc6d7848efc1d3804a5816d6293615fe34c1a7f34e1c2f01,3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901,3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ encodes to OP_0 OP_0 3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901 3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ decodes to OP_0,3044022001ab168e80b863fdec694350b587339bb72a37108ac3c989849251444d13ebba02201811272023e3c1038478eb972a82d3ad431bfc2408e88e4da990f1a7ecbb263901,3045022100aaeb7204c17eee2f2c4ff1c9f8b39b79e75e7fbf33e92cc67ac51be8f15b75f90220659eee314a4943a6384d2b154fa5821ef7a084814d7ee2c6f9f7f0ffb53be34b01
      ✓ encodes to OP_0 OP_0 OP_0 OP_0
      ✓ decodes to OP_0,OP_0,OP_0
      ✓ throws on undefined
      ✓ throws on Not enough signatures provided
      ✓ throws on Too many signatures provided
    multisig.output
      ✓ encodes OP_2 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1 0395a9d84d47d524548f79f435758c01faec5da2b7e551d3b8c995b7e06326ae4a OP_2 OP_CHECKMULTISIG
      ✓ decodes to original arguments
      ✓ encodes OP_3 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798 02b80011a883a0fd621ad46dfc405df1e74bf075cbaf700fd4aebef6e96f848340 024289801366bcee6172b771cf5a7f13aaecd237a0b9a1ff9d769cabc2e6b70a34 OP_3 OP_CHECKMULTISIG
      ✓ decodes to original arguments
      ✓ throws on Not enough pubKeys provided
    scriptHash.input
      ✓ encodes to OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ decodes to original arguments
      ✓ encodes to OP_HASH160 fcc42dd4aa770d75cb6796bbd7853a325e746659 OP_EQUAL
      ✓ decodes to original arguments
    scriptHash.output
      ✓ encodes to OP_HASH160 722ff0bc2c3f47b35c20df646c395594da24e90e OP_EQUAL
      ✓ decodes to 722ff0bc2c3f47b35c20df646c395594da24e90e
      ✓ encodes to OP_HASH160 fcc42dd4aa770d75cb6796bbd7853a325e746659 OP_EQUAL
      ✓ decodes to fcc42dd4aa770d75cb6796bbd7853a325e746659
      ✓ throws on Expected Buffer\(Length: 20\), got Buffer\(Length: 3\)
    witnessPubKeyHash.input
      ✓ encodes to 304402207515cf147d201f411092e6be5a64a6006f9308fad7b2a8fdaab22cd86ce764c202200974b8aca7bf51dbf54150d3884e1ae04f675637b926ec33bf75939446f6ca2801 02359c6e3f04cefbf089cf1d6670dc47c3fb4df68e2bad1fa5a369f9ce4b42bbd1
      ✓ decodes to original arguments
      ✓ encodes to undefined
      ✓ decodes to original arguments
    witnessPubKeyHash.output
      ✓ encodes to OP_0 aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ decodes to aa4d7985c57e011a8b3dd8e0e5a73aaef41629c5
      ✓ throws on Expected Buffer\(Length: 20\), got Buffer\(Length: 3\)
    witnessScriptHash.input
      ✓ encodes to undefined
      ✓ decodes to original arguments
    witnessScriptHash.output
      ✓ encodes to OP_0 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ decodes to 32447752937d355ca2defddcd1f6b4fc53d182f8901cebbcff42f5e381bf0b80
      ✓ throws on Expected Buffer\(Length: 32\), got Buffer\(Length: 3\)
    witnessCommitment.output
      ✓ throws on bad encode data
      ✓ .decode throws on wrong OPCODE at the start
      ✓ .decode throws on wrong length marker
      ✓ .decode throws on commitment of wrong length
    nullData.output
      ✓ encodes to OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ decodes to 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474
      ✓ encodes to OP_RETURN deadffffffffffffffffffffffffffffffffbeef
      ✓ decodes to deadffffffffffffffffffffffffffffffffbeef

  Transaction
    fromBuffer/fromHex
      ✓ imports Standard transaction (1:1) (a0ff943d3f644d8832b1fa74be4d0ad2577615dc28a7ef74ff8c271b603a082a)
      ✓ imports Standard transaction (2:2) (fcdd6d89c43e76dcff94285d9b6e31d5c60cb5e397a76ebc4920befad30907bc)
      ✓ imports Standard transaction (14:2) (39d57bc27f72e904d81f6b5ef7b4e6e17fa33a06b11e5114a43435830d7b5563)
      ✓ imports Coinbase transaction (8e070d4eb85eb02e02dd938d6552316b9d723330707870c518064b7a0d232da3)
      ✓ imports Transaction that ignores script chunking rules - Bug #367 (ebc9fa1196a59e192352d76c0f6e73167046b9d37b8302b6bb6968dfd279b767)
      ✓ imports P2PK (8d4733995be9b3331a65eeb31bce24b213d4fabcbadf7f6634a8fea442c13e6a)
      ✓ imports P2SH P2PK (d4ebb5e09c06dd375f265b51eb7f1a14d12deba71329500e2a00a905fdfdc27d)
      ✓ imports P2WSH P2PK (60f04167a0c94d6439102f7fde9ad77c08a8716419805e77ef66b286cc5c7f87)
      ✓ imports P2WSH P2PK (60f04167a0c94d6439102f7fde9ad77c08a8716419805e77ef66b286cc5c7f87) as witness
      ✓ imports P2SH P2WSH P2PK (da24fd5a422f72e3bde593628c2b47ff9ca7454e1f3ba5fb916344c218d31052)
      ✓ imports P2SH P2WSH P2PK (da24fd5a422f72e3bde593628c2b47ff9ca7454e1f3ba5fb916344c218d31052) as witness
      ✓ imports P2PKH (c7a77aeadf529759c8db9b3f205d690cdaed3df0eaf441ead648086e85a6a280)
      ✓ imports P2SH P2PKH (0b8fa64f89b95666a23e424fe94e9114806726be9753e140dbd74c0d673c9593)
      ✓ imports P2WSH P2PKH (62c62316f80beb10d9b1ce9183eb66e7e18a18324ca5f5e6f839be03f64aba83)
      ✓ imports P2WSH P2PKH (62c62316f80beb10d9b1ce9183eb66e7e18a18324ca5f5e6f839be03f64aba83) as witness
      ✓ imports P2SH P2WSH P2PKH (2ef1431ec41a75791b75d16526f23534ae66d8d4abfb483d98d14bcb259311c0)
      ✓ imports P2SH P2WSH P2PKH (2ef1431ec41a75791b75d16526f23534ae66d8d4abfb483d98d14bcb259311c0) as witness
      ✓ imports Multisig (7f5d96a866a815f5a1896fcd3b49cd00ac4c366a371fe8555f124e628e977a5e)
      ✓ imports P2SH Multisig (3aef827e4306bab01f118a8eccad74713bcd1695362caf9fed55202ed54ef88b)
      ✓ imports P2WSH Multisig (03e6b741d25cbd061b8d0999a521788ef90263dd8ba96d91c2136a4386afdf8e)
      ✓ imports P2WSH Multisig (03e6b741d25cbd061b8d0999a521788ef90263dd8ba96d91c2136a4386afdf8e) as witness
      ✓ imports P2SH P2WSH Multisig (e77fd9ea35346e295e1e15de9724fff42b5c127da4c5447a4ffddd361f66b1c1)
      ✓ imports P2SH P2WSH Multisig (e77fd9ea35346e295e1e15de9724fff42b5c127da4c5447a4ffddd361f66b1c1) as witness
      ✓ imports P2WKH (10bbdf7e9301bc21f1da8684f25fd66bc1314904c30da25a8ebf967c58c89269)
      ✓ imports P2WKH (10bbdf7e9301bc21f1da8684f25fd66bc1314904c30da25a8ebf967c58c89269) as witness
      ✓ imports P2SH P2WKH (a0dd6714722a577c5db08f740cd1525f5383f8771dd0ebecd9ae96eb6623408a)
      ✓ imports P2SH P2WKH (a0dd6714722a577c5db08f740cd1525f5383f8771dd0ebecd9ae96eb6623408a) as witness
      ✓ imports Coinbase transaction w/ witness (c881f7b084a367b0603abbcb9c5c639318e6166770e3f9b27a1ee3f8b6a16517)
      ✓ imports Coinbase transaction w/ witness (c881f7b084a367b0603abbcb9c5c639318e6166770e3f9b27a1ee3f8b6a16517) as witness
      ✓ imports Out of range inIndex (0000000000000000000000000000000000000000000000000000000000000001)
      ✓ imports inIndex > nOutputs (SIGHASH_SINGLE) (0000000000000000000000000000000000000000000000000000000000000001)
      ✓ imports undefined (3d56a632462b9fc9b89eeddcad7dbe476297f34aff7e5f9320e2a99fb5e97136)
      ✓ imports undefined (3d56a632462b9fc9b89eeddcad7dbe476297f34aff7e5f9320e2a99fb5e97136)
      ✓ imports undefined (fa075877cb54916236806a6562e4a8cdad48adf1268e73d72d1f9fdd867df463)
      ✓ imports Native P2WPKH with SIGHASH_ALL (c37af31116d1b27caf68aae9e3ac82f1477929014d5b917657d0eb49478cb670)
      ✓ imports P2WPKH with SIGHASH_ALL (64f3b0f4dd2bb3aa1ce8566d220cc74dda9df97d8490cc81d89d735c92e59fb6)
      ✓ imports P2WSH with SIGHASH_ALL (185c0be5263dce5b4bb50a047973c1b6272bfbd0103a89444597dc40b248ee7c)
      ✓ imports P2WSH with SIGHASH_NONE (e9733bc60ea13c95c6527066bb975a2ff29a925e80aa14c213f686cbae5d2f36)
      ✓ imports P2WSH with SIGHASH_SINGLE (1e1f1c303dc025bd664acb72e583e933fae4cff9148bf78c157d1e8f78530aea)
      ✓ imports P2WSH with SIGHASH_ALL | SIGHASH_ANYONECANPAY (2a67f03e63a6a422125878b40b82da593be8d4efaafe88ee528af6e5a9955c6e)
      ✓ imports P2WSH with SIGHASH_NONE | SIGHASH_ANYONECANPAY (781ba15f3779d5542ce8ecb5c18716733a5ee42a6f51488ec96154934e2c890a)
      ✓ imports P2WSH with SIGHASH_SINGLE | SIGHASH_ANYONECANPAY (511e8e52ed574121fc1b654970395502128263f62662e076dc6baf05c2e6a99b)
      ✓ throws on Transaction has unexpected data
      ✓ throws on Transaction has superfluous witness data
      ✓ .version should be interpreted as an int32le
    toBuffer/toHex
      ✓ exports Standard transaction (1:1) (a0ff943d3f644d8832b1fa74be4d0ad2577615dc28a7ef74ff8c271b603a082a)
      ✓ exports Standard transaction (2:2) (fcdd6d89c43e76dcff94285d9b6e31d5c60cb5e397a76ebc4920befad30907bc)
      ✓ exports Standard transaction (14:2) (39d57bc27f72e904d81f6b5ef7b4e6e17fa33a06b11e5114a43435830d7b5563)
      ✓ exports Coinbase transaction (8e070d4eb85eb02e02dd938d6552316b9d723330707870c518064b7a0d232da3)
      ✓ exports Transaction that ignores script chunking rules - Bug #367 (ebc9fa1196a59e192352d76c0f6e73167046b9d37b8302b6bb6968dfd279b767)
      ✓ exports P2PK (8d4733995be9b3331a65eeb31bce24b213d4fabcbadf7f6634a8fea442c13e6a)
      ✓ exports P2SH P2PK (d4ebb5e09c06dd375f265b51eb7f1a14d12deba71329500e2a00a905fdfdc27d)
      ✓ exports P2WSH P2PK (60f04167a0c94d6439102f7fde9ad77c08a8716419805e77ef66b286cc5c7f87)
      ✓ exports P2WSH P2PK (60f04167a0c94d6439102f7fde9ad77c08a8716419805e77ef66b286cc5c7f87) as witness
      ✓ exports P2SH P2WSH P2PK (da24fd5a422f72e3bde593628c2b47ff9ca7454e1f3ba5fb916344c218d31052)
      ✓ exports P2SH P2WSH P2PK (da24fd5a422f72e3bde593628c2b47ff9ca7454e1f3ba5fb916344c218d31052) as witness
      ✓ exports P2PKH (c7a77aeadf529759c8db9b3f205d690cdaed3df0eaf441ead648086e85a6a280)
      ✓ exports P2SH P2PKH (0b8fa64f89b95666a23e424fe94e9114806726be9753e140dbd74c0d673c9593)
      ✓ exports P2WSH P2PKH (62c62316f80beb10d9b1ce9183eb66e7e18a18324ca5f5e6f839be03f64aba83)
      ✓ exports P2WSH P2PKH (62c62316f80beb10d9b1ce9183eb66e7e18a18324ca5f5e6f839be03f64aba83) as witness
      ✓ exports P2SH P2WSH P2PKH (2ef1431ec41a75791b75d16526f23534ae66d8d4abfb483d98d14bcb259311c0)
      ✓ exports P2SH P2WSH P2PKH (2ef1431ec41a75791b75d16526f23534ae66d8d4abfb483d98d14bcb259311c0) as witness
      ✓ exports Multisig (7f5d96a866a815f5a1896fcd3b49cd00ac4c366a371fe8555f124e628e977a5e)
      ✓ exports P2SH Multisig (3aef827e4306bab01f118a8eccad74713bcd1695362caf9fed55202ed54ef88b)
      ✓ exports P2WSH Multisig (03e6b741d25cbd061b8d0999a521788ef90263dd8ba96d91c2136a4386afdf8e)
      ✓ exports P2WSH Multisig (03e6b741d25cbd061b8d0999a521788ef90263dd8ba96d91c2136a4386afdf8e) as witness
      ✓ exports P2SH P2WSH Multisig (e77fd9ea35346e295e1e15de9724fff42b5c127da4c5447a4ffddd361f66b1c1)
      ✓ exports P2SH P2WSH Multisig (e77fd9ea35346e295e1e15de9724fff42b5c127da4c5447a4ffddd361f66b1c1) as witness
      ✓ exports P2WKH (10bbdf7e9301bc21f1da8684f25fd66bc1314904c30da25a8ebf967c58c89269)
      ✓ exports P2WKH (10bbdf7e9301bc21f1da8684f25fd66bc1314904c30da25a8ebf967c58c89269) as witness
      ✓ exports P2SH P2WKH (a0dd6714722a577c5db08f740cd1525f5383f8771dd0ebecd9ae96eb6623408a)
      ✓ exports P2SH P2WKH (a0dd6714722a577c5db08f740cd1525f5383f8771dd0ebecd9ae96eb6623408a) as witness
      ✓ exports Coinbase transaction w/ witness (c881f7b084a367b0603abbcb9c5c639318e6166770e3f9b27a1ee3f8b6a16517)
      ✓ exports Coinbase transaction w/ witness (c881f7b084a367b0603abbcb9c5c639318e6166770e3f9b27a1ee3f8b6a16517) as witness
      ✓ accepts target Buffer and offset parameters
    hasWitnesses
      ✓ detects if the transaction has witnesses: false
      ✓ detects if the transaction has witnesses: false
      ✓ detects if the transaction has witnesses: false
      ✓ detects if the transaction has witnesses: false
      ✓ detects if the transaction has witnesses: false
      ✓ detects if the transaction has witnesses: false
      ✓ detects if the transaction has witnesses: false
      ✓ detects if the transaction has witnesses: true
      ✓ detects if the transaction has witnesses: true
      ✓ detects if the transaction has witnesses: false
      ✓ detects if the transaction has witnesses: false
      ✓ detects if the transaction has witnesses: true
      ✓ detects if the transaction has witnesses: true
      ✓ detects if the transaction has witnesses: false
      ✓ detects if the transaction has witnesses: false
      ✓ detects if the transaction has witnesses: true
      ✓ detects if the transaction has witnesses: true
      ✓ detects if the transaction has witnesses: true
      ✓ detects if the transaction has witnesses: true
      ✓ detects if the transaction has witnesses: true
    weight/virtualSize
      ✓ computes virtual size
      ✓ computes weight
    addInput
      ✓ returns an index
      ✓ defaults to empty script, witness and 0xffffffff SEQUENCE number
      ✓ throws on Expected property "0" of type Buffer\(Length: 32\), got Buffer\(Length: 30\)
      ✓ throws on Expected property "0" of type Buffer\(Length: 32\), got Buffer\(Length: 34\)
    addOutput
      ✓ returns an index
    clone
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
      ✓ should have value equality
      ✓ should not have reference equality
    getHash/getId
      ✓ should return the id for a0ff943d3f644d8832b1fa74be4d0ad2577615dc28a7ef74ff8c271b603a082a(Standard transaction (1:1))
      ✓ should return the id for fcdd6d89c43e76dcff94285d9b6e31d5c60cb5e397a76ebc4920befad30907bc(Standard transaction (2:2))
      ✓ should return the id for 39d57bc27f72e904d81f6b5ef7b4e6e17fa33a06b11e5114a43435830d7b5563(Standard transaction (14:2))
      ✓ should return the id for 8e070d4eb85eb02e02dd938d6552316b9d723330707870c518064b7a0d232da3(Coinbase transaction)
      ✓ should return the id for ebc9fa1196a59e192352d76c0f6e73167046b9d37b8302b6bb6968dfd279b767(Transaction that ignores script chunking rules - Bug #367)
      ✓ should return the id for 8d4733995be9b3331a65eeb31bce24b213d4fabcbadf7f6634a8fea442c13e6a(P2PK)
      ✓ should return the id for d4ebb5e09c06dd375f265b51eb7f1a14d12deba71329500e2a00a905fdfdc27d(P2SH P2PK)
      ✓ should return the id for 60f04167a0c94d6439102f7fde9ad77c08a8716419805e77ef66b286cc5c7f87(P2WSH P2PK)
      ✓ should return the id for da24fd5a422f72e3bde593628c2b47ff9ca7454e1f3ba5fb916344c218d31052(P2SH P2WSH P2PK)
      ✓ should return the id for c7a77aeadf529759c8db9b3f205d690cdaed3df0eaf441ead648086e85a6a280(P2PKH)
      ✓ should return the id for 0b8fa64f89b95666a23e424fe94e9114806726be9753e140dbd74c0d673c9593(P2SH P2PKH)
      ✓ should return the id for 62c62316f80beb10d9b1ce9183eb66e7e18a18324ca5f5e6f839be03f64aba83(P2WSH P2PKH)
      ✓ should return the id for 2ef1431ec41a75791b75d16526f23534ae66d8d4abfb483d98d14bcb259311c0(P2SH P2WSH P2PKH)
      ✓ should return the id for 7f5d96a866a815f5a1896fcd3b49cd00ac4c366a371fe8555f124e628e977a5e(Multisig)
      ✓ should return the id for 3aef827e4306bab01f118a8eccad74713bcd1695362caf9fed55202ed54ef88b(P2SH Multisig)
      ✓ should return the id for 03e6b741d25cbd061b8d0999a521788ef90263dd8ba96d91c2136a4386afdf8e(P2WSH Multisig)
      ✓ should return the id for e77fd9ea35346e295e1e15de9724fff42b5c127da4c5447a4ffddd361f66b1c1(P2SH P2WSH Multisig)
      ✓ should return the id for 10bbdf7e9301bc21f1da8684f25fd66bc1314904c30da25a8ebf967c58c89269(P2WKH)
      ✓ should return the id for a0dd6714722a577c5db08f740cd1525f5383f8771dd0ebecd9ae96eb6623408a(P2SH P2WKH)
      ✓ should return the id for c881f7b084a367b0603abbcb9c5c639318e6166770e3f9b27a1ee3f8b6a16517(Coinbase transaction w/ witness)
    isCoinbase
      ✓ should return false for a0ff943d3f644d8832b1fa74be4d0ad2577615dc28a7ef74ff8c271b603a082a(Standard transaction (1:1))
      ✓ should return false for fcdd6d89c43e76dcff94285d9b6e31d5c60cb5e397a76ebc4920befad30907bc(Standard transaction (2:2))
      ✓ should return false for 39d57bc27f72e904d81f6b5ef7b4e6e17fa33a06b11e5114a43435830d7b5563(Standard transaction (14:2))
      ✓ should return true for 8e070d4eb85eb02e02dd938d6552316b9d723330707870c518064b7a0d232da3(Coinbase transaction)
      ✓ should return false for ebc9fa1196a59e192352d76c0f6e73167046b9d37b8302b6bb6968dfd279b767(Transaction that ignores script chunking rules - Bug #367)
      ✓ should return false for 8d4733995be9b3331a65eeb31bce24b213d4fabcbadf7f6634a8fea442c13e6a(P2PK)
      ✓ should return false for d4ebb5e09c06dd375f265b51eb7f1a14d12deba71329500e2a00a905fdfdc27d(P2SH P2PK)
      ✓ should return false for 60f04167a0c94d6439102f7fde9ad77c08a8716419805e77ef66b286cc5c7f87(P2WSH P2PK)
      ✓ should return false for da24fd5a422f72e3bde593628c2b47ff9ca7454e1f3ba5fb916344c218d31052(P2SH P2WSH P2PK)
      ✓ should return false for c7a77aeadf529759c8db9b3f205d690cdaed3df0eaf441ead648086e85a6a280(P2PKH)
      ✓ should return false for 0b8fa64f89b95666a23e424fe94e9114806726be9753e140dbd74c0d673c9593(P2SH P2PKH)
      ✓ should return false for 62c62316f80beb10d9b1ce9183eb66e7e18a18324ca5f5e6f839be03f64aba83(P2WSH P2PKH)
      ✓ should return false for 2ef1431ec41a75791b75d16526f23534ae66d8d4abfb483d98d14bcb259311c0(P2SH P2WSH P2PKH)
      ✓ should return false for 7f5d96a866a815f5a1896fcd3b49cd00ac4c366a371fe8555f124e628e977a5e(Multisig)
      ✓ should return false for 3aef827e4306bab01f118a8eccad74713bcd1695362caf9fed55202ed54ef88b(P2SH Multisig)
      ✓ should return false for 03e6b741d25cbd061b8d0999a521788ef90263dd8ba96d91c2136a4386afdf8e(P2WSH Multisig)
      ✓ should return false for e77fd9ea35346e295e1e15de9724fff42b5c127da4c5447a4ffddd361f66b1c1(P2SH P2WSH Multisig)
      ✓ should return false for 10bbdf7e9301bc21f1da8684f25fd66bc1314904c30da25a8ebf967c58c89269(P2WKH)
      ✓ should return false for a0dd6714722a577c5db08f740cd1525f5383f8771dd0ebecd9ae96eb6623408a(P2SH P2WKH)
      ✓ should return true for c881f7b084a367b0603abbcb9c5c639318e6166770e3f9b27a1ee3f8b6a16517(Coinbase transaction w/ witness)
    hashForSignature
      ✓ does not use Witness serialization
      ✓ should return 0000000000000000000000000000000000000000000000000000000000000001 for case "Out of range inIndex"
      ✓ should return 0000000000000000000000000000000000000000000000000000000000000001 for case "inIndex > nOutputs (SIGHASH_SINGLE)"
      ✓ should return 3d56a632462b9fc9b89eeddcad7dbe476297f34aff7e5f9320e2a99fb5e97136 for OP_0 OP_3
      ✓ should return 3d56a632462b9fc9b89eeddcad7dbe476297f34aff7e5f9320e2a99fb5e97136 for OP_0 OP_CODESEPARATOR OP_3
      ✓ should return fa075877cb54916236806a6562e4a8cdad48adf1268e73d72d1f9fdd867df463 for OP_0 OP_CODESEPARATOR OP_4
    hashForWitnessV0
      ✓ should return c37af31116d1b27caf68aae9e3ac82f1477929014d5b917657d0eb49478cb670 for case "Native P2WPKH with SIGHASH_ALL"
      ✓ should return 64f3b0f4dd2bb3aa1ce8566d220cc74dda9df97d8490cc81d89d735c92e59fb6 for case "P2WPKH with SIGHASH_ALL"
      ✓ should return 185c0be5263dce5b4bb50a047973c1b6272bfbd0103a89444597dc40b248ee7c for case "P2WSH with SIGHASH_ALL"
      ✓ should return e9733bc60ea13c95c6527066bb975a2ff29a925e80aa14c213f686cbae5d2f36 for case "P2WSH with SIGHASH_NONE"
      ✓ should return 1e1f1c303dc025bd664acb72e583e933fae4cff9148bf78c157d1e8f78530aea for case "P2WSH with SIGHASH_SINGLE"
      ✓ should return 2a67f03e63a6a422125878b40b82da593be8d4efaafe88ee528af6e5a9955c6e for case "P2WSH with SIGHASH_ALL | SIGHASH_ANYONECANPAY"
      ✓ should return 781ba15f3779d5542ce8ecb5c18716733a5ee42a6f51488ec96154934e2c890a for case "P2WSH with SIGHASH_NONE | SIGHASH_ANYONECANPAY"
      ✓ should return 511e8e52ed574121fc1b654970395502128263f62662e076dc6baf05c2e6a99b for case "P2WSH with SIGHASH_SINGLE | SIGHASH_ANYONECANPAY"
    setWitness
      ✓ only accepts a a witness stack (Array of Buffers)

  TransactionBuilder
    fromTransaction
      ✓ returns TransactionBuilder, with Transaction w/ pubKeyHash -> pubKeyHash
      ✓ returns TransactionBuilder, with Transaction w/ pubKey -> pubKeyHash
      ✓ returns TransactionBuilder, with Transaction w/ scriptHash(pubKeyHash) -> pubKeyHash
      ✓ returns TransactionBuilder, with Transaction w/ scriptHash(multisig 2-of-2) -> pubKeyHash
      ✓ returns TransactionBuilder, with Transaction w/ multisig 2-of-2 -> pubKeyHash
      ✓ returns TransactionBuilder, with Transaction w/ multisig 2-of-3 -> pubKeyHash
      ✓ returns TransactionBuilder, with Transaction w/ multisig 2-of-2 (reverse order) -> pubKeyHash
      ✓ returns TransactionBuilder, with Transaction w/ scriptHash(multisig 2-of-3)
      ✓ returns TransactionBuilder, with Transaction w/ scriptHash(multisig 2-of-3), different hash types
      ✓ returns TransactionBuilder, with Transaction w/ scriptHash(pubKey) -> pubKeyHash
      ✓ returns TransactionBuilder, with Transaction w/ non-zero vin inputs
      ✓ returns TransactionBuilder, with Transaction w/ non-default input sequence numbers, version and locktime
      ✓ returns TransactionBuilder, with Transaction w/ nLockTime, pubKeyHash -> pubKeyHash
      ✓ returns TransactionBuilder, with Transaction w/ 1 pubKeyHash transaction input (Issue #644)
      ✓ returns TransactionBuilder, with Transaction w/ pubKeyHash -> P2WPKH
      ✓ returns TransactionBuilder, with Transaction w/ pubKeyHash -> P2WSH
      ✓ returns TransactionBuilder, with Transaction w/ P2WPKH -> P2WPKH
      ✓ returns TransactionBuilder, with Transaction w/ P2WSH|P2PK -> P2PKH
      ✓ returns TransactionBuilder, with Sighash: SINGLE (random)
      ✓ returns TransactionBuilder, with Sighash: ALL
      ✓ returns TransactionBuilder, with Sighash: ALL | ANYONECANPAY
      ✓ returns TransactionBuilder, with Sighash: SINGLE
      ✓ returns TransactionBuilder, with Sighash: SINGLE|ANYONECANPAY
      ✓ returns TransactionBuilder, with Sighash: NONE
      ✓ returns TransactionBuilder, with Sighash: NONE | ANYONECANPAY
      ✓ returns TransactionBuilder, with Sighash V1: ALL
      ✓ returns TransactionBuilder, with Sighash V1: ALL 2
      ✓ returns TransactionBuilder, with Sighash V1: 6-of-6
      ✓ returns TransactionBuilder, with P2PK
      ✓ returns TransactionBuilder, with P2SH P2PK
      ✓ returns TransactionBuilder, with P2WSH P2PK
      ✓ returns TransactionBuilder, with P2SH P2WSH P2PK
      ✓ returns TransactionBuilder, with P2PKH
      ✓ returns TransactionBuilder, with P2SH P2PKH
      ✓ returns TransactionBuilder, with P2WSH P2PKH
      ✓ returns TransactionBuilder, with P2SH P2WSH P2PKH
      ✓ returns TransactionBuilder, with Multisig
      ✓ returns TransactionBuilder, with P2SH Multisig
      ✓ returns TransactionBuilder, with P2WSH Multisig
      ✓ returns TransactionBuilder, with P2SH P2WSH Multisig
      ✓ returns TransactionBuilder, with P2WKH
      ✓ returns TransactionBuilder, with P2SH P2WKH
      ✓ returns TransactionBuilder, with P2SH(P2WSH(multisig 2-of-2)), incomplete
      ✓ returns TransactionBuilder, with P2SH(P2WSH(multisig 2-of-2))
      ✓ returns TransactionBuilder, with P2WSH(multisig 2-of-3) -> P2PKH
      ✓ returns TransactionBuilder, with Transaction w/ scriptHash(multisig 2-of-2) -> OP_RETURN | 1 OP_0, no signatures
      ✓ returns TransactionBuilder, with Transaction w/ scriptHash(multisig 2-of-2) -> OP_RETURN | missing OP_0, 1 signature
      ✓ returns TransactionBuilder, with Transaction w/ scriptHash(multisig 2-of-2) -> OP_RETURN | no OP_0, 2 signatures
      ✓ correctly classifies transaction inputs
      ✓ throws coinbase inputs not supported
    addInput for bitcoin
      ✓ accepts a txHash, index [and sequence number]
      ✓ accepts a txHash, index [, sequence number and scriptPubKey]
      ✓ accepts a prevTx, index [and sequence number]
      ✓ returns the input index
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addInput for bitcoincash
      ✓ accepts a txHash, index [and sequence number]
      ✓ accepts a txHash, index [, sequence number and scriptPubKey]
      ✓ accepts a prevTx, index [and sequence number]
      ✓ returns the input index
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addInput for bitcoingold
      ✓ accepts a txHash, index [and sequence number]
      ✓ accepts a txHash, index [, sequence number and scriptPubKey]
      ✓ accepts a prevTx, index [and sequence number]
      ✓ returns the input index
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addInput for bitcoinsv
      ✓ accepts a txHash, index [and sequence number]
      ✓ accepts a txHash, index [, sequence number and scriptPubKey]
      ✓ accepts a prevTx, index [and sequence number]
      ✓ returns the input index
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addInput for dash
      ✓ accepts a txHash, index [and sequence number]
      ✓ accepts a txHash, index [, sequence number and scriptPubKey]
      ✓ accepts a prevTx, index [and sequence number]
      ✓ returns the input index
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addInput for litecoin
      ✓ accepts a txHash, index [and sequence number]
      ✓ accepts a txHash, index [, sequence number and scriptPubKey]
      ✓ accepts a prevTx, index [and sequence number]
      ✓ returns the input index
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addInput for tent
      ✓ accepts a txHash, index [and sequence number]
      ✓ accepts a txHash, index [, sequence number and scriptPubKey]
      ✓ accepts a prevTx, index [and sequence number]
      ✓ returns the input index
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addInput for zcash
      ✓ accepts a txHash, index [and sequence number]
      ✓ accepts a txHash, index [, sequence number and scriptPubKey]
      ✓ accepts a prevTx, index [and sequence number]
      ✓ returns the input index
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addOutput for bitcoin
      ✓ accepts an address string and value
      ✓ accepts a ScriptPubKey and value
      ✓ throws if address is of the wrong network
      ✓ add second output after signed first input with SIGHASH_NONE
      ✓ add first output after signed first input with SIGHASH_NONE
      ✓ add second output after signed first input with SIGHASH_SINGLE
      ✓ add first output after signed first input with SIGHASH_SINGLE
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addOutput for bitcoincash
      ✓ accepts an address string and value
      ✓ accepts a ScriptPubKey and value
      ✓ throws if address is of the wrong network
      ✓ add second output after signed first input with SIGHASH_NONE
      ✓ add first output after signed first input with SIGHASH_NONE
      ✓ add second output after signed first input with SIGHASH_SINGLE
      ✓ add first output after signed first input with SIGHASH_SINGLE
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addOutput for bitcoingold
      ✓ accepts an address string and value
      ✓ accepts a ScriptPubKey and value
      ✓ throws if address is of the wrong network
      ✓ add second output after signed first input with SIGHASH_NONE
      ✓ add first output after signed first input with SIGHASH_NONE
      ✓ add second output after signed first input with SIGHASH_SINGLE
      ✓ add first output after signed first input with SIGHASH_SINGLE
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addOutput for bitcoinsv
      ✓ accepts an address string and value
      ✓ accepts a ScriptPubKey and value
      ✓ throws if address is of the wrong network
      ✓ add second output after signed first input with SIGHASH_NONE
      ✓ add first output after signed first input with SIGHASH_NONE
      ✓ add second output after signed first input with SIGHASH_SINGLE
      ✓ add first output after signed first input with SIGHASH_SINGLE
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addOutput for dash
      ✓ accepts an address string and value
      ✓ accepts a ScriptPubKey and value
      ✓ throws if address is of the wrong network
      ✓ add second output after signed first input with SIGHASH_NONE
      ✓ add first output after signed first input with SIGHASH_NONE
      ✓ add second output after signed first input with SIGHASH_SINGLE
      ✓ add first output after signed first input with SIGHASH_SINGLE
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addOutput for litecoin
      ✓ accepts an address string and value
      ✓ accepts a ScriptPubKey and value
      ✓ throws if address is of the wrong network
      ✓ add second output after signed first input with SIGHASH_NONE
      ✓ add first output after signed first input with SIGHASH_NONE
      ✓ add second output after signed first input with SIGHASH_SINGLE
      ✓ add first output after signed first input with SIGHASH_SINGLE
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addOutput for tent
      ✓ accepts an address string and value
      ✓ accepts a ScriptPubKey and value
      ✓ throws if address is of the wrong network
      ✓ add second output after signed first input with SIGHASH_NONE
      ✓ add first output after signed first input with SIGHASH_NONE
      ✓ add second output after signed first input with SIGHASH_SINGLE
      ✓ add first output after signed first input with SIGHASH_SINGLE
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    addOutput for zcash
      ✓ accepts an address string and value
      ✓ accepts a ScriptPubKey and value
      ✓ throws if address is of the wrong network
      ✓ add second output after signed first input with SIGHASH_NONE
      ✓ add first output after signed first input with SIGHASH_NONE
      ✓ add second output after signed first input with SIGHASH_SINGLE
      ✓ add first output after signed first input with SIGHASH_SINGLE
      ✓ throws if SIGHASH_ALL has been used to sign any existing scriptSigs
    setLockTime
      ✓ throws if if there exist any scriptSigs
    sign
      ✓ supports the alternative abstract interface { publicKey, sign }
      ✓ throws on Input didn\'t match witnessValue (Transaction w/ witness value mismatch)
      ✓ throws on Signature already exists (Too many signatures - pubKeyHash)
      ✓ throws on BIP143 rejects uncompressed public keys in P2WPKH or P2WSH
      ✓ throws on RedeemScript not supported "OP_RETURN 06deadbeef03f895a2ad89fb6d696497af486cb7c644a27aa568c7a18dd06113401115185474"
      ✓ throws on PrevOutScript is scripthash, requires redeemScript
      ✓ throws on Inconsistent redeemScript
      ✓ throws on RedeemScript not supported "OP_HASH160 7f67f0521934a57d3039f77f9f32cf313f3ac74b OP_EQUAL"
      ✓ throws on PrevOutScript must be P2SH
      ✓ throws on Signature already exists (Too many signatures - scriptHash(multisig 1-of-1))
      ✓ throws on Inconsistent network (Wrong network for keyPair)
      ✓ throws on Key pair cannot sign for this input (Wrong key pair for multisig redeemScript)
      ✓ throws on nulldata not supported
    build
      ✓ builds "Transaction w/ pubKeyHash -> pubKeyHash"
      ✓ builds "Transaction w/ pubKey -> pubKeyHash"
      ✓ builds "Transaction w/ scriptHash(pubKeyHash) -> pubKeyHash"
      ✓ builds "Transaction w/ scriptHash(multisig 2-of-2) -> pubKeyHash"
      ✓ builds "Transaction w/ multisig 2-of-2 -> pubKeyHash"
      ✓ builds "Transaction w/ multisig 2-of-3 -> pubKeyHash"
      ✓ builds "Transaction w/ multisig 2-of-2 (reverse order) -> pubKeyHash"
      ✓ builds "Transaction w/ scriptHash(multisig 2-of-3)"
      ✓ builds "Transaction w/ scriptHash(multisig 2-of-3), different hash types"
      ✓ builds "Transaction w/ scriptHash(pubKey) -> pubKeyHash"
      ✓ builds "Transaction w/ non-zero vin inputs"
      ✓ builds "Transaction w/ non-default input sequence numbers, version and locktime"
      ✓ builds "Transaction w/ nLockTime, pubKeyHash -> pubKeyHash"
      ✓ builds "Transaction w/ 1 pubKeyHash transaction input (Issue #644)"
      ✓ builds "Transaction w/ pubKeyHash -> P2WPKH"
      ✓ builds "Transaction w/ pubKeyHash -> P2WSH"
      ✓ builds "Transaction w/ P2WPKH -> P2WPKH"
      ✓ builds "Transaction w/ P2WSH|P2PK -> P2PKH"
      ✓ builds "Sighash: SINGLE (random)"
      ✓ builds "Sighash: ALL"
      ✓ builds "Sighash: ALL | ANYONECANPAY"
      ✓ builds "Sighash: SINGLE"
      ✓ builds "Sighash: SINGLE|ANYONECANPAY"
      ✓ builds "Sighash: NONE"
      ✓ builds "Sighash: NONE | ANYONECANPAY"
      ✓ builds "Sighash V1: ALL"
      ✓ builds "Sighash V1: ALL 2"
      ✓ builds "Sighash V1: 6-of-6"
      ✓ builds "P2PK"
      ✓ builds "P2SH P2PK"
      ✓ builds "P2WSH P2PK"
      ✓ builds "P2SH P2WSH P2PK"
      ✓ builds "P2PKH"
      ✓ builds "P2SH P2PKH"
      ✓ builds "P2WSH P2PKH"
      ✓ builds "P2SH P2WSH P2PKH"
      ✓ builds "Multisig"
      ✓ builds "P2SH Multisig"
      ✓ builds "P2WSH Multisig"
      ✓ builds "P2SH P2WSH Multisig"
      ✓ builds "P2WKH"
      ✓ builds "P2SH P2WKH"
      ✓ builds "P2SH(P2WSH(multisig 2-of-2)), incomplete"
      ✓ builds "P2SH(P2WSH(multisig 2-of-2))"
      ✓ builds "P2WSH(multisig 2-of-3) -> P2PKH"
      ✓ for incomplete with 0 signatures
      ✓ for incomplete P2SH with 0 signatures
      ✓ for incomplete P2WPKH with 0 signatures
      ✓ for incomplete P2WSH with 0 signatures
      for Transaction has no inputs
        ✓ throws Transaction has no inputs
        ✓ does not throw if buildIncomplete
      for Transaction has no outputs
        ✓ throws Transaction has no outputs
        ✓ does not throw if buildIncomplete
      for Transaction has absurd fees
        ✓ throws Transaction has absurd fees
        ✓ does not throw if buildIncomplete
      for Incomplete transaction, nothing assumed
        ✓ throws Transaction is not complete
        ✓ does not throw if buildIncomplete
      for Incomplete transaction, known prevTxScript, thereby throws for missing signatures
        ✓ throws Not enough signatures provided
        ✓ does not throw if buildIncomplete
      for Duplicate transaction outs
        ✓ throws Duplicate TxOut: ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:0
        ✓ throws if Duplicate TxOut: ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:0
      for Complete transaction w/ non-standard inputs
        ✓ throws nonstandard not supported
        ✓ does not throw if buildIncomplete
    multisig
      ✓ P2SH 2-of-2 multisig, signed in correct order network=testnet
      ✓ P2SH 2-of-2 multisig, signed in shuffled order network=testnet
      ✓ P2SH 2-of-2 multisig, manually messed up order of signatures network=testnet
      ✓ P2SH 2-of-3 multisig, signed by key 1 and 2 network=testnet
      ✓ P2SH 2-of-3 multisig, signed by key 1 and 3 network=testnet
      ✓ P2SH 2-of-3 multisig, signed by key 3 and 1 network=testnet
      ✓ P2SH 2-of-3 multisig, signed by key 1 and 3, manually messed up order of signatures network=testnet
      ✓ P2SH 2-of-3 multisig, signed by key 3 and 1, manually removing OP_0s network=testnet
      ✓ P2SH 2-of-3 multisig, signed by key 1 and 2 (Dash) network=dash
      ✓ P2SH 2-of-3 multisig, signed by key 1 and 2 (Dash) - brodcasted network=dash
      ✓ P2SH 2-of-3 multisig, signed by key 1 and 2 (Dash testnet) network=dashTest
      45) Tent Sapling P2SH 2-of-3 multisig, signed by key 3 and 1 network=tentTest
      46) Tent P2SH 2-of-3 multisig, signed by key 3 and 1 network=tentTest
      ✓ Zcash Sapling P2SH 2-of-3 multisig, signed by key 3 and 1 network=zcashTest
      ✓ Zcash P2SH 2-of-3 multisig, signed by key 3 and 1 network=zcashTest
    various edge case
      ✓ should warn of high fee for segwit transaction based on VSize, not Size
      ✓ should classify witness inputs with witness = true during multisigning
      ✓ should handle badly pre-filled OP_0s
      ✓ should not classify blank scripts as nonstandard

  types
    BigInt/ECPoint
      ✓ return true for duck types
      ✓ return false for bad types
    Buffer Hash160/Hash256
      ✓ return true for valid size
      ✓ return true for oneOf
      ✓ throws for invalid size
    Satoshi
      ✓ returns false for valid for -1
      ✓ returns true for valid for 0
      ✓ returns true for valid for 1
      ✓ returns true for valid for 2099999900000000
      ✓ returns true for valid for 2100000000000000
      ✓ returns false for valid for 2100000100000000


  3603 passing (7s)
  7 pending
  46 failing

  1) address
       fromBase58Check
         decodes s1U1W3Hpkp9VgbHAsgYjSeyQsxpc6S9C38p:

      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:

7208 !== 7352

      + expected - actual

      -7208
      +7352
      
      at Context.<anonymous> (test/address.js:17:16)
      at processImmediate (internal/timers.js:461:21)

  2) address
       fromBase58Check
         decodes tmGX79mEeSnjMVwSnsh15LhGvCSnkHF9bbL:

      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
[32m+ actual[39m [31m- expected[39m

[32m+[39m '4aa877ef786e53288bde140170200d4459f6b81f'
[31m-[39m '4AA877EF786E53288BDE140170200D4459F6B81F'
      + expected - actual

      -4aa877ef786e53288bde140170200d4459f6b81f
      +4AA877EF786E53288BDE140170200D4459F6B81F
      
      at Context.<anonymous> (test/address.js:18:16)
      at processImmediate (internal/timers.js:461:21)

  3) address
       toBase58Check
         encodes 4AA877EF786E53288BDE140170200D4459F6B81F (tent):

      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
[32m+ actual[39m [31m- expected[39m

[32m+[39m 't1QgMpvkF48DrMhFMCxhLV2cAbThvsCVTes'
[31m-[39m 's1U1W3Hpkp9VgbHAsgYjSeyQsxpc6S9C38p'
      + expected - actual

      -t1QgMpvkF48DrMhFMCxhLV2cAbThvsCVTes
      +s1U1W3Hpkp9VgbHAsgYjSeyQsxpc6S9C38p
      
      at Context.<anonymous> (test/address.js:81:16)
      at processImmediate (internal/timers.js:461:21)

  4) address
       toOutputScript
         decodes OP_DUP OP_HASH160 4AA877EF786E... (tent):

      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
[32m+ actual[39m [31m- expected[39m

[32m+[39m 'OP_DUP OP_HASH160 4aa877ef786e53288bde140170200d4459f6b81f OP_EQUALVERIFY OP_CHECKSIG'
[31m-[39m 'OP_DUP OP_HASH160 4AA877EF786E53288BDE140170200D4459F6B81F OP_EQUALVERIFY OP_CHECKSIG'
                      ^
      + expected - actual

      -OP_DUP OP_HASH160 4aa877ef786e53288bde140170200d4459f6b81f OP_EQUALVERIFY OP_CHECKSIG
      +OP_DUP OP_HASH160 4AA877EF786E53288BDE140170200D4459F6B81F OP_EQUALVERIFY OP_CHECKSIG
      
      at Context.<anonymous> (test/address.js:112:16)
      at processImmediate (internal/timers.js:461:21)

  5) address
       toOutputScript
         decodes OP_DUP OP_HASH160 4AA877EF786E... (tentTest):

      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
[32m+ actual[39m [31m- expected[39m

[32m+[39m 'OP_DUP OP_HASH160 4aa877ef786e53288bde140170200d4459f6b81f OP_EQUALVERIFY OP_CHECKSIG'
[31m-[39m 'OP_DUP OP_HASH160 4AA877EF786E53288BDE140170200D4459F6B81F OP_EQUALVERIFY OP_CHECKSIG'
                      ^
      + expected - actual

      -OP_DUP OP_HASH160 4aa877ef786e53288bde140170200d4459f6b81f OP_EQUALVERIFY OP_CHECKSIG
      +OP_DUP OP_HASH160 4AA877EF786E53288BDE140170200D4459F6B81F OP_EQUALVERIFY OP_CHECKSIG
      
      at Context.<anonymous> (test/address.js:112:16)
      at processImmediate (internal/timers.js:461:21)

  6) Block (tent)
       fromBuffer/fromHex
         imports Tent Sapling 1:
     RangeError: value out of range
      at checkUInt53 (node_modules/varuint-bitcoin/index.js:8:59)
      at Object.decode (node_modules/varuint-bitcoin/index.js:73:5)
      at TentBufferReader.readVarInt (src/bufferutils.js:6:1098)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1696)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at readTransaction (src/block.js:2:278)
      at Function.Block.fromBuffer (src/block.js:2:651)
      at Function.Block.fromHex (src/block.js:2:1973)
      at Context.<anonymous> (test/forks/tent/block.js:15:27)
      at processImmediate (internal/timers.js:461:21)

  7) Block (tent)
       fromBuffer/fromHex
         imports Tent Sapling 2:
     RangeError: value out of range
      at checkUInt53 (node_modules/varuint-bitcoin/index.js:8:59)
      at Object.decode (node_modules/varuint-bitcoin/index.js:73:5)
      at TentBufferReader.readVarInt (src/bufferutils.js:6:1098)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1696)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at readTransaction (src/block.js:2:278)
      at Function.Block.fromBuffer (src/block.js:2:651)
      at Function.Block.fromHex (src/block.js:2:1973)
      at Context.<anonymous> (test/forks/tent/block.js:15:27)
      at processImmediate (internal/timers.js:461:21)

  8) Block (tent)
       toBuffer/toHex
         "before each" hook for "exports Tent Sapling 1":
     RangeError: value out of range
      at checkUInt53 (node_modules/varuint-bitcoin/index.js:8:59)
      at Object.decode (node_modules/varuint-bitcoin/index.js:73:5)
      at TentBufferReader.readVarInt (src/bufferutils.js:6:1098)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1696)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at readTransaction (src/block.js:2:278)
      at Function.Block.fromBuffer (src/block.js:2:651)
      at Function.Block.fromHex (src/block.js:2:1973)
      at Context.<anonymous> (test/forks/tent/block.js:48:23)
      at processImmediate (internal/timers.js:461:21)

  9) Block (tent)
       getHash/getId
         "before each" hook for "returns 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb for Tent Sapling 1":
     RangeError: value out of range
      at checkUInt53 (node_modules/varuint-bitcoin/index.js:8:59)
      at Object.decode (node_modules/varuint-bitcoin/index.js:73:5)
      at TentBufferReader.readVarInt (src/bufferutils.js:6:1098)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1696)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at readTransaction (src/block.js:2:278)
      at Function.Block.fromBuffer (src/block.js:2:651)
      at Function.Block.fromHex (src/block.js:2:1973)
      at Context.<anonymous> (test/forks/tent/block.js:63:23)
      at processImmediate (internal/timers.js:461:21)

  10) Block (tent)
       getUTCDate
         "before each" hook for "returns UTC date of 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb":
     RangeError: value out of range
      at checkUInt53 (node_modules/varuint-bitcoin/index.js:8:59)
      at Object.decode (node_modules/varuint-bitcoin/index.js:73:5)
      at TentBufferReader.readVarInt (src/bufferutils.js:6:1098)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1696)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at readTransaction (src/block.js:2:278)
      at Function.Block.fromBuffer (src/block.js:2:651)
      at Function.Block.fromHex (src/block.js:2:1973)
      at Context.<anonymous> (test/forks/tent/block.js:78:23)
      at processImmediate (internal/timers.js:461:21)

  11) Block (tent)
       calculateMerkleRoot
         "before each" hook for "returns 4b6285fb6f64e9d5c84c95dd90e35133550174ead06bbedce3ff49cbe993726b for 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb":
     RangeError: value out of range
      at checkUInt53 (node_modules/varuint-bitcoin/index.js:8:59)
      at Object.decode (node_modules/varuint-bitcoin/index.js:73:5)
      at TentBufferReader.readVarInt (src/bufferutils.js:6:1098)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1696)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at readTransaction (src/block.js:2:278)
      at Function.Block.fromBuffer (src/block.js:2:651)
      at Function.Block.fromHex (src/block.js:2:1973)
      at Context.<anonymous> (test/forks/tent/block.js:96:23)
      at processImmediate (internal/timers.js:461:21)

  12) Block (tent)
       checkMerkleRoot
         "before each" hook for "Tent returns true for 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb":
     RangeError: value out of range
      at checkUInt53 (node_modules/varuint-bitcoin/index.js:8:59)
      at Object.decode (node_modules/varuint-bitcoin/index.js:73:5)
      at TentBufferReader.readVarInt (src/bufferutils.js:6:1098)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1696)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at readTransaction (src/block.js:2:278)
      at Function.Block.fromBuffer (src/block.js:2:651)
      at Function.Block.fromHex (src/block.js:2:1973)
      at Context.<anonymous> (test/forks/tent/block.js:112:23)
      at processImmediate (internal/timers.js:461:21)

  13) Block (tent)
       checkProofOfWork
         "before each" hook for "Tent returns true for 0017d064ad1e2c9bb5e8544872a5d35c71e6bcf5502dc8f61266792bf4581feb":
     RangeError: value out of range
      at checkUInt53 (node_modules/varuint-bitcoin/index.js:8:59)
      at Object.decode (node_modules/varuint-bitcoin/index.js:73:5)
      at TentBufferReader.readVarInt (src/bufferutils.js:6:1098)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1696)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at readTransaction (src/block.js:2:278)
      at Function.Block.fromBuffer (src/block.js:2:651)
      at Function.Block.fromHex (src/block.js:2:1973)
      at Context.<anonymous> (test/forks/tent/block.js:126:23)
      at processImmediate (internal/timers.js:461:21)

  14) Transaction (tent)
       fromBuffer/fromHex
         imports Version 2 transaction (3:1):
     Error: Transaction has unexpected data
      at Function.Transaction.fromBuffer (src/transaction.js:17:2565)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:16:32)
      at processImmediate (internal/timers.js:461:21)

  15) Transaction (tent)
       fromBuffer/fromHex
         imports Version 2 transaction (4:0) with JoinSplit:
     Error: Transaction has unexpected data
      at Function.Transaction.fromBuffer (src/transaction.js:17:2565)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:16:32)
      at processImmediate (internal/timers.js:461:21)

  16) Transaction (tent)
       fromBuffer/fromHex
         imports Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness:
     Error: Transaction has unexpected data
      at Function.Transaction.fromBuffer (src/transaction.js:17:2565)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:16:32)
      at processImmediate (internal/timers.js:461:21)

  17) Transaction (tent)
       fromBuffer/fromHex
         imports Version 3 transaction (4:2):
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1681)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:16:32)
      at processImmediate (internal/timers.js:461:21)

  18) Transaction (tent)
       fromBuffer/fromHex
         imports Version 3 transaction (2:2):
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1894)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:16:32)
      at processImmediate (internal/timers.js:461:21)

  19) Transaction (tent)
       fromBuffer/fromHex
         imports Version 3 transaction (1:2) zero lock_time:
     RangeError: value out of range
      at checkUInt53 (node_modules/varuint-bitcoin/index.js:8:59)
      at Object.decode (node_modules/varuint-bitcoin/index.js:73:5)
      at TentBufferReader.readVarInt (src/bufferutils.js:6:1098)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1696)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:16:32)
      at processImmediate (internal/timers.js:461:21)

  20) Transaction (tent)
       fromBuffer/fromHex
         imports Version 4 transaction (1:1) zero lock_time:
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1681)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:16:32)
      at processImmediate (internal/timers.js:461:21)

  21) Transaction (tent)
       fromBuffer/fromHex
         imports Version 4 transaction, ZIP 243 Test Vector 1:
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1894)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:16:32)
      at processImmediate (internal/timers.js:461:21)

  22) Transaction (tent)
       fromBuffer/fromHex
         imports Version 4 transaction, ZIP 243 Test Vector 2:
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1894)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:16:32)
      at processImmediate (internal/timers.js:461:21)

  23) Transaction (tent)
       fromBuffer/fromHex
         exports Version 2 transaction (3:1):
     Error: Transaction has unexpected data
      at Function.Transaction.fromBuffer (src/transaction.js:17:2565)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:48:32)
      at processImmediate (internal/timers.js:461:21)

  24) Transaction (tent)
       fromBuffer/fromHex
         exports Version 2 transaction (4:0) with JoinSplit:
     Error: Transaction has unexpected data
      at Function.Transaction.fromBuffer (src/transaction.js:17:2565)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:48:32)
      at processImmediate (internal/timers.js:461:21)

  25) Transaction (tent)
       fromBuffer/fromHex
         exports Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness:
     Error: Transaction has unexpected data
      at Function.Transaction.fromBuffer (src/transaction.js:17:2565)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:48:32)
      at processImmediate (internal/timers.js:461:21)

  26) Transaction (tent)
       fromBuffer/fromHex
         exports Version 3 transaction (4:2):
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1681)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:48:32)
      at processImmediate (internal/timers.js:461:21)

  27) Transaction (tent)
       fromBuffer/fromHex
         exports Version 3 transaction (2:2):
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1894)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:48:32)
      at processImmediate (internal/timers.js:461:21)

  28) Transaction (tent)
       fromBuffer/fromHex
         exports Version 3 transaction (1:2) zero lock_time:
     RangeError: value out of range
      at checkUInt53 (node_modules/varuint-bitcoin/index.js:8:59)
      at Object.decode (node_modules/varuint-bitcoin/index.js:73:5)
      at TentBufferReader.readVarInt (src/bufferutils.js:6:1098)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1696)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:48:32)
      at processImmediate (internal/timers.js:461:21)

  29) Transaction (tent)
       fromBuffer/fromHex
         exports Version 4 transaction (1:1) zero lock_time:
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1681)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:48:32)
      at processImmediate (internal/timers.js:461:21)

  30) Transaction (tent)
       fromBuffer/fromHex
         exports Version 4 transaction, ZIP 243 Test Vector 1:
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1894)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:48:32)
      at processImmediate (internal/timers.js:461:21)

  31) Transaction (tent)
       fromBuffer/fromHex
         exports Version 4 transaction, ZIP 243 Test Vector 2:
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1894)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:48:32)
      at processImmediate (internal/timers.js:461:21)

  32) Transaction (tent)
       fromBuffer/fromHex
         clone Version 2 transaction (3:1):
     Error: Transaction has unexpected data
      at Function.Transaction.fromBuffer (src/transaction.js:17:2565)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:56:32)
      at processImmediate (internal/timers.js:461:21)

  33) Transaction (tent)
       fromBuffer/fromHex
         clone Version 2 transaction (4:0) with JoinSplit:
     Error: Transaction has unexpected data
      at Function.Transaction.fromBuffer (src/transaction.js:17:2565)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:56:32)
      at processImmediate (internal/timers.js:461:21)

  34) Transaction (tent)
       fromBuffer/fromHex
         clone Version 2 transaction (0:1) with JoinSplit and bits that look like marker and witness:
     Error: Transaction has unexpected data
      at Function.Transaction.fromBuffer (src/transaction.js:17:2565)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:56:32)
      at processImmediate (internal/timers.js:461:21)

  35) Transaction (tent)
       fromBuffer/fromHex
         clone Version 3 transaction (4:2):
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1681)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:56:32)
      at processImmediate (internal/timers.js:461:21)

  36) Transaction (tent)
       fromBuffer/fromHex
         clone Version 3 transaction (2:2):
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1894)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:56:32)
      at processImmediate (internal/timers.js:461:21)

  37) Transaction (tent)
       fromBuffer/fromHex
         clone Version 3 transaction (1:2) zero lock_time:
     RangeError: value out of range
      at checkUInt53 (node_modules/varuint-bitcoin/index.js:8:59)
      at Object.decode (node_modules/varuint-bitcoin/index.js:73:5)
      at TentBufferReader.readVarInt (src/bufferutils.js:6:1098)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1696)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:56:32)
      at processImmediate (internal/timers.js:461:21)

  38) Transaction (tent)
       fromBuffer/fromHex
         clone Version 4 transaction (1:1) zero lock_time:
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1681)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:56:32)
      at processImmediate (internal/timers.js:461:21)

  39) Transaction (tent)
       fromBuffer/fromHex
         clone Version 4 transaction, ZIP 243 Test Vector 1:
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1894)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:56:32)
      at processImmediate (internal/timers.js:461:21)

  40) Transaction (tent)
       fromBuffer/fromHex
         clone Version 4 transaction, ZIP 243 Test Vector 2:
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1894)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:56:32)
      at processImmediate (internal/timers.js:461:21)

  41) Transaction (tent)
       hashForTentSignature
         should return 967f00c292b9af74c7e770bd393f80b6a6d1c50ae639356dd66d29020d5904ed for version 3 transaction (3:4) from Tent test data:

      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
[32m+ actual[39m [31m- expected[39m

[32m+[39m '12d25b2fbab8e7d43dfa3890580fa72f2f43ea9e19e10b667b38b74b6576f13b'
[31m-[39m 'ed04590d02296dd66d3539e60ac5d1a6b6803f39bd70e7c774afb992c2007f96'
      + expected - actual

      -12d25b2fbab8e7d43dfa3890580fa72f2f43ea9e19e10b667b38b74b6576f13b
      +ed04590d02296dd66d3539e60ac5d1a6b6803f39bd70e7c774afb992c2007f96
      
      at Context.<anonymous> (test/forks/tent/transaction.js:74:16)
      at processImmediate (internal/timers.js:461:21)

  42) Transaction (tent)
       hashForTentSignature
         should return 44db5f1c43284937e6bb2b25790c06fb2f22b5a25062e8455b964dbbcd9f64de for version 3 transaction (3:2) from Tent test data:

      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
[32m+ actual[39m [31m- expected[39m

[32m+[39m '6141aaf903a130de050650316301a95561c0d361063ea4b19ce10b137ac52617'
[31m-[39m 'de649fcdbb4d965b45e86250a2b5222ffb060c79252bbbe6374928431c5fdb44'
      + expected - actual

      -6141aaf903a130de050650316301a95561c0d361063ea4b19ce10b137ac52617
      +de649fcdbb4d965b45e86250a2b5222ffb060c79252bbbe6374928431c5fdb44
      
      at Context.<anonymous> (test/forks/tent/transaction.js:74:16)
      at processImmediate (internal/timers.js:461:21)

  43) Transaction (tent)
       hashForTentSignature
         should return ed51c8db5ba2accabb1d8a718ecc0e61a55ebdf4a2a2aaa3999593e6c207f9c1 for version 3 transaction (4:3) from Tent test data:

      AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:
[32m+ actual[39m [31m- expected[39m

[32m+[39m '9a95e680a8d989eab4c8344c0bb9fc73b647946160aabd6138890e020465315c'
[31m-[39m 'c1f907c2e6939599a3aaa2a2f4bd5ea5610ecc8e718a1dbbcaaca25bdbc851ed'
      + expected - actual

      -9a95e680a8d989eab4c8344c0bb9fc73b647946160aabd6138890e020465315c
      +c1f907c2e6939599a3aaa2a2f4bd5ea5610ecc8e718a1dbbcaaca25bdbc851ed
      
      at Context.<anonymous> (test/forks/tent/transaction.js:74:16)
      at processImmediate (internal/timers.js:461:21)

  44) Transaction (tent)
       hashForTentSignature
         should throw on version 3 with joinsplits:
     Error: Cannot read slice out of bounds
      at TentBufferReader.readSlice (src/bufferutils.js:6:1372)
      at TentBufferReader.readVarSlice (src/bufferutils.js:6:1681)
      at Function.Transaction.fromBuffer (src/transaction.js:16:1960)
      at Function.Transaction.fromHex (src/transaction.js:17:2810)
      at Context.<anonymous> (test/forks/tent/transaction.js:82:30)
      at processImmediate (internal/timers.js:461:21)

  45) TransactionBuilder
       multisig
         Tent Sapling P2SH 2-of-3 multisig, signed by key 3 and 1 network=tentTest:
     Error: expiryHeight can only be set for Zcash or Tent starting at overwinter version. Current network coin: tent, version: 4
      at TransactionBuilder.setExpiryHeight (src/transaction_builder.js:22:2911)
      at construct (test/transaction_builder.js:24:41)
      at Context.<anonymous> (test/transaction_builder.js:458:19)
      at processImmediate (internal/timers.js:461:21)

  46) TransactionBuilder
       multisig
         Tent P2SH 2-of-3 multisig, signed by key 3 and 1 network=tentTest:
     Error: expiryHeight can only be set for Zcash or Tent starting at overwinter version. Current network coin: tent, version: 3
      at TransactionBuilder.setVersionGroupId (src/transaction_builder.js:22:2150)
      at construct (test/transaction_builder.js:25:43)
      at Context.<anonymous> (test/transaction_builder.js:458:19)
      at processImmediate (internal/timers.js:461:21)



---------------------------------|----------|----------|----------|----------|-------------------|
File                             |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |
---------------------------------|----------|----------|----------|----------|-------------------|
All files                        |    94.38 |    89.93 |    94.79 |    95.49 |                   |
 src                             |    95.19 |    89.49 |    99.27 |    95.77 |                   |
  address.js                     |      100 |    95.24 |      100 |      100 |             87,91 |
  block.js                       |    99.24 |       96 |      100 |      100 |            15,189 |
  bufferutils.js                 |    82.28 |    68.75 |    95.65 |    82.89 |... 35,36,37,38,40 |
  coins.js                       |    93.18 |     91.3 |      100 |    92.68 |        60,111,119 |
  crypto.js                      |    91.67 |       50 |      100 |    91.67 |                 9 |
  ecdsa.js                       |    93.85 |    80.95 |      100 |      100 |      89,92,95,142 |
  ecpair.js                      |      100 |    97.73 |      100 |      100 |                48 |
  ecsignature.js                 |      100 |    92.86 |      100 |      100 |                81 |
  fastcurve.js                   |    88.46 |       50 |      100 |    88.46 |          32,52,79 |
  hdnode.js                      |    93.89 |    84.29 |       95 |    94.12 |... 53,354,355,358 |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  networks.js                    |      100 |      100 |      100 |      100 |                   |
  script.js                      |    98.15 |    97.14 |      100 |     98.9 |               139 |
  script_number.js               |       95 |    89.47 |      100 |      100 |         5,9,10,12 |
  transaction.js                 |    95.77 |    88.47 |      100 |    95.65 |... 26,833,941,968 |
  transaction_builder.js         |    93.87 |    89.36 |      100 |    94.98 |... 63,586,621,622 |
  types.js                       |      100 |      100 |      100 |      100 |                   |
 src/bitgo                       |    92.31 |     87.5 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  keyutil.js                     |    91.67 |     87.5 |      100 |      100 |                29 |
 src/forks/tent                  |    71.64 |       50 |       60 |    71.21 |                   |
  bufferutils.js                 |    71.21 |       50 |       60 |    70.77 |... 46,147,151,152 |
  version.js                     |      100 |      100 |      100 |      100 |                   |
 src/forks/zcash                 |      100 |      100 |      100 |      100 |                   |
  bufferutils.js                 |      100 |      100 |      100 |      100 |                   |
  version.js                     |      100 |      100 |      100 |      100 |                   |
 src/templates                   |    96.67 |    93.75 |    85.71 |      100 |                   |
  index.js                       |    97.78 |    96.43 |      100 |      100 |                33 |
  nulldata.js                    |    93.33 |       75 |       75 |      100 |                30 |
 src/templates/multisig          |    95.95 |    94.44 |    83.33 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  input.js                       |    97.06 |    93.75 |     87.5 |      100 |                38 |
  output.js                      |    94.87 |       95 |       75 |      100 |                23 |
 src/templates/pubkey            |    92.86 |      100 |       80 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  input.js                       |    92.86 |      100 |    83.33 |      100 |                   |
  output.js                      |    92.31 |      100 |       75 |      100 |                   |
 src/templates/pubkeyhash        |    92.86 |      100 |       80 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  input.js                       |    92.86 |      100 |    83.33 |      100 |                   |
  output.js                      |    92.31 |      100 |       75 |      100 |                   |
 src/templates/scripthash        |    94.74 |    96.43 |       80 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  input.js                       |    95.35 |    95.83 |    83.33 |      100 |                27 |
  output.js                      |    92.31 |      100 |       75 |      100 |                   |
 src/templates/witnesscommitment |    73.68 |       75 |      100 |    72.22 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  output.js                      |    72.22 |       75 |      100 |    70.59 |    25,26,27,29,35 |
 src/templates/witnesspubkeyhash |    92.31 |      100 |    77.78 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  input.js                       |    91.67 |      100 |       80 |      100 |                   |
  output.js                      |    92.31 |      100 |       75 |      100 |                   |
 src/templates/witnessscripthash |    88.64 |    85.71 |       75 |    97.44 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  input.js                       |    86.67 |    83.33 |       75 |    96.15 |                35 |
  output.js                      |    92.31 |      100 |       75 |      100 |                   |
---------------------------------|----------|----------|----------|----------|-------------------|
